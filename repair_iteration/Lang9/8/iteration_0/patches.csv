bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  1;  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]  Strategy  strategy=  strategies[i++]  &  1;  [BUGGY]  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  1;	Strategy  strategy=  strategies[i++];  	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  0xff;  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]  Strategy  strategy=  strategies[i++]  &  0xff;  [BUGGY]  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  0xff;	Strategy  strategy=  strategies[i++];  	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    [BUGGY]  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	  	Strategy  strategy=  strategies[i++];  	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]    Matcher  matcher  =  parsePattern.matcher(source.substring(i));  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    Matcher  matcher  =  parsePattern.matcher(source.substring(i));  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    Matcher  matcher  =  parsePattern.matcher(source.substring(i));		non-compiled	[CE]  <identifier>  expected	16	None	add
5	[BUG]  [BUGGY]    Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1));  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1));  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1));		non-compiled	[CE]  <identifier>  expected	16	None	add
6	[BUG]  [BUGGY]    Matcher  matcher  =  parsePattern.matcher(source.substring(i).trim());  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    Matcher  matcher  =  parsePattern.matcher(source.substring(i).trim());  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    Matcher  matcher  =  parsePattern.matcher(source.substring(i).trim());		non-compiled	[CE]  <identifier>  expected	16	None	add
7	[BUG]  [BUGGY]    pos.setIndex(i);  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    pos.setIndex(i);  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    pos.setIndex(i);		non-compiled	[CE]  <identifier>  expected	16	None	add
8	[BUG]  [BUGGY]    Tag  tz  =  parsePattern.matcher(source.substring(i));  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    Tag  tz  =  parsePattern.matcher(source.substring(i));  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    Tag  tz  =  parsePattern.matcher(source.substring(i));		non-compiled	[CE]  <identifier>  expected	16	None	add
9	[BUG]  [BUGGY]    cal  =  Calendar.getInstance(timeZone,  i);  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    cal  =  Calendar.getInstance(timeZone,  i);  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    cal  =  Calendar.getInstance(timeZone,  i);		non-compiled	[CE]  <identifier>  expected	16	None	add
10	[BUG]  [BUGGY]    Tag  tz  =  parsePattern.matcher(source.substring(i  +  1));  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    Tag  tz  =  parsePattern.matcher(source.substring(i  +  1));  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    Tag  tz  =  parsePattern.matcher(source.substring(i  +  1));		non-compiled	[CE]  <identifier>  expected	16	None	add
11	[BUG]  [BUGGY]    Tag  tz  =(Tag)cal.get(i);  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    Tag  tz  =(Tag)cal.get(i);  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    Tag  tz  =(Tag)cal.get(i);		non-compiled	[CE]  <identifier>  expected	16	None	add
12	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i];  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]  Strategy  strategy=  strategies[i];  [BUGGY]  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i];	Strategy  strategy=  strategies[i++];  	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  +  1];  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]  Strategy  strategy=  strategies[i  +  1];  [BUGGY]  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  +  1];	Strategy  strategy=  strategies[i++];  	non-compiled	[CE]  <identifier>  expected	15	None	replace
14	[BUG]  [BUGGY]    int  i  =  parsePattern.parseIndex(source.substring(i));  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    int  i  =  parsePattern.parseIndex(source.substring(i));  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    int  i  =  parsePattern.parseIndex(source.substring(i));		non-compiled	[CE]  <identifier>  expected	16	None	add
15	[BUG]  [BUGGY]    int  i  =  parsePattern.matcher(source.substring(0,  i));  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    int  i  =  parsePattern.matcher(source.substring(0,  i));  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    int  i  =  parsePattern.matcher(source.substring(0,  i));		non-compiled	[CE]  <identifier>  expected	16	None	add
16	[BUG]  [BUGGY]    cal.setIndex(i);  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    cal.setIndex(i);  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    cal.setIndex(i);		non-compiled	[CE]  <identifier>  expected	16	None	add
17	[BUG]  [BUGGY]    int  i  =  parsePattern.getIndex(source.substring(i));  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  [BUGGY]    int  i  =  parsePattern.getIndex(source.substring(i));  [BUGGY]  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	    int  i  =  parsePattern.getIndex(source.substring(i));		non-compiled	[CE]  <identifier>  expected	16	None	add
