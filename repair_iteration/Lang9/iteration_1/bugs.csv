bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action71	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  Pattern  getParsePattern()  {  [BUGGY]    Pattern  parsePattern  =  getParsePattern();  [BUGGY]  return  parsePattern;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	    Pattern  parsePattern  =  getParsePattern();		compilable	  [FE]  AssertionError  testLANG_832	2	2	add
72	[BUG]  [BUGGY]    Pattern  parsePattern  =  getParsePattern();  [FE]  AssertionError  testLANG_832  [CONTEXT]  Pattern  getParsePattern()  {  [BUGGY]    Pattern  parsePattern  =  getParsePattern();  [BUGGY]  return  parsePattern;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	    Pattern  parsePattern  =  getParsePattern();		compilable	  [FE]  AssertionError  testLANG_832	2	2	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));  [BUGGY]    Locale  locale  =  getLocale();  [BUGGY]  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	251	251	2	add	    Locale  locale  =  getLocale();		compilable	  [FE]  AssertionError  testLANG_832	28	2	add
122	[BUG]  [BUGGY]    Locale  locale  =  getLocale();  [FE]  AssertionError  testLANG_832  [CONTEXT]  public  Date  parse(String  source)  throws  ParseException  {  Date  date=  parse(source,  new  ParsePosition(0));  [BUGGY]    Locale  locale  =  getLocale();  [BUGGY]  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	251	251	2	replace	    Locale  locale  =  getLocale();		compilable	  [FE]  AssertionError  testLANG_832	28	2	add
135	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  private  Strategy  getStrategy(String  formatField)  {  switch(formatField.charAt(0))  {  case  '\'':  if(formatField.length()>2)  {  [BUGGY]    [BUGGY]  }  default:  return  new  CopyQuotedStrategy(formatField);  case  'D':  return  DAY_OF_YEAR_STRATEGY;  case  'E':  return  DAY_OF_WEEK_STRATEGY;  case  'F':  return  DAY_OF_WEEK_IN_MONTH_STRATEGY;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getStrategy  [RETURN_TYPE]  FastDateParser$Strategy  String  formatField  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  value  long  serialVersionUID  int  $anonymous0  count  field  i  idx  offset  thisYear  trial  twoDigitYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  TimeZoneStrategy  inCache  tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	538	538	2	add	  	formatField=  formatField.substring(1,  formatField.length()-1);  	compilable	  [FE]  AssertionError  testLANG_832	5	2	replace
136	[BUG]  [BUGGY]    [FE]  AssertionError  testLANG_832  [CONTEXT]  private  Strategy  getStrategy(String  formatField)  {  switch(formatField.charAt(0))  {  case  '\'':  if(formatField.length()>2)  {  [BUGGY]    [BUGGY]  }  default:  return  new  CopyQuotedStrategy(formatField);  case  'D':  return  DAY_OF_YEAR_STRATEGY;  case  'E':  return  DAY_OF_WEEK_STRATEGY;  case  'F':  return  DAY_OF_WEEK_IN_MONTH_STRATEGY;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getStrategy  [RETURN_TYPE]  FastDateParser$Strategy  String  formatField  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  value  long  serialVersionUID  int  $anonymous0  count  field  i  idx  offset  thisYear  trial  twoDigitYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  TimeZoneStrategy  inCache  tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	538	538	2	replace	  	formatField=  formatField.substring(1,  formatField.length()-1);  	compilable	  [FE]  AssertionError  testLANG_832	5	2	replace
251	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  Pattern  getParsePattern()  {  [BUGGY]  return  this.parsePattern;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	return  this.parsePattern;	return  parsePattern;  	compilable	  [FE]  AssertionError  testLANG_832	1	2	replace
252	[BUG]  [BUGGY]  return  this.parsePattern;  [FE]  AssertionError  testLANG_832  [CONTEXT]  Pattern  getParsePattern()  {  [BUGGY]  return  this.parsePattern;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	return  this.parsePattern;	return  parsePattern;  	compilable	  [FE]  AssertionError  testLANG_832	1	2	replace
252	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  Pattern  getParsePattern()  {  [BUGGY]  return  this.formatPattern;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	return  this.formatPattern;	return  parsePattern;  	compilable	  [FE]  AssertionError  testLANG_832	1	2	replace
253	[BUG]  [BUGGY]  return  this.formatPattern;  [FE]  AssertionError  testLANG_832  [CONTEXT]  Pattern  getParsePattern()  {  [BUGGY]  return  this.formatPattern;  [BUGGY]  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	return  this.formatPattern;	return  parsePattern;  	compilable	  [FE]  AssertionError  testLANG_832	1	2	replace
271	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  public  Date  parse(String  source)  throws  ParseException  {  [BUGGY]    Locale  locale  =  getLocale();  [BUGGY]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  return  date;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	250	250	2	add	    Locale  locale  =  getLocale();		compilable	  [FE]  AssertionError  testLANG_832	26	2	add
272	[BUG]  [BUGGY]    Locale  locale  =  getLocale();  [FE]  AssertionError  testLANG_832  [CONTEXT]  public  Date  parse(String  source)  throws  ParseException  {  [BUGGY]    Locale  locale  =  getLocale();  [BUGGY]  Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(   "(The   "  +locale  +   "  locale  does  not  support  dates  before  1868  AD)\n "  +   "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  throw  new  ParseException( "Unparseable  date:  \ " "+source+ "\ "  does  not  match   "+parsePattern.pattern(),  0);  }  return  date;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	250	250	2	replace	    Locale  locale  =  getLocale();		compilable	  [FE]  AssertionError  testLANG_832	26	2	add
121	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  [BUGGY]    pos.setIndex(offset+matcher.end());  [BUGGY]  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	add	    pos.setIndex(offset+matcher.end());		compilable	  [FE]  AssertionError  testLANG_832	24	2	add
122	[BUG]  [BUGGY]    pos.setIndex(offset+matcher.end());  [FE]  AssertionError  testLANG_832  [CONTEXT]  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  [BUGGY]    pos.setIndex(offset+matcher.end());  [BUGGY]  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	replace	    pos.setIndex(offset+matcher.end());		compilable	  [FE]  AssertionError  testLANG_832	24	2	add
122	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  [BUGGY]    pos.setIndex(offset+matcher.start());  [BUGGY]  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	add	    pos.setIndex(offset+matcher.start());		compilable	  [FE]  AssertionError  testLANG_832	24	2	add
123	[BUG]  [BUGGY]    pos.setIndex(offset+matcher.start());  [FE]  AssertionError  testLANG_832  [CONTEXT]  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  [BUGGY]    pos.setIndex(offset+matcher.start());  [BUGGY]  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	replace	    pos.setIndex(offset+matcher.start());		compilable	  [FE]  AssertionError  testLANG_832	24	2	add
541	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  [BUGGY]  pos.setIndex(offset+matcher.start());  [BUGGY]  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start());	pos.setIndex(offset+matcher.end());  	compilable	  [FE]  AssertionError  testLANG_832	21	2	replace
542	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start());  [FE]  AssertionError  testLANG_832  [CONTEXT]  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  [BUGGY]  pos.setIndex(offset+matcher.start());  [BUGGY]  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start());	pos.setIndex(offset+matcher.end());  	compilable	  [FE]  AssertionError  testLANG_832	21	2	replace
