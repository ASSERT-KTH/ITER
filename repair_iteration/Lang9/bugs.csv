bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return parsePattern; [FE] AssertionError [CONTEXT] Pattern getParsePattern() { [BUGGY] return parsePattern; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getParsePattern [RETURN_TYPE] Pattern  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	
2	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Pattern getParsePattern() { [BUGGY] [BUGGY] return parsePattern; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getParsePattern [RETURN_TYPE] Pattern  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	
3	[BUG] [BUGGY] if(formatField.length()>2) { [FE] AssertionError [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': [BUGGY] if(formatField.length()>2) { [BUGGY] formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	537	537	2	replace	
4	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': [BUGGY] [BUGGY] if(formatField.length()>2) { formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	537	537	2	add	
5	[BUG] [BUGGY] formatField= formatField.substring(1, formatField.length()-1); [FE] AssertionError [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': if(formatField.length()>2) { [BUGGY] formatField= formatField.substring(1, formatField.length()-1); [BUGGY] }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	538	538	2	replace	
6	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': if(formatField.length()>2) { [BUGGY] [BUGGY] formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	538	538	2	add	
7	[BUG] [BUGGY] return date; [FE] AssertionError [CONTEXT] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } [BUGGY] return date; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	
8	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } [BUGGY] [BUGGY] return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	
9	[BUG] [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	282	282	2	replace	
10	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  [BUGGY] [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	282	282	2	add	
11	[BUG] [BUGGY] cal.clear(); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] cal.clear(); [BUGGY]  for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	283	283	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] [BUGGY] cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	283	283	2	add	
13	[BUG] [BUGGY] for(int i=0; i<strategies.length;) { [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); [BUGGY] for(int i=0; i<strategies.length;) { [BUGGY] Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	285	285	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); [BUGGY] [BUGGY] for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	285	285	2	add	
15	[BUG] [BUGGY] Strategy strategy= strategies[i++]; [FE] AssertionError [CONTEXT] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { [BUGGY] Strategy strategy= strategies[i++]; [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	
16	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { [BUGGY] [BUGGY] Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	add	
17	[BUG] [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); [FE] AssertionError [CONTEXT] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	287	287	2	replace	
18	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [BUGGY] [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	287	287	2	add	
19	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] } [BUGGY] pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	288	288	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] [BUGGY] } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	288	288	2	add	
21	[BUG] [BUGGY] pos.setIndex(offset+matcher.end()); [FE] AssertionError [CONTEXT] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [BUGGY] pos.setIndex(offset+matcher.end()); [BUGGY] return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	
22	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [BUGGY] [BUGGY] pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	
23	[BUG] [BUGGY] return cal.getTime(); [FE] AssertionError [CONTEXT] }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); [BUGGY] return cal.getTime(); [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	replace	
24	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); [BUGGY] [BUGGY] return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	add	
25	[BUG] [BUGGY] Date date= parse(source, new ParsePosition(0)); [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { [BUGGY] Date date= parse(source, new ParsePosition(0)); [BUGGY] if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	250	250	2	replace	
26	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { [BUGGY] [BUGGY] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	250	250	2	add	
27	[BUG] [BUGGY] if(date==null) { [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { Date date= parse(source, new ParsePosition(0)); [BUGGY] if(date==null) { [BUGGY]  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	251	251	2	replace	
28	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source) throws ParseException { Date date= parse(source, new ParsePosition(0)); [BUGGY] [BUGGY] if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	251	251	2	add	
29	[BUG] [BUGGY] int offset= pos.getIndex(); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { [BUGGY] int offset= pos.getIndex(); [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	276	276	2	replace	
30	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { [BUGGY] [BUGGY] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	276	276	2	add	
31	[BUG] [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); [BUGGY] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	277	277	2	replace	
32	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); [BUGGY] [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	277	277	2	add	
33	[BUG] [BUGGY] if(!matcher.lookingAt()) { [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); [BUGGY] if(!matcher.lookingAt()) { [BUGGY] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	278	278	2	replace	
34	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); [BUGGY] [BUGGY] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	278	278	2	add	
35	[BUG] [BUGGY] collector.add(currentStrategy); [FE] AssertionError [CONTEXT] } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { [BUGGY] collector.add(currentStrategy); [BUGGY] } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.21320071635561041	145	145	2	replace	
36	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { [BUGGY] [BUGGY] collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.21320071635561041	145	145	2	add	
37	[BUG] [BUGGY] return DAY_OF_MONTH_STRATEGY; [FE] AssertionError [CONTEXT] return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY; case 'S': return MILLISECOND_STRATEGY; case 'W': return WEEK_OF_MONTH_STRATEGY; case 'Z': break; case 'a': return AM_PM_STRATEGY; case 'd': [BUGGY] return DAY_OF_MONTH_STRATEGY; [BUGGY] case 'h': return MODULO_HOUR_STRATEGY; case 'k': return HOUR_OF_DAY_STRATEGY; case 'm': return MINUTE_STRATEGY; case 's': return SECOND_STRATEGY; case 'w': return WEEK_OF_YEAR_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.21320071635561041	566	566	2	replace	
38	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] return formatField.length()>=3 ?TEXT_MONTH_STRATEGY :NUMBER_MONTH_STRATEGY; case 'S': return MILLISECOND_STRATEGY; case 'W': return WEEK_OF_MONTH_STRATEGY; case 'Z': break; case 'a': return AM_PM_STRATEGY; case 'd': [BUGGY] [BUGGY] return DAY_OF_MONTH_STRATEGY; case 'h': return MODULO_HOUR_STRATEGY; case 'k': return HOUR_OF_DAY_STRATEGY; case 'm': return MINUTE_STRATEGY; case 's': return SECOND_STRATEGY; case 'w': return WEEK_OF_YEAR_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.21320071635561041	566	566	2	add	
39	[BUG] [BUGGY] for(int i= 0; i<value.length(); ++i) { [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { [BUGGY] for(int i= 0; i<value.length(); ++i) { [BUGGY] char c= value.charAt(i); switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	304	304	2	replace	
40	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { [BUGGY] [BUGGY] for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	304	304	2	add	
41	[BUG] [BUGGY] char c= value.charAt(i); [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { for(int i= 0; i<value.length(); ++i) { [BUGGY] char c= value.charAt(i); [BUGGY] switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	305	305	2	replace	
42	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { for(int i= 0; i<value.length(); ++i) { [BUGGY] [BUGGY] char c= value.charAt(i); switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	305	305	2	add	
43	[BUG] [BUGGY] switch(c) { [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); [BUGGY] switch(c) { [BUGGY] case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': case '[': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	306	306	2	replace	
44	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) { for(int i= 0; i<value.length(); ++i) { char c= value.charAt(i); [BUGGY] [BUGGY] switch(c) { case '\'': if(unquote) { if(++i==value.length()) { return regex; } c= value.charAt(i); } break; case '?': case '[': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	306	306	2	add	
45	[BUG] [BUGGY] regex.append(c); [FE] AssertionError [CONTEXT] case '}': case '\\': case '|': case '*': case '+': case '^': case '$': case '.': regex.append('\\'); } [BUGGY] regex.append(c); [BUGGY] } return regex; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	331	331	2	replace	
46	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] case '}': case '\\': case '|': case '*': case '+': case '^': case '$': case '.': regex.append('\\'); } [BUGGY] [BUGGY] regex.append(c); } return regex; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	331	331	2	add	
47	[BUG] [BUGGY] return regex; [FE] AssertionError [CONTEXT] case '|': case '*': case '+': case '^': case '$': case '.': regex.append('\\'); } regex.append(c); } [BUGGY] return regex; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	333	333	2	replace	
48	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] case '|': case '*': case '+': case '^': case '$': case '.': regex.append('\\'); } regex.append(c); } [BUGGY] [BUGGY] return regex; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] escapeRegex [RETURN_TYPE] StringBuilder  StringBuilder regex String value boolean unquote [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean unquote SortedMap tzNames char c Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	333	333	2	add	
49	[BUG] [BUGGY] return new CopyQuotedStrategy(formatField); [FE] AssertionError [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': if(formatField.length()>2) { formatField= formatField.substring(1, formatField.length()-1); }  default: [BUGGY] return new CopyQuotedStrategy(formatField); [BUGGY] case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; case 'G': return ERA_STRATEGY; case 'H': return MODULO_HOUR_OF_DAY_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	542	542	2	replace	
50	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': if(formatField.length()>2) { formatField= formatField.substring(1, formatField.length()-1); }  default: [BUGGY] [BUGGY] return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; case 'G': return ERA_STRATEGY; case 'H': return MODULO_HOUR_OF_DAY_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20851441405707477	542	542	2	add	
51	[BUG] [BUGGY] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { [FE] AssertionError [CONTEXT] [BUGGY] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { [BUGGY] this.pattern = pattern; this.timeZone = timeZone; this.locale = locale; init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	104	104	2	replace	
52	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] [BUGGY] [BUGGY] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; this.timeZone = timeZone; this.locale = locale; init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	104	104	2	add	
53	[BUG] [BUGGY] this.pattern = pattern; [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { [BUGGY] this.pattern = pattern; [BUGGY] this.timeZone = timeZone; this.locale = locale; init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	105	105	2	replace	
54	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { [BUGGY] [BUGGY] this.pattern = pattern; this.timeZone = timeZone; this.locale = locale; init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	105	105	2	add	
55	[BUG] [BUGGY] this.timeZone = timeZone; [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; [BUGGY] this.timeZone = timeZone; [BUGGY] this.locale = locale; init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	106	106	2	replace	
56	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; [BUGGY] [BUGGY] this.timeZone = timeZone; this.locale = locale; init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	106	106	2	add	
57	[BUG] [BUGGY] this.locale = locale; [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; this.timeZone = timeZone; [BUGGY] this.locale = locale; [BUGGY] init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	107	107	2	replace	
58	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; this.timeZone = timeZone; [BUGGY] [BUGGY] this.locale = locale; init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	107	107	2	add	
59	[BUG] [BUGGY] init(); [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; this.timeZone = timeZone; this.locale = locale; [BUGGY] init(); [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	108	108	2	replace	
60	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; this.timeZone = timeZone; this.locale = locale; [BUGGY] [BUGGY] init(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	108	108	2	add	
61	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; this.timeZone = timeZone; this.locale = locale; init(); [BUGGY] } [BUGGY]  [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	109	109	2	replace	
62	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) { this.pattern = pattern; this.timeZone = timeZone; this.locale = locale; init(); [BUGGY] [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] <init> [RETURN_TYPE] Locale)  String pattern TimeZone timeZone Locale locale [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY nextStrategy String currentFormatField formatField key pattern validTimeZoneChars long serialVersionUID int field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	109	109	2	add	
63	[BUG] [BUGGY] thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); [FE] AssertionError [CONTEXT] private void init() { [BUGGY] thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); [BUGGY]  nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	116	116	2	replace	
64	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void init() { [BUGGY] [BUGGY] thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	116	116	2	add	
65	[BUG] [BUGGY] nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); [BUGGY] nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); [BUGGY]  StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	
66	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); [BUGGY] [BUGGY] nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	add	
67	[BUG] [BUGGY] StringBuilder regex= new StringBuilder(); [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); [BUGGY] StringBuilder regex= new StringBuilder(); [BUGGY] List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	
68	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); [BUGGY] [BUGGY] StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	add	
69	[BUG] [BUGGY] List<Strategy> collector = new ArrayList<Strategy>(); [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); [BUGGY] List<Strategy> collector = new ArrayList<Strategy>(); [BUGGY]  Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	121	121	2	replace	
70	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); [BUGGY] [BUGGY] List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	121	121	2	add	
71	[BUG] [BUGGY] Matcher patternMatcher= formatPattern.matcher(pattern); [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); [BUGGY] Matcher patternMatcher= formatPattern.matcher(pattern); [BUGGY] if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	
72	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); [BUGGY] [BUGGY] Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	add	
73	[BUG] [BUGGY] if(!patternMatcher.lookingAt()) { [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); [BUGGY] if(!patternMatcher.lookingAt()) { [BUGGY] throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	124	124	2	replace	
74	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] private void init() { thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR); nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); [BUGGY] [BUGGY] if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	124	124	2	add	
75	[BUG] [BUGGY] currentFormatField= patternMatcher.group(); [FE] AssertionError [CONTEXT] nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } [BUGGY] currentFormatField= patternMatcher.group(); [BUGGY] Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	128	128	2	replace	
76	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] nameValues= new ConcurrentHashMap<Integer, KeyValue[]>(); StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } [BUGGY] [BUGGY] currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	128	128	2	add	
77	[BUG] [BUGGY] Strategy currentStrategy= getStrategy(currentFormatField); [FE] AssertionError [CONTEXT] StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); [BUGGY] Strategy currentStrategy= getStrategy(currentFormatField); [BUGGY] for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	129	129	2	replace	
78	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] StringBuilder regex= new StringBuilder(); List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); [BUGGY] [BUGGY] Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	129	129	2	add	
79	[BUG] [BUGGY] patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); [FE] AssertionError [CONTEXT] List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { [BUGGY] patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); [BUGGY] if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	131	131	2	replace	
80	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] List<Strategy> collector = new ArrayList<Strategy>(); Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { [BUGGY] [BUGGY] patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	131	131	2	add	
81	[BUG] [BUGGY] if(!patternMatcher.lookingAt()) { [FE] AssertionError [CONTEXT] Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); [BUGGY] if(!patternMatcher.lookingAt()) { [BUGGY] nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	
82	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); [BUGGY] [BUGGY] if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	add	
83	[BUG] [BUGGY] nextStrategy = null; [FE] AssertionError [CONTEXT] Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { [BUGGY] nextStrategy = null; [BUGGY] break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	133	133	2	replace	
84	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] Matcher patternMatcher= formatPattern.matcher(pattern); if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { [BUGGY] [BUGGY] nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	133	133	2	add	
85	[BUG] [BUGGY] break; [FE] AssertionError [CONTEXT] if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; [BUGGY] break; [BUGGY] } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	134	134	2	replace	
86	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if(!patternMatcher.lookingAt()) { throw new IllegalArgumentException("Invalid pattern"); } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; [BUGGY] [BUGGY] break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	134	134	2	add	
87	[BUG] [BUGGY] String nextFormatField= patternMatcher.group(); [FE] AssertionError [CONTEXT] } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } [BUGGY] String nextFormatField= patternMatcher.group(); [BUGGY] nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	136	136	2	replace	
88	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] } currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } [BUGGY] [BUGGY] String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	136	136	2	add	
89	[BUG] [BUGGY] nextStrategy = getStrategy(nextFormatField); [FE] AssertionError [CONTEXT] currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); [BUGGY] nextStrategy = getStrategy(nextFormatField); [BUGGY] if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	137	137	2	replace	
90	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); [BUGGY] [BUGGY] nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	137	137	2	add	
91	[BUG] [BUGGY] if(currentStrategy.addRegex(this, regex)) { [FE] AssertionError [CONTEXT] currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); [BUGGY] if(currentStrategy.addRegex(this, regex)) { [BUGGY] collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	138	138	2	replace	
92	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] currentFormatField= patternMatcher.group(); Strategy currentStrategy= getStrategy(currentFormatField); for(;;) { patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); [BUGGY] [BUGGY] if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	138	138	2	add	
93	[BUG] [BUGGY] currentFormatField= nextFormatField; [FE] AssertionError [CONTEXT] patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } [BUGGY] currentFormatField= nextFormatField; [BUGGY] currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	141	141	2	replace	
94	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd()); if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } [BUGGY] [BUGGY] currentFormatField= nextFormatField; currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	141	141	2	add	
95	[BUG] [BUGGY] currentStrategy= nextStrategy; [FE] AssertionError [CONTEXT] if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; [BUGGY] currentStrategy= nextStrategy; [BUGGY] } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	142	142	2	replace	
96	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] if(!patternMatcher.lookingAt()) { nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; [BUGGY] [BUGGY] currentStrategy= nextStrategy; } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	142	142	2	add	
97	[BUG] [BUGGY] } [FE] AssertionError [CONTEXT] nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; [BUGGY] } [BUGGY] if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	
98	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] nextStrategy = null; break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; [BUGGY] [BUGGY] } if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	add	
99	[BUG] [BUGGY] if(currentStrategy.addRegex(this, regex)) { [FE] AssertionError [CONTEXT] break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } [BUGGY] if(currentStrategy.addRegex(this, regex)) { [BUGGY] collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	
100	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] break; } String nextFormatField= patternMatcher.group(); nextStrategy = getStrategy(nextFormatField); if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= nextFormatField; currentStrategy= nextStrategy; } [BUGGY] [BUGGY] if(currentStrategy.addRegex(this, regex)) { collector.add(currentStrategy); } currentFormatField= null; strategies= collector.toArray(new Strategy[collector.size()]); parsePattern= Pattern.compile(regex.toString()); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] init [RETURN_TYPE] void  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern StringBuilder regex Matcher patternMatcher ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy List collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	add	
