bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] return parsePattern; [FE] AssertionError testLANG_832 [CONTEXT] Pattern getParsePattern() { [BUGGY] return parsePattern; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getParsePattern [RETURN_TYPE] Pattern  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	
2	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] Pattern getParsePattern() { [BUGGY] [BUGGY] return parsePattern; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getParsePattern [RETURN_TYPE] Pattern  [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames ConcurrentMap nameValues tzsCache Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy String currentFormatField formatField id key nextFormatField pattern validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Comparator IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	
3	[BUG] [BUGGY] if(formatField.length()>2) { [FE] AssertionError testLANG_832 [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': [BUGGY] if(formatField.length()>2) { [BUGGY] formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	537	537	2	replace	
4	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': [BUGGY] [BUGGY] if(formatField.length()>2) { formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	537	537	2	add	
5	[BUG] [BUGGY] formatField= formatField.substring(1, formatField.length()-1); [FE] AssertionError testLANG_832 [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': if(formatField.length()>2) { [BUGGY] formatField= formatField.substring(1, formatField.length()-1); [BUGGY] }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	538	538	2	replace	
6	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] private Strategy getStrategy(String formatField) { switch(formatField.charAt(0)) { case '\'': if(formatField.length()>2) { [BUGGY] [BUGGY] formatField= formatField.substring(1, formatField.length()-1); }  default: return new CopyQuotedStrategy(formatField); case 'D': return DAY_OF_YEAR_STRATEGY; case 'E': return DAY_OF_WEEK_STRATEGY; case 'F': return DAY_OF_WEEK_IN_MONTH_STRATEGY; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] getStrategy [RETURN_TYPE] FastDateParser$Strategy  String formatField [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars value long serialVersionUID int $anonymous0 count field i idx offset thisYear trial twoDigitYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy TimeZoneStrategy inCache tzs  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.3779644730092272	538	538	2	add	
7	[BUG] [BUGGY] return date; [FE] AssertionError testLANG_832 [CONTEXT] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } [BUGGY] return date; [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	
8	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } [BUGGY] [BUGGY] return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	
9	[BUG] [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	282	282	2	replace	
10	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  [BUGGY] [BUGGY] Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	282	282	2	add	
11	[BUG] [BUGGY] cal.clear(); [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] cal.clear(); [BUGGY]  for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	283	283	2	replace	
12	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); [BUGGY] [BUGGY] cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	283	283	2	add	
13	[BUG] [BUGGY] for(int i=0; i<strategies.length;) { [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); [BUGGY] for(int i=0; i<strategies.length;) { [BUGGY] Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	285	285	2	replace	
14	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); [BUGGY] [BUGGY] for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	285	285	2	add	
15	[BUG] [BUGGY] Strategy strategy= strategies[i++]; [FE] AssertionError testLANG_832 [CONTEXT] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { [BUGGY] Strategy strategy= strategies[i++]; [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	
16	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { [BUGGY] [BUGGY] Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	add	
17	[BUG] [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); [FE] AssertionError testLANG_832 [CONTEXT] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	287	287	2	replace	
18	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [BUGGY] [BUGGY] strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	287	287	2	add	
19	[BUG] [BUGGY] } [FE] AssertionError testLANG_832 [CONTEXT] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] } [BUGGY] pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	288	288	2	replace	
20	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); [BUGGY] [BUGGY] } pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	288	288	2	add	
21	[BUG] [BUGGY] pos.setIndex(offset+matcher.end()); [FE] AssertionError testLANG_832 [CONTEXT] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [BUGGY] pos.setIndex(offset+matcher.end()); [BUGGY] return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	
22	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } [BUGGY] [BUGGY] pos.setIndex(offset+matcher.end()); return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	
23	[BUG] [BUGGY] return cal.getTime(); [FE] AssertionError testLANG_832 [CONTEXT] }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); [BUGGY] return cal.getTime(); [BUGGY] } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	replace	
24	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; strategy.setCalendar(this, cal, matcher.group(i)); } pos.setIndex(offset+matcher.end()); [BUGGY] [BUGGY] return cal.getTime(); } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	290	290	2	add	
25	[BUG] [BUGGY] Date date= parse(source, new ParsePosition(0)); [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source) throws ParseException { [BUGGY] Date date= parse(source, new ParsePosition(0)); [BUGGY] if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	250	250	2	replace	
26	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source) throws ParseException { [BUGGY] [BUGGY] Date date= parse(source, new ParsePosition(0)); if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	250	250	2	add	
27	[BUG] [BUGGY] if(date==null) { [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source) throws ParseException { Date date= parse(source, new ParsePosition(0)); [BUGGY] if(date==null) { [BUGGY]  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	251	251	2	replace	
28	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source) throws ParseException { Date date= parse(source, new ParsePosition(0)); [BUGGY] [BUGGY] if(date==null) {  if (locale.equals(JAPANESE_IMPERIAL)) { throw new ParseException( "(The " +locale + " locale does not support dates before 1868 AD)\n" + "Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } throw new ParseException("Unparseable date: \""+source+"\" does not match "+parsePattern.pattern(), 0); } return date; } [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field thisYear value Date date Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	251	251	2	add	
29	[BUG] [BUGGY] int offset= pos.getIndex(); [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { [BUGGY] int offset= pos.getIndex(); [BUGGY] Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	276	276	2	replace	
30	[BUG] [BUGGY] [FE] AssertionError testLANG_832 [CONTEXT] public Date parse(String source, ParsePosition pos) { [BUGGY] [BUGGY] int offset= pos.getIndex(); Matcher matcher= parsePattern.matcher(source.substring(offset)); if(!matcher.lookingAt()) { return null; }  Calendar cal= Calendar.getInstance(timeZone, locale); cal.clear(); for(int i=0; i<strategies.length;) { Strategy strategy= strategies[i++]; [CLASS] FastDateParser KeyValue 1 CopyQuotedStrategy TextStrategy NumberStrategy 2 TimeZoneStrategy 3 4 5 [METHOD] parse [RETURN_TYPE] Date  String source ParsePosition pos [VARIABLES] Locale JAPANESE_IMPERIAL locale Pattern formatPattern parsePattern Matcher matcher Calendar cal ConcurrentMap nameValues tzsCache String currentFormatField formatField id key nextFormatField pattern source validTimeZoneChars long serialVersionUID int $anonymous0 field i offset thisYear value Comparator IGNORE_CASE_COMPARATOR TimeZone timeZone tz Strategy[] strategies boolean SortedMap tzNames Strategy ABBREVIATED_YEAR_STRATEGY AM_PM_STRATEGY DAY_OF_MONTH_STRATEGY DAY_OF_WEEK_IN_MONTH_STRATEGY DAY_OF_WEEK_STRATEGY DAY_OF_YEAR_STRATEGY ERA_STRATEGY HOUR_OF_DAY_STRATEGY HOUR_STRATEGY LITERAL_YEAR_STRATEGY MILLISECOND_STRATEGY MINUTE_STRATEGY MODULO_HOUR_OF_DAY_STRATEGY MODULO_HOUR_STRATEGY NUMBER_MONTH_STRATEGY SECOND_STRATEGY TEXT_MONTH_STRATEGY WEEK_OF_MONTH_STRATEGY WEEK_OF_YEAR_STRATEGY currentStrategy nextStrategy strategy ParsePosition pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.23570226039551587	276	276	2	add	
