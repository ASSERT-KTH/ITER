projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285Strategy[]strategies=cal.getStrategy();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283cal.clear();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283cal.setTime(timeZone);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283Strategy[]strategies=matcher.getStrategy();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537if(formatField.length()>0){if(formatField.charAt(0)=='''){returnnewCopyQuotedStrategy(formatField);}
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251if(date==null){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251if(date!=null){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251if(date!=null||!date.isLocal()){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290returncal.getTime();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290returnstrategy.getTime();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287strategy.setCalendar(this,cal,matcher.group(i));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287strategy.setCalendar(this,cal,matcher.group(i+1));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287strategy.setCalendar(this,cal,matcher.group(i),strategy);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180PatternparsePattern=getParsePattern();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180PatternparsePattern=(Pattern)tzNames.get(this.parsePattern);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282Calendarcal=Calendar.getInstance(timeZone,locale);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282Calendarcal=Calendar.getInstance(locale,timeZone);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287cal.add(strategy);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260date=parse(source,newParsePattern());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286Strategy[]strategies=parsePattern.create(cal,i);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251Localelocale=getLocale();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251Localelocale=parse(source,newParsePattern());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538formatField=formatField.substring(1,formatField.length()-1);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538formatField=formatField.substring(1,formatField.length()-2);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538formatField=formatField.substring(2,formatField.length()-1);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288returnstrategy.get(cal.get(i));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537if(formatField.length()>2){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537if(formatField.length()>1){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537if(formatField.length()>1&&formatField.charAt(0)=='''){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285for(inti=0;i<strategies.length;){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285for(inti=0;i<strategy.length;){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288}
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288cal.setValue(offset);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282Strategy[]strategies=matcher.getStrategy();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286Strategystrategy=strategies[i++];
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286Strategystrategy=Strategies[i++];
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538formatField=formatField.substring(0,formatField.length()-2);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538formatField=formatField.substring(0,formatField.length()-1);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538returnnewCopyQuotedStrategy(formatField.substring(0,formatField.length()-2));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276Strategy[]strategies=newStrategy[parsePattern.size()];
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260returndate;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260returndate==null?JAPANESE_IMPERIAL:date;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Datedate=parse(source,newParsePosition(0));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Datedate=parse(source,newParsePosition(1));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Datedate=parse(source,newParsePattern(1));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276intoffset=pos.getIndex();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276intoffset=source.getIndex();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180returnparsePattern;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180returnthis.parsePattern;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180returnthis.formatPattern;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180returnparsePattern==null?JAPANESE_IMPERIAL:parsePattern;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289pos.setIndex(offset+matcher.end());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289pos.setIndex(offset+matcher.length());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Localelocale=getLocale();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Localelocale=parse(source,newParsePattern());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290if(tzNames.contains(cal.getName())){if(tzNames.contains(cal.getName())){returnstrategy;}
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289Matchermatcher=strategy.getInstance(timeZone,locale);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180PatternparsePattern=Pattern.compile(tz.getParsePattern());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286Strategies[]strategies=parseStrategy(source,i);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276Strategy[]strategies=parsePattern.getStrategy();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260returndate.getTime();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286Strategystrategy=strategies[i];
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282Calendarcal=Calendar.getInstance(source,timeZone,locale);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290pos.setIndex(offset+matcher.end());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290pos.setIndex(offset+matcher.start());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290pos.setPosition(offset+matcher.end());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251if(date==null||date.length()==0){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180return(pattern==null)?parsePattern:newPattern(tz.getParsePattern());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283Strategy[]strategies=parseStrategy(source,pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537if(formatField.length()>1&&formatField.charAt(1)=='''){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260Datedate=parse(source,newParsePattern());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537returngetStrategy(formatField.substring(1));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Localelocale=parse(source,TimeZoneStrategy.getDefault());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538returngetStrategy(formatField.substring(1));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285Strategy[]strategies=parseStrategy(source,pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289intoffset=matcher.getOffset();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Datedate=parse(source,newParsePattern(0));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287strategy.setCalendar(this,cal,matcher.group(i,strategy));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288intoffset=matcher.getOffset();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282TimeZonetimeZone=Matcher.parse(source,pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287Strategymatcher=parseStrategy(source,i);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251Localelocale=parsePattern();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285for(inti=0;i<strategies.length-1;){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285for(inti=0;i<strategies.length);){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288cal.setTime(offset);returnstrategy;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276intoffset=parsePattern.getIndex();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289pos.setIndex(offset+matcher.start());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289pos.setIndex(offset+matcher.intValue());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283Strategy[]strategies=cal.getStrategy();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290returncal.getTime()-1;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java250Localelocale=getLocale();if(locale==null||locale.equals(JAPANESE_IMPERIAL)){thrownewParseException("");}
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289pos.setIndex(offset+strategy.end());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290returnstrategy.cal.getTime();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251if(date==null||date.format()==JAPANESE_IMPERIAL){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276intoffset=pos.getIndex()-1;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276intoffset=source.indexOf(pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java289intoffset=matcher.getTime();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282Calendarcal=Calendar.getInstance(source,pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283Strategy[]strategies=Calendar.getStrategy(cal,pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java290matcher.setValue(source,pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260date=parse(source,JAPANESE_IMPERIAL);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java283cal.setTime(newDate(timeZone,locale));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java260returndate.date;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287if(strategie!=null){for(inti=0;i<strategies.length;++i){Preconditions.checkState(cal.getTime()==timeZone.getTime());}
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286Strategies[]strategies=(Strategies[i])matcher.find(source,i);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java282TimeZonetimeZone=Matcher.getTimeZone(source,pos);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180return(parsePattern==null)?parsePattern:pattern;
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java287strategy.setCalendar(this,cal,matcher.get(i));
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java180PatternparsePattern=(Pattern)getParsePattern();parsePattern.apply(Pattern.toString());
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285for(inti=0;i<strategies.length,0;){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java276Localelocale=pos.getLocale();
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java286Strategystrategy=(Strategies[i++]==null)?strategies[i++]:strategies[i++];
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288if(strategie!=null){for(inti=0;i<strategies.length;++i){Matcherstrategy=(Strategy)strategy.get(i);}
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java285Strategies[]strategies=Calendar.getStrategy(cal);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537if(formatField.length()>1&&isSupported(formatField.charAt(0))){
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java288if(strategie!=null){for(inti=0;i<strategies.length;++i){Matcherstrategy=(Strategy)strategies[i].getInstance();}
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java537Preconditions.checkNotNull(formatField);
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java538&&formatField.charAt(formatField.length()-1)==''';
projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java251Localelocale=source.getLocale();
