bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.length);	  StringBuilder    patternex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  1);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  1);	  StringBuilder    patternex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  -  1);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  -  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  +  1);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  +  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  -  2);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  -  2);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  -  2);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  2);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  2);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  2);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  nameValues);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  nameValues);  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  nameValues);	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value);  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value);	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
20	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
21	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  +  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  +  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  +  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
22	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear,  nameValues);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear,  nameValues);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear,  nameValues);	  StringBuilder    regex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  1);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  1);	  StringBuilder    regex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear);	  StringBuilder    regex    =    new    StringBuilder(nameValues);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
26	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  1);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  2);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  2);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
32	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString());  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.toString());	  StringBuilder    regex    =    new    StringBuilder(nameValues);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues);	  StringBuilder    regex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
34	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  +  1);  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  +  1);	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
36	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  +  2);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  +  2);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  +  2);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
40	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length);	  StringBuilder    patternex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
45	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR);  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR);	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR);  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR);	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH);  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
52	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size());  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.size());	  StringBuilder    patternex    =    new    StringBuilder(thisYear);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
53	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0));  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0));  [BUGGY]    List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.get(0));	  StringBuilder    regex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();    [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]    StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	      thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
