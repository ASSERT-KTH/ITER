bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.DATE);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
2	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DATE);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
3	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.DATE);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
4	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues,  thisYear);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues,  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues,  thisYear);	  StringBuilder    patternex    =    new    StringBuilder(nameValues);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear  +  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
6	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear,  value);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear,  value);	  StringBuilder    regex    =    new    StringBuilder(nameValues,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
7	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear,  nameValues);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear,  nameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues,  thisYear,  nameValues);	  StringBuilder    regex    =    new    StringBuilder(nameValues,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
8	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR,  value);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(timeZone,    key).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
9	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  -  1);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
10	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  +  1);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
11	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  -  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  -  2);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
12	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  *  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  *  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  *  2);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
13	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
14	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
15	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
16	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
17	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
18	[BUG]  [BUGGY]  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
19	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH)+  1;  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
21	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.MONTH);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
22	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.MONTH);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
23	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
24	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
25	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
26	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
28	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues  +  1);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
29	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  *  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  *  1);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
30	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  1,  nameValues);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  1,  nameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  1,  nameValues);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
31	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  *  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  *  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  *  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
33	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  thisYear);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  thisYear);	  StringBuilder    regex    =    new    StringBuilder(nameValues.get(0));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
34	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0).toString());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0).toString());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.get(0).toString());	  StringBuilder    regex    =    new    StringBuilder(nameValues.get(0));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
35	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  nameValues.size());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  nameValues.size());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  nameValues.size());	  StringBuilder    regex    =    new    StringBuilder(nameValues.get(0));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
36	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  nameValues.length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.get(0),  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(nameValues.get(0));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
37	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear,  thisValues);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear,  thisValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear,  thisValues);	  StringBuilder    regex    =    new    StringBuilder(thisYear,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
38	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear,  nameValues,  tzNames);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear,  nameValues,  tzNames);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear,  nameValues,  tzNames);	  StringBuilder    regex    =    new    StringBuilder(thisYear,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
39	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString(),  thisYear);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString(),  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.toString(),  thisYear);	  StringBuilder    regex    =    new    StringBuilder(nameValues.toString());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
40	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.toString());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.toString());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear.toString());	  StringBuilder    regex    =    new    StringBuilder(nameValues.toString());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
41	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + ": ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + ": ");  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + ": ");	  StringBuilder    regex    =    new    StringBuilder(nameValues.toString());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
42	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  2);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
43	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.length  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear.length  -  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
44	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  key);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  key);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  key);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  locale);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  locale);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  locale);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  +  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
47	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear,  nameValues.length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear,  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear,  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
48	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  +  1,  nameValues.length);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  +  1,  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  +  1,  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
49	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.length,  nameValues);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.length,  nameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear.length,  nameValues);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
50	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(NameValues.size());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(NameValues.size());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(NameValues.size());	  StringBuilder    regex    =    new    StringBuilder(nameValues.size()    +    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(timeZone,    nameValues).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
52	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.YEAR);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(timeZone,    nameValues).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
53	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  +  thisYear);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  +  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues  +  thisYear);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
54	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues,  thisYear);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues,  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues,  thisYear);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
55	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  *  nameValues);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  *  nameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  *  nameValues);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
56	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues,  patternMatcher);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues,  patternMatcher);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues,  patternMatcher);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
57	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
58	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  -  1);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
59	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  +  thisYear.length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  +  thisYear.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues  +  thisYear.length);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
60	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length  -  1);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
61	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  thisYear);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  thisYear);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
62	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues.length  +  1);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
63	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  3);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  3);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  3);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
64	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.length  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear.length  +  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
65	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear.size());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear.size());	  StringBuilder    regex    =    new    StringBuilder(nameValues.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
66	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  keyValues);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  keyValues);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  keyValues);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
67	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR,  locale);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR,  locale);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  nameValues).get(Calendar.YEAR,  locale);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  +  thisYear.length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  +  thisYear.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues  +  thisYear.length);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
69	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  thisYear);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  thisYear);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
70	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length  -  1);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
71	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  nameValues.length  +  1);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
72	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
73	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  /  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  /  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  /  2);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size()    *    2);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
74	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
75	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  2;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  2;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  2;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY)+    1;    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
76	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)/  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)/  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)/  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY)+    1;    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
77	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  1);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
78	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.length  -  1);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
79	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  2);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
80	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear.length);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear.length);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
81	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  +  thisYear);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  +  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues  +  thisYear);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
82	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  regex);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  regex);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
83	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  thisYear);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  thisYear);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
84	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  *  nameValues);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  *  nameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  *  nameValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
85	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues,  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues,  regex);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues,  regex);	  StringBuilder    patternex    =    new    StringBuilder(thisYear,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length,  thisYear);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length,  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.length,  thisYear);	  StringBuilder    patternex    =    new    StringBuilder(thisYear,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  thisValues);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  thisValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear,  thisValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
88	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues  +  1);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  *  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  *  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  *  1);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
90	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  1,  nameValues);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  1,  nameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  1,  nameValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
91	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length  -  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    1,    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
92	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length  +  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    1,    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
93	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length,  thisYear);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length,  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length,  thisYear);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    1,    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
94	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  4);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  4);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  +  4);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    2);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
95	[BUG]  [BUGGY]  if(locale!=  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  if(locale!=  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	if(locale!=  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }	  thisYear    =    Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
96	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString(),  nameValues.length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString(),  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.toString(),  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(nameValues.toString());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
97	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + "n ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + "n ");  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + "n ");	  StringBuilder    regex    =    new    StringBuilder(nameValues.toString());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
98	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
99	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  nameValues).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  nameValues).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  nameValues).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    nameValues).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
100	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
101	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
102	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  2  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  2  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  2  -  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size()    *    2);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
103	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  thisNameValues);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  thisNameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  thisNameValues);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
104	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.toString());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.toString());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.toString());	  StringBuilder    patternex    =    new    StringBuilder(nameValues);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
105	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  value);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
106	[BUG]  [BUGGY]  char[]  regex  =  new  char[nameValues.size()  ];  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  char[]  regex  =  new  char[nameValues.size()  ];  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	char[]  regex  =  new  char[nameValues.size()  ];	  StringBuilder    regex    =    new    StringBuilder(thisYear,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
107	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  1,  nameValues.length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  1,  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  1,  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    1,    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
108	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
109	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  +  1);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
110	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.DATE);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
111	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(date,  locale).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(date,  locale).get(Calendar.DATE);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(date,  locale).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
112	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE,  value);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE,  value);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE,  value);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
113	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
114	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
115	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  nameValues).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  nameValues).get(Calendar.YEAR);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  nameValues).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(timeZone,    nameValues).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
116	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  nameValues).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  nameValues).get(Calendar.YEAR);  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(dateZone,  nameValues).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(timeZone,    nameValues).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
117	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  +  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  +  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.size()  +  2);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.size());    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
118	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues.length  +  1,  nameValues.length);	  StringBuilder    patternex    =    new    StringBuilder(nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
119	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length());	  StringBuilder    regex    =    new    StringBuilder(nameValues.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
120	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
121	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  +  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
122	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  2);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    2);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
123	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  thisNameValues);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  thisNameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  thisNameValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
124	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  nameValues);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  nameValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues,  nameValues);	  StringBuilder    regex    =    new    StringBuilder(nameValues,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
125	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues,  value);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues,  value);	  StringBuilder    regex    =    new    StringBuilder(nameValues,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
126	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  1  +  thisYear);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  1  +  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  1  +  thisYear);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
128	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  4);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  4);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  -  4);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    -    1);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
129	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  *  thisYear.length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(nameValues  *  thisYear.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(nameValues  *  thisYear.length);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
130	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
131	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
132	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues.length);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear,  nameValues.length);	  StringBuilder    patternex    =    new    StringBuilder(thisYear,    nameValues);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
133	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  nameValues.length);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  nameValues.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length,  nameValues.length);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
134	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  key).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  key).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  key).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    key).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
135	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
136	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY  -  1);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
137	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length  *  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length    +    1);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
138	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  *  thisYear.length);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues  *  thisYear.length);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues  *  thisYear.length);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues.length);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
139	[BUG]  [BUGGY]  if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
140	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  thisValues);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  +  thisValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  +  thisValues);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
141	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size(),  thisYear);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size(),  thisYear);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size(),  thisYear);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
142	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  -  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length,  thisYear  -  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.length,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
143	[BUG]  [BUGGY]  if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
144	[BUG]  [BUGGY]  Builder  regex  =  new  StringBuilder(nameValues.size());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  Builder  regex  =  new  StringBuilder(nameValues.size());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	Builder  regex  =  new  StringBuilder(nameValues.size());	  StringBuilder    regex    =    new    StringBuilder(nameValues.size()    +    2);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
145	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  thisFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  thisFormatField);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  nameValues,  thisFormatField);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
146	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  thisValues);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  +  thisValues);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  +  thisValues);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    nameValues);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
147	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);    nameValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
148	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.MONTH);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
149	[BUG]  [BUGGY]  if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	if(nameValues  ==  null)  {  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  }	  thisYear    =    Calendar.getInstance(locale).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
150	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0).trim());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.get(0).trim());  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.get(0).trim());	  StringBuilder    regex    =    new    StringBuilder(nameValues.get(0));    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
151	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)-  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)-  1;  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)-  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR    +    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
152	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  *  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear  *  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear  *  2);	  StringBuilder    patternex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
153	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
154	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.HOUR_OF_DAY);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
155	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  1);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size()  *  1);	  StringBuilder    regex    =    new    StringBuilder(nameValues.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
156	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  key).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  key).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(locale,  key).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(timeZone,    key).get(Calendar.YEAR);    patternValues    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
157	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  *  2);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear  *  2);  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear  *  2);	  StringBuilder    regex    =    new    StringBuilder(thisYear    +    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
158	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + "  - ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + "  - ");  [BUGGY]      List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.toString()  + "  - ");	  StringBuilder    regex    =    new    StringBuilder(nameValues.toString());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
159	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]      StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	thisYear  =  Calendar.getInstance(clockZone,  value).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.YEAR);    patternMatcher    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
