bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(thisYear);  [BUGGY]  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(thisYear);	StringBuilder  regex=  new  StringBuilder();  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
2	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues);  [BUGGY]  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues);	StringBuilder  regex=  new  StringBuilder();  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
3	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.length);  [BUGGY]  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.length);	StringBuilder  regex=  new  StringBuilder();  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]          AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]    [BUGGY]  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	  	StringBuilder  regex=  new  StringBuilder();  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
5	[BUG]  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();		non-compiled	[CE]  illegal  start  of  type	68	None	add
6	[BUG]  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  [BUGGY]  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);		non-compiled	[CE]  illegal  start  of  type	68	None	add
7	[BUG]  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  nameValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();		non-compiled	[CE]  illegal  start  of  type	68	None	add
8	[BUG]  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  patternValues  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();		non-compiled	[CE]  illegal  start  of  type	68	None	add
9	[BUG]  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size());  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex  =  new  StringBuilder(nameValues.size());  [BUGGY]  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  regex  =  new  StringBuilder(nameValues.size());	StringBuilder  regex=  new  StringBuilder();  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
10	[BUG]  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  patternex  =  new  StringBuilder(thisYear);  [BUGGY]  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	StringBuilder  patternex  =  new  StringBuilder(thisYear);	StringBuilder  regex=  new  StringBuilder();  	non-compiled	[CE]  illegal  start  of  type	67	None	replace
11	[BUG]  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  [BUGGY]    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();  [BUGGY]  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException( "Invalid  pattern ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	120	120	2	replace	    thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  patternMatcher  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>();		non-compiled	[CE]  illegal  start  of  type	68	None	add
