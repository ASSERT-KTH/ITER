bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(locale,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
2	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  locale);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  locale);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR,  locale);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
3	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
4	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
5	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(TimeZone,    timeZone).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
6	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  *  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  *  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  *  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH);  }  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH);  }	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
8	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
9	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH,  value);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
10	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
11	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(locale,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(locale,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(locale,  thisYear).get(Calendar.YEAR);	  Pattern    nameValues    =    Calendar.getInstance(locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(locale).get(Calendar.YEAR,  thisYear);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(locale).get(Calendar.YEAR,  thisYear);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(locale).get(Calendar.YEAR,  thisYear);	  Pattern    nameValues    =    Calendar.getInstance(locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale,  value).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.intValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.intValue());  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.intValue());	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
16	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(key);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(key);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(key);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.toString());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.toString());  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.toString());	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
19	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    timeZone).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  timeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  timeZone).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  timeZone).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    timeZone).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
22	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  values);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  values);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  values);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
24	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(true);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(true);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(true);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(false);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
25	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(false,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(false,  value);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(false,  value);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(false);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
26	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(false,  true);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(false,  true);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(false,  true);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(false);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
27	[BUG]  [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ConcurrentMap  nameValues  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);	  ConcurrentMap    nameValues    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
28	[BUG]  [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);	  ConcurrentMap    nameValues    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
29	[BUG]  [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR);	  ConcurrentMap    nameValues    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
30	[BUG]  [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ConcurrentMap  nameValues  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);	  ConcurrentMap    nameValues    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
31	[BUG]  [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  }  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  }	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DAY_OF_MONTH)/  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DAY_OF_MONTH)/  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DAY_OF_MONTH)/  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DAY_OF_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DAY_OF_MONTH)+  2;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DAY_OF_MONTH)+  2;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DAY_OF_MONTH)+  2;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DAY_OF_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.DAY_OF_MONTH)+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.DAY_OF_MONTH)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.DAY_OF_MONTH)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DAY_OF_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(thisYear,  value).get(Calendar.YEAR);	  Pattern    nameValues    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)/  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)/  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)/  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  2;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)+  2;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)-  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)-  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY)-  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockOfDay,  locale).get(Calendar.HOUR_OF_DAY  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockOfDay,  locale).get(Calendar.HOUR_OF_DAY  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockOfDay,  locale).get(Calendar.HOUR_OF_DAY  +  1);	  thisYear    =    Calendar.getInstance(clockOfDay,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
40	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockOfDay,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockOfDay,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockOfDay,  locale).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(clockOfDay,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
41	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
42	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR,  value);	  Pattern    nameValues    =    Calendar.getInstance(timeZone,    thisYear).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
44	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  value).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  value).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  value).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
45	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
46	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
47	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
48	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
49	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
50	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  =  Calendar.getInstance(timeZone,  thisYear).get(Calendar.YEAR);	  ThisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
51	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  thisYear);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  thisYear);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  thisYear);	  ThisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR);	  ThisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
53	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value);	  ThisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
54	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY  +  1);	  thisYear    =    Calendar.getInstance(TimeZone.getDefault(),    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
55	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY,  value);	  thisYear    =    Calendar.getInstance(TimeZone.getDefault(),    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
56	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
57	[BUG]  [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
58	[BUG]  [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
59	[BUG]  [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY;  }  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY;  }	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
60	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  field);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  field);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  field);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
61	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  key);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  key);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  key);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
62	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  currentFormatField);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  currentFormatField);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
63	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  regex);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  regex);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
64	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(thisYear,  thisYear).get(Calendar.YEAR);	  Pattern    nameValues    =    Calendar.getInstance(thisYear,    timeZone).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
65	[BUG]  [BUGGY]  ThisYear  value  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  value  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  value  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
66	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
67	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
68	[BUG]  [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value);	  NameValues    tzNames=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
69	[BUG]  [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisYear);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisYear);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisYear);	  NameValues    tzNames=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
70	[BUG]  [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  values);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  values);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  values);	  NameValues    tzNames=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
71	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.DATE);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
72	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DATE);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  key).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
73	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  tz).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  tz).get(Calendar.DATE);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  tz).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
74	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dayOfDay,  locale).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dayOfDay,  locale).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dayOfDay,  locale).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
75	[BUG]  [BUGGY]  if(thisYear!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(thisYear!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  }  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(thisYear!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY);  }	  if(thisYear!=    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.getKey());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.getKey());  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.getKey());	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear.getValue());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.toString());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.toString());  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.toString());	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear.getValue());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.cloneTree());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.cloneTree());  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.cloneTree());	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear.getValue());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.getValue()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.getValue()  +  1);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.getValue()  +  1);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear.getValue());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(dateZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
81	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR)+  1;	  thisYear    =    Calendar.getInstance(dateZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
82	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR_OF_YEAR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR_OF_YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR_OF_YEAR);	  thisYear    =    Calendar.getInstance(dateZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
83	[BUG]  [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE);  }  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE);  }	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
84	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    thisFormatField);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
85	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  value);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  value);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  value);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    thisFormatField);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
86	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  key);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  key);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  key);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    thisFormatField);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
87	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  value).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    value).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(value,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(value,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(value,  thisYear).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    value).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
89	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
90	[BUG]  [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  currentFormatField);	  NameValues    tzNames=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
91	[BUG]  [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	NameValues  tzNames=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField);	  NameValues    tzNames=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
92	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  key);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  key);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  key);	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
93	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.YEAR  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
94	[BUG]  [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.DATE	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
95	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
96	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR  +  1);	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
97	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
98	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
100	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  locale).get(Calendar.HOUR_OF_DAY)+  1;	  thisYear    =    Calendar.getInstance(TimeZone.getDefault(),    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
101	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
102	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockOfMonth,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockOfMonth,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockOfMonth,  locale).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(clockOfDay,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
103	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.DATE);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
104	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.DATE);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
105	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(thisYear,  timeZone).get(Calendar.YEAR,  value);	  Pattern    nameValues    =    Calendar.getInstance(thisYear,    timeZone).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
106	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  thisTimeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(thisYear,  thisTimeZone).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(thisYear,  thisTimeZone).get(Calendar.YEAR);	  Pattern    nameValues    =    Calendar.getInstance(thisYear,    timeZone).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
107	[BUG]  [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
108	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.DAY_OF_MONTH)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.DAY_OF_MONTH)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.DAY_OF_MONTH)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DAY_OF_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
109	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  timeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  timeZone).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  timeZone).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    timeZone).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
110	[BUG]  [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value  ==  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.MONTH	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
111	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR  +  1);	  thisYear    =    Calendar.getInstance(dateZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
112	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(key,  value).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(key,  value).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(key,  value).get(Calendar.YEAR);	  thisYear    =    Calendar.getInstance(thisYear,    value).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
113	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  timeZone).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(TimeZone,    timeZone).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
114	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dayOfMonth,  locale).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
115	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR);	  ThisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
116	[BUG]  [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ConcurrentMap  nameValues  =  Calendar.getInstance(thisYear,  thisYear).get(Calendar.YEAR);	  ConcurrentMap    nameValues    =    Calendar.getInstance(thisYear,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
117	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.DAY_OF_MONTH)+  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.DAY_OF_MONTH)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.DAY_OF_MONTH)+  1;	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
118	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR  +  1);	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
119	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
120	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR,  value  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
121	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.HOUR_OF_DAY)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
122	[BUG]  [BUGGY]  thisFormatField  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisFormatField  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisFormatField  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    thisFormatField);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
123	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  id);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  id);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  id);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    thisFormatField);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
124	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  tzNames);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  tzNames);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisFormatField,  tzNames);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    thisFormatField);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
125	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY)+    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
126	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockOfDay,  timeZone).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockOfDay,  timeZone).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockOfDay,  timeZone).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(clockOfDay,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
127	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.clone());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.clone());  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear.clone());	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear.getValue());    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
128	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  timeZone).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(timeZone,  timeZone).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(timeZone,  timeZone).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(TimeZone,    timeZone).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
129	[BUG]  [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.cloneTree());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.cloneTree());  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(value.cloneTree());	  thisYear    =    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
130	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dayOfOfMonth,  locale).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dayOfOfMonth,  locale).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dayOfOfMonth,  locale).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(thisYear,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
131	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
132	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.YEAR  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
133	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dayOfOF_MONTH,  locale).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dayOfOF_MONTH,  locale).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dayOfOF_MONTH,  locale).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
134	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(hourZone,  locale).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(hourZone,  locale).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(hourZone,  locale).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
135	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.DAY_OF_MONTH)+  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.DAY_OF_MONTH)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.DAY_OF_MONTH)+  1;	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DAY_OF_MONTH)+    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
136	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  timeZone).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  timeZone).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone.getDefault(),  timeZone).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(TimeZone.getDefault(),    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
137	[BUG]  [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  Pattern  nameValues  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	Pattern  nameValues  =  Calendar.getInstance(dateZone,  locale).get(Calendar.YEAR);	  Pattern    nameValues    =    Calendar.getInstance(locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
138	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR)+  1;  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  locale).get(Calendar.YEAR)+  1;	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
139	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
140	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale,  locale).get(Calendar.MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.MONTH);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
141	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(value,  timeZone).get(Calendar.DAY_OF_MONTH);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(value,  timeZone).get(Calendar.DAY_OF_MONTH);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(value,  timeZone).get(Calendar.DAY_OF_MONTH);	  thisYear    =    Calendar.getInstance(timeZone,    value).get(Calendar.DAY_OF_MONTH);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
142	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  timeZone).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(clockZone,  timeZone).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(clockZone,  timeZone).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(clockZone,    locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
143	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisValue);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisValue);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  thisValue);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
144	[BUG]  [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  thisFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  thisFormatField);  [BUGGY]        StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	nameValues=  new  ConcurrentHashMap  <  Integer,  KeyValue[]>(thisYear,  value,  thisFormatField);	  nameValues=    new    ConcurrentHashMap    <    Integer,    KeyValue[]>(thisYear,    value);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
145	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY  -  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY  -  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    -    1);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
146	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY  +  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.HOUR_OF_DAY  +  1);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
147	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.DATE);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.DATE);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.DATE);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.DATE);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
148	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(locale,  thisYear).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  =  Calendar.getInstance(locale,  thisYear).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  =  Calendar.getInstance(locale,  thisYear).get(Calendar.YEAR);	  ThisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
149	[BUG]  [BUGGY]  ThisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.YEAR);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  ThisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.YEAR);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	ThisYear  =  Calendar.getInstance(locale,  timeZone).get(Calendar.YEAR);	  ThisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
150	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR,  value);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR,  value);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(thisYear,  locale).get(Calendar.YEAR,  value);	  thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR,    value);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
151	[BUG]  [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	if(value!=  null)  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  }  else  {  thisYear  =  Calendar.getInstance(timeZone,  locale).get(Calendar.HOUR_OF_DAY	  if(value    ==    null)    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.YEAR);    }    else    {    thisYear    =    Calendar.getInstance(timeZone,    locale).get(Calendar.HOUR_OF_DAY    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
152	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  1);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  1);	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
153	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  thisYear);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  thisYear);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(TimeZone,  locale).get(Calendar.YEAR,  thisYear);	  thisYear    =    Calendar.getInstance(TimeZone,    locale).get(Calendar.YEAR);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
154	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(hourZone,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(hourZone,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(hourZone,  locale).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
155	[BUG]  [BUGGY]  thisYear  =  Calendar.getInstance(dayOfOf_year,  locale).get(Calendar.HOUR_OF_DAY);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);      [BUGGY]  thisYear  =  Calendar.getInstance(dayOfOf_year,  locale).get(Calendar.HOUR_OF_DAY);  [BUGGY]      nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();  Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(     "Invalid  pattern     ");  }  currentFormatField=  patternMatcher.group();  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	118	118	2	replace	thisYear  =  Calendar.getInstance(dayOfOf_year,  locale).get(Calendar.HOUR_OF_DAY);	  thisYear    =    Calendar.getInstance(locale).get(Calendar.HOUR_OF_DAY);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
