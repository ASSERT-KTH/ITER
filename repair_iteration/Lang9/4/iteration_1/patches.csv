bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(2));  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  date  =  parse(source,  new  ParsePosition(2));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(2));	      date    =    parse(source,    new    ParsePosition(1));    	non-compiled	[CE]  missing  return  statement	4	None	replace
2	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(3));  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  date  =  parse(source,  new  ParsePosition(3));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(3));	      date    =    parse(source,    new    ParsePosition(1));    	non-compiled	[CE]  missing  return  statement	4	None	replace
3	[BUG]  [BUGGY]  return  date  <  0?  1  :  date;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  <  0?  1  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  <  0?  1  :  date;	  return    date    <    =    0?    1    :    date;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	11	None	replace
4	[BUG]  [BUGGY]  return  date  ==  0?  1  :  date;  [CE]  incomparable  types:  Date  and  int  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  0?  1  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  1  :  date;	  return    date    <    =    0?    1    :    date;    	non-compiled	[CE]  incomparable  types:  Date  and  int	11	None	replace
5	[BUG]  [BUGGY]  return  date  >=  0?  1  :  date;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  >=  0?  1  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  >=  0?  1  :  date;	  return    date    <    =    0?    1    :    date;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	11	None	replace
6	[BUG]  [BUGGY]  return  date!=  0?  1  :  date;  [CE]  incomparable  types:  Date  and  int  [FE]                AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  0?  1  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  0?  1  :  date;	  return    date    <    =    0?    1    :    date;    	non-compiled	[CE]  incomparable  types:  Date  and  int	11	None	replace
7	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date.getTime();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date.getTime();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_IMPERIAL  :  date.getTime();	  return    date!=    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  incompatible  types	14	None	replace
8	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date.toString();  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  date.toString();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_IMPERIAL  :  date.toString();	  return    date!=    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  incompatible  types	14	None	replace
9	[BUG]  [BUGGY]  return  date  ==  0?  null  :  date;  [CE]  incomparable  types:  Date  and  int  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  0?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  0?  null  :  date;	  return    date    <    =    0?    null    :    date;    	non-compiled	[CE]  incomparable  types:  Date  and  int	10	None	replace
10	[BUG]  [BUGGY]  return  date  <  0?  null  :  date;  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  <  0?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  <  0?  null  :  date;	  return    date    <    =    0?    null    :    date;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	10	None	replace
11	[BUG]  [BUGGY]  return  date!=  0?  null  :  date;  [CE]  incomparable  types:  Date  and  int  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  0?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  0?  null  :  date;	  return    date    <    =    0?    null    :    date;    	non-compiled	[CE]  incomparable  types:  Date  and  int	10	None	replace
12	[BUG]  [BUGGY]  return  date  >=  0?  null  :  date;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  >=  0?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  >=  0?  null  :  date;	  return    date    <    =    0?    null    :    date;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	replace
13	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(4));  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(4));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(4));	      Date    date    =    parse(source,    new    ParsePosition(2));    	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	12	None	replace
14	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  0);  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(2),  0);  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(2),  0);	      Date    date    =    parse(source,    new    ParsePosition(2));    	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	12	None	replace
15	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(3));  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(3));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(3));	      Date    date    =    parse(source,    new    ParsePosition(2));    	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	12	None	replace
16	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.getTime();  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.getTime();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  date.getTime();	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  incompatible  types	13	None	replace
17	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.toString();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.toString();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  date.toString();	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  incompatible  types	13	None	replace
18	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  locale;  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  locale;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  locale;	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  incompatible  types	13	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  date  =  parse(source,  new  ParsePosition(1));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	        date    =    parse(source,    new    ParsePosition(1));    date  =  parse(source,  new  ParsePosition(1));	  	compilable	  [FE]  AssertionError  	3	28	add
20	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  date  =  parse(source,  new  ParsePosition(1));  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  date  =  parse(source,  new  ParsePosition(1));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(1));    date  =  parse(source,  new  ParsePosition(1));	  	compilable	  [FE]  AssertionError  	3	28	add
21	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  Date  date  =  parse(source,  new  ParsePosition(1));  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]      AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  Date  date  =  parse(source,  new  ParsePosition(1));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(1));    Date  date  =  parse(source,  new  ParsePosition(1));	  	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	3	None	add
22	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  Date  date  =  parse(source,  new  ParsePosition(2));  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  Date  date  =  parse(source,  new  ParsePosition(2));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(1));    Date  date  =  parse(source,  new  ParsePosition(2));	  	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	3	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  date  =  parse(source,  new  ParsePosition(2));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	        date    =    parse(source,    new    ParsePosition(1));    date  =  parse(source,  new  ParsePosition(2));	  	compilable	  [FE]  AssertionError  	3	30	add
24	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  date  =  parse(source,  new  ParsePosition(2));  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(1));  date  =  parse(source,  new  ParsePosition(2));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(1));    date  =  parse(source,  new  ParsePosition(2));	  	compilable	  [FE]  AssertionError  	3	30	add
25	[BUG]  [BUGGY]  return  date.getTime()  -  1;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date.getTime()  -  1;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  -  1;	  return    date.getTime();    	non-compiled	[CE]  incompatible  types	7	None	replace
26	[BUG]  [BUGGY]  return  date.getTime()  +  1;  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date.getTime()  +  1;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime()  +  1;	  return    date.getTime();    	non-compiled	[CE]  incompatible  types	7	None	replace
27	[BUG]  [BUGGY]  return  date.getTime(),  locale);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date.getTime(),  locale);  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime(),  locale);	  return    date.getTime();    	non-compiled	[CE]  ';'  expected	7	None	replace
28	[BUG]  [BUGGY]  return  date.getTime(),  locale;  [CE]  ';'  expected  [FE]              AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date.getTime(),  locale;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date.getTime(),  locale;	  return    date.getTime();    	non-compiled	[CE]  ';'  expected	7	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(0));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	        date    =    parse(source,    new    ParsePosition(0));    date  =  parse(source,  new  ParsePosition(0));	  	compilable	  [FE]  AssertionError  	5	2	add
30	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(0));  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(0));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(0));    date  =  parse(source,  new  ParsePosition(0));	  	compilable	  [FE]  AssertionError  	5	2	add
31	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(1));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	        date    =    parse(source,    new    ParsePosition(0));    date  =  parse(source,  new  ParsePosition(1));	  	compilable	  [FE]  AssertionError  	5	28	add
32	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(1));  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(1));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(0));    date  =  parse(source,  new  ParsePosition(1));	  	compilable	  [FE]  AssertionError  	5	28	add
33	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  Date  date  =  parse(source,  new  ParsePosition(0));  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  Date  date  =  parse(source,  new  ParsePosition(0));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(0));    Date  date  =  parse(source,  new  ParsePosition(0));	  	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	5	None	add
34	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  Date  date  =  parse(source,  new  ParsePosition(1));  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  Date  date  =  parse(source,  new  ParsePosition(1));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(0));    Date  date  =  parse(source,  new  ParsePosition(1));	  	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	5	None	add
35	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(2));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	        date    =    parse(source,    new    ParsePosition(0));    date  =  parse(source,  new  ParsePosition(2));	  	compilable	  [FE]  AssertionError  	5	30	add
36	[BUG]  [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(2));  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]      date  =  parse(source,  new  ParsePosition(0));  date  =  parse(source,  new  ParsePosition(2));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	        date    =    parse(source,    new    ParsePosition(0));    date  =  parse(source,  new  ParsePosition(2));	  	compilable	  [FE]  AssertionError  	5	30	add
37	[BUG]  [BUGGY]  date  =  parse(source,  new  ParsePosition(4));  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  date  =  parse(source,  new  ParsePosition(4));  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	date  =  parse(source,  new  ParsePosition(4));	      date    =    parse(source,    new    ParsePosition(0));    	non-compiled	[CE]  missing  return  statement	6	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  null?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	return  date!=  null?  null  :  date;	  return    date    }?    null    :    date;    	compilable	  [FE]  AssertionError  	9	32	replace
39	[BUG]  [BUGGY]  return  date!=  null?  null  :  date;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  null?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  null  :  date;	  return    date    }?    null    :    date;    	compilable	  [FE]  AssertionError  	9	32	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	add	return  date  ==  null?  null  :  date;	  return    date    }?    null    :    date;    	compilable	  [FE]  AssertionError  	9	2	replace
41	[BUG]  [BUGGY]  return  date  ==  null?  null  :  date;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  null  :  date;	  return    date    }?    null    :    date;    	compilable	  [FE]  AssertionError  	9	2	replace
42	[BUG]  [BUGGY]  return  date!=  null?  null  :  date.getTime();  [CE]  incompatible  types  [FE]                AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  null?  null  :  date.getTime();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  null  :  date.getTime();	  return    date    }?    null    :    date;    	non-compiled	[CE]  incompatible  types	9	None	replace
43	[BUG]  [BUGGY]  return  date  >=  null?  null  :  date;  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  >=  null?  null  :  date;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  >=  null?  null  :  date;	  return    date    }?    null    :    date;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	9	None	replace
44	[BUG]  [BUGGY]  return  date  ==  null?  null  :  date.getTime();  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  null  :  date.getTime();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  null  :  date.getTime();	  return    date    {    null?    null    :    date.getTime();    	non-compiled	[CE]  incompatible  types	8	None	replace
45	[BUG]  [BUGGY]  return  date  ==  null?  null  :  date.getValue();  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  null  :  date.getValue();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  null  :  date.getValue();	  return    date    {    null?    null    :    date.getTime();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
46	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  0);  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(1),  0);  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(1),  0);	      Date    date    =    parse(source,    new    ParsePosition(1));    	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	2	None	replace
47	[BUG]  [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(0),  0);  [CE]  variable  date  is  already  defined  in  method  parse(String)  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  Date  date  =  parse(source,  new  ParsePosition(0),  0);  [BUGGY]    return  date;  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	Date  date  =  parse(source,  new  ParsePosition(0),  0);	      Date    date    =    parse(source,    new    ParsePosition(0));    	non-compiled	[CE]  variable  date  is  already  defined  in  method  parse(String)	1	None	replace
48	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  JAPANESE_IMPERIAL;  [CE]  incompatible  types  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  JAPANESE_IMPERIAL;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  JAPANESE_IMPERIAL;	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  incompatible  types	13	None	replace
49	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  JAPANESE_SECOND;  [CE]  cannot  find  symbol  JAPANESE_SECOND  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  JAPANESE_SECOND;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  JAPANESE_SECOND;	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  cannot  find  symbol  JAPANESE_SECOND	13	None	replace
50	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  JAPANESE_IMPERIAL;  [CE]  incompatible  types  [FE]          AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  null?  JAPANESE_IMPERIAL  :  JAPANESE_IMPERIAL;  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_IMPERIAL  :  JAPANESE_IMPERIAL;	  return    date!=    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  incompatible  types	14	None	replace
51	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.cloneTwo();  [CE]  cannot  find  symbol  [FE]        AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  JAPANESE_IMPERIAL  :  date.cloneTwo();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_IMPERIAL  :  date.cloneTwo();	  return    date    ==    null?    JAPANESE_IMPERIAL    :    date;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
52	[BUG]  [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  date.getTime();  [CE]  cannot  find  symbol  JAPANESE_DATE  [FE]              AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date!=  null?  JAPANESE_DATE  :  date.getTime();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date!=  null?  JAPANESE_DATE  :  date.getTime();	  return    date!=    null?    JAPANESE_DATE    :    date;    	non-compiled	[CE]  cannot  find  symbol  JAPANESE_DATE	16	None	replace
53	[BUG]  [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  date.getTime();  [CE]  cannot  find  symbol  JAPANESE_DATE  [FE]            AssertionError    [CONTEXT]    Date  date=  parse(source,  new  ParsePosition(0));  if(date==null)  {  if  (locale.equals(JAPANESE_IMPERIAL))  {  throw  new  ParseException(     "(The     "  +locale  +     "  locale  does  not  support  dates  before  1868  AD)\n   "  +     "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }  throw  new  ParseException(   "Unparseable  date:  \   "   "+source+   "\   "  does  not  match     "+parsePattern.pattern(),  0);  }    [BUGGY]  return  date  ==  null?  JAPANESE_DATE  :  date.getTime();  [BUGGY]    }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Date  date  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	260	260	2	replace	return  date  ==  null?  JAPANESE_DATE  :  date.getTime();	  return    date    ==    null?    JAPANESE_DATE    :    date;    	non-compiled	[CE]  cannot  find  symbol  JAPANESE_DATE	15	None	replace
