bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Matcher  patternMatcher=  collector.matcher(thisYear);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  collector.matcher(thisYear);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  collector.matcher(thisYear);	  Matcher    patternMatcher=    collector.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  Matcher  patternMatcher=  collector.matcher(regex);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  collector.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  collector.matcher(regex);	  Matcher    patternMatcher=    collector.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  Matcher  patternMatcher=  collector.matcher(thisYear,  pattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  collector.matcher(thisYear,  pattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  collector.matcher(thisYear,  pattern);	  Matcher    patternMatcher=    collector.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  Matcher  patternMatcher=  collector.matcher(nameValues);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  collector.matcher(nameValues);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  collector.matcher(nameValues);	  Matcher    patternMatcher=    collector.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  thisFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  thisFormatField);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  new  Pattern(thisYear,  thisFormatField);	      Pattern    patternPattern    =    new    Pattern(thisYear,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  thisValue);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  thisValue);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  new  Pattern(thisYear,  thisValue);	      Pattern    patternPattern    =    new    Pattern(thisYear,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  thisTimeZone);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  thisTimeZone);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  new  Pattern(thisYear,  thisTimeZone);	      Pattern    patternPattern    =    new    Pattern(thisYear,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  value);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  new  Pattern(thisYear,  value);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  new  Pattern(thisYear,  value);	      Pattern    patternPattern    =    new    Pattern(thisYear,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  Pattern  patternMatcher=  patternPattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  patternPattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  patternPattern.matcher(regex);	  Matcher    patternMatcher=    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  Pattern  patternMatcher=  parsePattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  parsePattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  parsePattern.matcher(regex);	  Matcher    patternMatcher=    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  Pattern  patternMatcher=  collector.matcher(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  collector.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  collector.matcher(regex);	  Matcher    patternMatcher=    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(regex,  collector);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(regex,  collector);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(regex,  collector);	      Pattern    patternPattern    =    getFormatPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(collection);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(collection);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(collection);	      Pattern    patternPattern    =    getFormatPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  pattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  pattern);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(thisYear,  pattern);	      Pattern    patternPattern    =    getFormatPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  Pattern  patternPattern  =  collector.computePattern(regex);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  collector.computePattern(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  collector.computePattern(regex);	      Pattern    patternPattern    =    parsePattern.computePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  Pattern  patternPattern  =  compiler.computePattern(regex);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  compiler.computePattern(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  compiler.computePattern(regex);	      Pattern    patternPattern    =    parsePattern.computePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
17	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.computePattern(thisYear,  pattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.computePattern(thisYear,  pattern);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.computePattern(thisYear,  pattern);	      Pattern    patternPattern    =    parsePattern.computePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
18	[BUG]  [BUGGY]  Pattern  patternPattern  =  thisYear.computePattern(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  thisYear.computePattern(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  thisYear.computePattern(regex);	      Pattern    patternPattern    =    parsePattern.computePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
19	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  collector);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  collector);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(thisYear,  collector);	      Pattern    patternPattern    =    getFormatPattern(thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  nameValues);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  nameValues);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(thisYear,  nameValues);	      Pattern    patternPattern    =    getFormatPattern(thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(thisYear,  regex);	      Pattern    patternPattern    =    getFormatPattern(thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  Pattern  patternPattern  =  collector.matcher(regex);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  collector.matcher(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  collector.matcher(regex);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  Pattern  patternPattern  =  collector.parsePattern(regex);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  collector.parsePattern(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  collector.parsePattern(regex);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  Pattern  patternPattern  =  collector.findPattern(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  collector.findPattern(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  collector.findPattern(regex);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  Pattern  patternMatcher=  pattern.matcher(parsePattern);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  pattern.matcher(parsePattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  pattern.matcher(parsePattern);	  Matcher    patternMatcher=    parsePattern.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  Pattern  patternMatcher=  patternPattern.matcher(thisYear);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  patternPattern.matcher(thisYear);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  patternPattern.matcher(thisYear);	  Matcher    patternMatcher=    parsePattern.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Pattern  patternPattern  =  getPattern(thisYear);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getPattern(thisYear);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getPattern(thisYear);	      Pattern    patternPattern    =    getPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  Pattern  patternPattern  =  getPattern(regex,  collector);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getPattern(regex,  collector);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getPattern(regex,  collector);	      Pattern    patternPattern    =    getPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
29	[BUG]  [BUGGY]  Pattern  patternPattern  =  getPattern(thisYear,  pattern);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getPattern(thisYear,  pattern);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getPattern(thisYear,  pattern);	      Pattern    patternPattern    =    getPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  Pattern  patternPattern  =  getPattern(collection);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getPattern(collection);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getPattern(collection);	      Pattern    patternPattern    =    getPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  Pattern  patternPattern  =  thisYear.getPattern();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  thisYear.getPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  thisYear.getPattern();	      Pattern    patternPattern    =    parsePattern.getPattern();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  Pattern  patternPattern  =  pattern.getPattern();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  pattern.getPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  pattern.getPattern();	      Pattern    patternPattern    =    parsePattern.getPattern();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  Pattern  patternPattern  =  regex.getPattern();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  regex.getPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  regex.getPattern();	      Pattern    patternPattern    =    parsePattern.getPattern();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(nameValues);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(nameValues);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  thisYear.matcher(nameValues);	  Matcher    patternMatcher=    thisYear.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  thisYear.matcher(regex);	  Matcher    patternMatcher=    thisYear.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
36	[BUG]  [BUGGY]  Pattern  patternMatcher  =  getPattern(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher  =  getPattern(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher  =  getPattern(regex);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  Pattern  patternMatcher  =  new  Pattern(thisYear,  thisYear);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher  =  new  Pattern(thisYear,  thisYear);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher  =  new  Pattern(thisYear,  thisYear);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  Pattern  patternMatcher  =  new  Pattern(regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher  =  new  Pattern(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher  =  new  Pattern(regex);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  Pattern  patternMatcher  =  new  Pattern(thisYear);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher  =  new  Pattern(thisYear);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher  =  new  Pattern(thisYear);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  Matcher  patternMatcher=  this.formatPattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  this.formatPattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  this.formatPattern.matcher(regex);	  Matcher    patternMatcher=    this.formatPattern.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  Matcher  patternMatcher=  this.formatPattern.matcher(thisYear);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  this.formatPattern.matcher(thisYear);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  this.formatPattern.matcher(thisYear);	  Matcher    patternMatcher=    this.formatPattern.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  Pattern  patternMatcher=  this.formatPattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  this.formatPattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  this.formatPattern.matcher(regex);	  Matcher    patternMatcher=    this.formatPattern.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  Pattern  patternMatcher=  pattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  pattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  pattern.matcher(regex);	  Matcher    patternMatcher=    formatPattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  Pattern  patternPattern  =  thisYear.getFormatPattern();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  thisYear.getFormatPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  thisYear.getFormatPattern();	      Pattern    patternPattern    =    parsePattern.getFormatPattern();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  Pattern  patternPattern  =  regex.getFormatPattern();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  regex.getFormatPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  regex.getFormatPattern();	      Pattern    patternPattern    =    parsePattern.getFormatPattern();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  Pattern  patternPattern  =  collector.getFormatPattern();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  collector.getFormatPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  collector.getFormatPattern();	      Pattern    patternPattern    =    parsePattern.getFormatPattern();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  Pattern  patternPattern  =  pattern.getFormatPattern();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  pattern.getFormatPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  pattern.getFormatPattern();	      Pattern    patternPattern    =    parsePattern.getFormatPattern();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
48	[BUG]  [BUGGY]  Pattern  patternMatcher=  tzNames.matcher(regex);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher=  tzNames.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher=  tzNames.matcher(regex);	  Pattern    patternMatcher=    formatPattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(pattern);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(pattern);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(pattern);	      Pattern    patternPattern    =    getFormatPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(parsePattern);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(parsePattern);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(parsePattern);	      Pattern    patternPattern    =    getFormatPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]  Pattern  patternPattern  =  getPattern(pattern);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getPattern(pattern);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getPattern(pattern);	      Pattern    patternPattern    =    getPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  Pattern  patternPattern  =  getPattern(nameValues);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getPattern(nameValues);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getPattern(nameValues);	      Pattern    patternPattern    =    getPattern(regex);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  Pattern  patternPattern  =  tzNames.getFormatPattern();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  tzNames.getFormatPattern();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  tzNames.getFormatPattern();	      Pattern    patternPattern    =    parsePattern.getFormatPattern();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.getFormatPattern(thisYear);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.getFormatPattern(thisYear);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.getFormatPattern(thisYear);	      Pattern    patternPattern    =    parsePattern.getFormatPattern();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
55	[BUG]  [BUGGY]  Matcher  patternMatcher=  parsePattern.matcher(regex,  collector);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  parsePattern.matcher(regex,  collector);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  parsePattern.matcher(regex,  collector);	  Matcher    patternMatcher=    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  Matcher  patternMatcher=  parsePattern.matcher(nameValues);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  parsePattern.matcher(nameValues);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  parsePattern.matcher(nameValues);	  Matcher    patternMatcher=    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
57	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.matcher(regex,  collector);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.matcher(regex,  collector);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.matcher(regex,  collector);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
58	[BUG]  [BUGGY]  Pattern  patternPattern  =  tzNames.matcher(regex);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  tzNames.matcher(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  tzNames.matcher(regex);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.matcher(nameValues);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.matcher(nameValues);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.matcher(nameValues);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  Pattern  patternPattern  =  new  Pattern(nameValues,  thisYear);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  new  Pattern(nameValues,  thisYear);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  new  Pattern(nameValues,  thisYear);	      Pattern    patternPattern    =    new    Pattern(thisYear,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
61	[BUG]  [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(thisFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(thisFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  thisYear.matcher(thisFormatField);	  Matcher    patternMatcher=    thisYear.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
62	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.computePattern(regex,  collector);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.computePattern(regex,  collector);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.computePattern(regex,  collector);	      Pattern    patternPattern    =    parsePattern.computePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
63	[BUG]  [BUGGY]  Pattern  patternMatcher  =  getStrategy(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher  =  getStrategy(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher  =  getStrategy(regex);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  Pattern  patternMatcher  =  getFormat(regex);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher  =  getFormat(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher  =  getFormat(regex);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
65	[BUG]  [BUGGY]  Matcher  patternMatcher=  formatPattern.matcher(regex,  collector);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  formatPattern.matcher(regex,  collector);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  formatPattern.matcher(regex,  collector);	  Matcher    patternMatcher=    formatPattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
66	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  thisValue);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  thisValue);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(thisYear,  thisValue);	      Pattern    patternPattern    =    getFormatPattern(thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
67	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.cloneTree();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.cloneTree();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.cloneTree();	      Pattern    patternPattern    =    parsePattern.getPattern();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
68	[BUG]  [BUGGY]  Pattern  patternMatcher  =  new  Pattern(thisYear,  thisTimeZone);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternMatcher  =  new  Pattern(thisYear,  thisTimeZone);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternMatcher  =  new  Pattern(thisYear,  thisTimeZone);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
69	[BUG]  [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(currentFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  thisYear.matcher(currentFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  thisYear.matcher(currentFormatField);	  Matcher    patternMatcher=    thisYear.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  thisTimeZone);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  getFormatPattern(thisYear,  thisTimeZone);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  getFormatPattern(thisYear,  thisTimeZone);	      Pattern    patternPattern    =    getFormatPattern(thisYear);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
71	[BUG]  [BUGGY]  Matcher  patternMatcher=  patternPattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  patternPattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  patternPattern.matcher(regex);	  Matcher    patternMatcher=    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.peek();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.peek();  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.peek();	      Pattern    patternPattern    =    parsePattern.getPattern();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
73	[BUG]  [BUGGY]  Pattern  patternPattern  =  patternPattern.computePattern(regex);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  patternPattern.computePattern(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  patternPattern.computePattern(regex);	      Pattern    patternPattern    =    parsePattern.computePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
74	[BUG]  [BUGGY]  Pattern  patternPattern  =  patternPattern.computePattern(thisYear);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  patternPattern.computePattern(thisYear);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  patternPattern.computePattern(thisYear);	      Pattern    patternPattern    =    parsePattern.computePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
75	[BUG]  [BUGGY]  Matcher  patternMatcher=  thisPattern.matcher(pattern);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Matcher  patternMatcher=  thisPattern.matcher(pattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Matcher  patternMatcher=  thisPattern.matcher(pattern);	  Matcher    patternMatcher=    parsePattern.matcher(pattern);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
76	[BUG]  [BUGGY]  Pattern  patternPattern  =  patternPattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  patternPattern.matcher(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  patternPattern.matcher(regex);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
77	[BUG]  [BUGGY]  Pattern  patternPattern  =  parsePattern.matcher(pattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  parsePattern.matcher(pattern);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  parsePattern.matcher(pattern);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
78	[BUG]  [BUGGY]  Pattern  patternPattern  =  thisYear.matcher(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    private  void  init()  {  thisYear=  Calendar.getInstance(timeZone,  locale).get(Calendar.YEAR);  nameValues=  new  ConcurrentHashMap<Integer,  KeyValue[]>();  StringBuilder  regex=  new  StringBuilder();  List<Strategy>  collector  =  new  ArrayList<Strategy>();    [BUGGY]  Pattern  patternPattern  =  thisYear.matcher(regex);  [BUGGY]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	123	123	2	replace	Pattern  patternPattern  =  thisYear.matcher(regex);	      Pattern    patternPattern    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
