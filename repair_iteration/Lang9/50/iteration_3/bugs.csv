bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField!=    null    ||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  if(currentFormatField  ==  null  ||  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  ||  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  ||  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField!=    null    ||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  patternMatcher.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  patternMatcher.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  patternMatcher.equals(nextFormatField))  {	  if(currentFormatField!=    null    ||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  regex.addRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  regex.addRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  regex.addRegex(this,  currentFormatField))  {	  if(regex!=    null    ||    currentStrategy.addRegex(this,    currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
5	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  regex.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  regex.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  regex.addRegex(this,  currentStrategy))  {	  if(regex!=    null    ||    currentStrategy.addRegex(this,    currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
6	[BUG]  [BUGGY]  if(currentStrategy!=  null  ||  regex.addRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  ||  regex.addRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  ||  regex.addRegex(this,  currentFormatField))  {	  if(regex!=    null    ||    currentStrategy.addRegex(this,    currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
7	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {	  if(currentFormatField!=    null    &&    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
8	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {	  if(currentFormatField!=    null    &&    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
9	[BUG]  [BUGGY]  if(regex!=  null  &&  currentFormatField.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  &&  currentFormatField.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  &&  currentFormatField.addRegex(this,  currentStrategy))  {	  if(currentFormatField!=    null    &&    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
10	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  currentFormatField);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  currentFormatField);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    strategies);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
11	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  nextFormatField);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  nextFormatField);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    strategies);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
12	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  strategies,  parsePattern);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  strategies,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  strategies,  parsePattern);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    strategies);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
13	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  patternMatcher))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
14	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  nextFormatField))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
15	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  patternMatcher.addRegex(this,  currentStrategy))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
16	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  regex))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
17	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.length()  >  0)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.length()  >  0)  {	  if(currentStrategy!=    null    &&    currentFormatField.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
18	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.length()  >  0)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.length()  >  0)  {	  if(currentStrategy!=    null    &&    currentFormatField.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
19	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  currentFormatField.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  currentFormatField.length()  >  0)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  currentFormatField.length()  >  0)  {	  if(currentStrategy!=    null    &&    currentFormatField.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
20	[BUG]  [BUGGY]  if(nextFormatField!=  null  &&  currentFormatField.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField!=  null  &&  currentFormatField.length()  >  0)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField!=  null  &&  currentFormatField.length()  >  0)  {	  if(currentStrategy!=    null    &&    currentFormatField.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
21	[BUG]  [BUGGY]  if(currentStrategy!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {	  if(regex!=    null    &&    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
22	[BUG]  [BUGGY]  if(regex!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {	  if(regex!=    null    &&    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
23	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {	  if(nextFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
24	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {	  if(nextFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
25	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {	  if(nextFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  Pattern  patternMatcher  =  parsePattern.parsePattern();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  parsePattern.parsePattern();  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  parsePattern.parsePattern();	  Pattern    patternMatcher    =    patternMatcher.parsePattern();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
27	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(currentFormatField);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parsePattern(currentFormatField);	  Pattern    patternMatcher    =    patternMatcher.parsePattern();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
28	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  currentFormatField;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  currentFormatField;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  currentFormatField;	  Pattern    collector    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
29	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  nextFormatField;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  nextFormatField;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  nextFormatField;	  Pattern    collector    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
30	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex,  currentFormatField;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex,  currentFormatField;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  regex,  currentFormatField;	  Pattern    collector    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
31	[BUG]  [BUGGY]  Pattern  collector  =  regex.group(),  patternMatcher;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  regex.group(),  patternMatcher;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  regex.group(),  patternMatcher;	  Pattern    collector    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
32	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(currentFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parse(currentFormatField);	  Pattern    patternMatcher    =    patternMatcher.parse();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
33	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parse(regex);	  Pattern    patternMatcher    =    patternMatcher.parse();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
34	[BUG]  [BUGGY]  if(regex!=  null  ||  currentFormatField.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  ||  currentFormatField.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  ||  currentFormatField.addRegex(this,  currentStrategy))  {	  if(currentStrategy!=    null    ||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
35	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {	  if(currentStrategy!=    null    ||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
36	[BUG]  [BUGGY]  patternMatcher.addRegex(this,  nextFormatField);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.addRegex(this,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.addRegex(this,  nextFormatField);	  patternMatcher.add(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
37	[BUG]  [BUGGY]  patternMatcher.addRegex(this,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.addRegex(this,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.addRegex(this,  currentFormatField);	  patternMatcher.add(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
38	[BUG]  [BUGGY]  patternMatcher.add(currentFormatField,  nextFormatField);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.add(currentFormatField,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.add(currentFormatField,  nextFormatField);	  patternMatcher.add(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
39	[BUG]  [BUGGY]  patternMatcher.remove(currentFormatField);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.remove(currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.remove(currentFormatField);	  patternMatcher.add(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
40	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(currentFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.parsePattern(currentFormatField);	  Pattern    collector    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
41	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(regex,  parsePattern);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(regex,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.parsePattern(regex,  parsePattern);	  Pattern    collector    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
42	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(this,  regex);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(this,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.parsePattern(this,  regex);	  Pattern    collector    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
43	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(regex,  strategies);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern(regex,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.parsePattern(regex,  strategies);	  Pattern    collector    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
44	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.substring(0,  nextFormatField.length()  -  1));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.substring(0,  nextFormatField.length()  -  1));  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(nextFormatField.substring(0,  nextFormatField.length()  -  1));	  Pattern    collector    =    Pattern.compile(nextFormatField.group());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
45	[BUG]  [BUGGY]  if(currentStrategy!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {	  if(currentStrategy!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
46	[BUG]  [BUGGY]  if(nextFormatField!=  null  ||  currentStrategy.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField!=  null  ||  currentStrategy.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField!=  null  ||  currentStrategy.addRegex(this,  nextFormatField))  {	  if(currentStrategy!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
47	[BUG]  [BUGGY]  if(currentStrategy!=  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {	  if(currentStrategy!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
48	[BUG]  [BUGGY]  if(nextFormatField!=  null  &&  nextFormatField.equals(this))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField!=  null  &&  nextFormatField.equals(this))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField!=  null  &&  nextFormatField.equals(this))  {	  if(currentFormatField!=    null    &&    nextFormatField.equals(this))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
49	[BUG]  [BUGGY]  if(nextFormatField!=  null  &&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField!=  null  &&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField!=  null  &&  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField!=    null    &&    nextFormatField.equals(this))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
50	[BUG]  [BUGGY]  if(nextFormatField!=  null  &&  currentFormatField.equals(this))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField!=  null  &&  currentFormatField.equals(this))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField!=  null  &&  currentFormatField.equals(this))  {	  if(currentFormatField!=    null    &&    nextFormatField.equals(this))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
51	[BUG]  [BUGGY]  if(regex!=  null  &&  currentFormatField.addRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  &&  currentFormatField.addRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  &&  currentFormatField.addRegex(this,  currentFormatField))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
52	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(currentFormatField,  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(currentFormatField,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(currentFormatField,  regex);	  Pattern    collector    =    patternMatcher.group(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
53	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(currentFormatField,  nextFormatField);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(currentFormatField,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(currentFormatField,  nextFormatField);	  Pattern    collector    =    patternMatcher.group(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
54	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(this,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(this,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(this,  currentFormatField);	  Pattern    collector    =    patternMatcher.group(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
55	[BUG]  [BUGGY]  if(patternMatcher!=  null  &&  currentFormatField.group()  >  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher!=  null  &&  currentFormatField.group()  >  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher!=  null  &&  currentFormatField.group()  >  nextFormatField)  {	  if(currentFormatField!=    null    &&    patternMatcher.group()    >    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
56	[BUG]  [BUGGY]  if(patternMatcher!=  null  &&  patternMatcher.group()  >  currentFormatField)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher!=  null  &&  patternMatcher.group()  >  currentFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher!=  null  &&  patternMatcher.group()  >  currentFormatField)  {	  if(currentFormatField!=    null    &&    patternMatcher.group()    >    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
57	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.group()  <  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.group()  <  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  patternMatcher.group()  <  nextFormatField)  {	  if(currentFormatField!=    null    &&    patternMatcher.group()    >    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
58	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  patternMatcher.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  patternMatcher.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  patternMatcher.addRegex(this,  currentStrategy))  {	  if(currentFormatField!=    null    ||    currentStrategy.addRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
59	[BUG]  [BUGGY]  if(currentFormatField  ==  null  ||  patternMatcher.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  ||  patternMatcher.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  ||  patternMatcher.addRegex(this,  currentStrategy))  {	  if(currentFormatField!=    null    ||    currentStrategy.addRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
60	[BUG]  [BUGGY]  if(currentFormatField  ==  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {	  if(currentFormatField!=    null    ||    currentStrategy.addRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
61	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern(),  currentFormatField);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    regex);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
62	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  patternMatcher);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern(),  patternMatcher);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    regex);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
63	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  nextFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  nextFormatField);	  Pattern    collector    =    Pattern.compile(regex.toString(),    regex);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
64	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  strategy);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  strategy);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  strategy);	  Pattern    collector    =    Pattern.compile(regex.toString(),    regex);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
65	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    nextFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
66	[BUG]  [BUGGY]  if(regex.equals(nextFormatField)&&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(nextFormatField)&&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(nextFormatField)&&  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    nextFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
67	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentStrategy))  {	  if(currentFormatField.equals(nextFormatField)&&    nextFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
68	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(regex))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(regex))  {	  if(currentFormatField.equals(nextFormatField)&&    nextFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
69	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher,  nextFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(patternMatcher,  nextFormatField);	  Pattern    collector    =    Pattern.compile(nextFormatField,    patternMatcher);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
70	[BUG]  [BUGGY]  if(currentFormatField  ==  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  &&  currentStrategy.addRegex(this,  nextFormatField))  {	  if(currentFormatField!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
71	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toPattern(),  parsePattern);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toPattern(),  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toPattern(),  parsePattern);	  Pattern    patternMatcher    =    Pattern.compile(regex.toPattern());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
72	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.toString());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.toString());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(nextFormatField.toString());	  Pattern    collector    =    Pattern.compile(currentFormatField.toString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
73	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toString(),  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toString(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.toString(),  regex);	  Pattern    collector    =    Pattern.compile(currentFormatField.toString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
74	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  key);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  key);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField,  key);	  Pattern    collector    =    Pattern.compile(currentFormatField,    nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
75	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  nextFormatField,  patternMatcher);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  nextFormatField,  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField,  nextFormatField,  patternMatcher);	  Pattern    collector    =    Pattern.compile(currentFormatField,    nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  currentFormatField);	  Pattern    patternMatcher    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
77	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  nextFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  nextFormatField);	  Pattern    patternMatcher    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
78	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  regex,  currentFormatField);	  Pattern    patternMatcher    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
79	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  parsePattern);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  regex,  parsePattern);	  Pattern    patternMatcher    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
80	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  patternMatcher,  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  patternMatcher,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField,  patternMatcher,  regex);	  Pattern    collector    =    Pattern.compile(currentFormatField,    patternMatcher);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
81	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  currentStrategy);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  currentStrategy);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField,  currentStrategy);	  Pattern    collector    =    Pattern.compile(currentFormatField,    patternMatcher);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
82	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  patternMatcher,  parsePattern);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField,  patternMatcher,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField,  patternMatcher,  parsePattern);	  Pattern    collector    =    Pattern.compile(currentFormatField,    patternMatcher);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
83	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.group().contains(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.group().contains(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  patternMatcher.group().contains(currentFormatField))  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
84	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  regex))  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
85	[BUG]  [BUGGY]  if(currentFormatField.contains(regex))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(regex))  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  nextFormatField))  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
87	[BUG]  [BUGGY]  if(regex  ==  null  ||  currentFormatField.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex  ==  null  ||  currentFormatField.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex  ==  null  ||  currentFormatField.addRegex(this,  currentStrategy))  {	  if(currentFormatField    ==    null    ||    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
88	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  nextFormatField.contains(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  nextFormatField.contains(currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  nextFormatField.contains(currentStrategy))  {	  if(nextFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
89	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  nextFormatField.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  nextFormatField.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  nextFormatField.containsRegex(this,  regex))  {	  if(nextFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
90	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  parsePattern);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  parsePattern);	  Pattern    collector    =    Pattern.compile(regex.toString()    +    strategies);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
91	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  currentFormatField);	  Pattern    collector    =    Pattern.compile(regex.toString()    +    strategies);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
92	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString()  +  strategies,  regex);	  Pattern    collector    =    Pattern.compile(regex.toString()    +    strategies);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
93	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(nextFormatField.toString());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(nextFormatField.toString());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(nextFormatField.toString());	  Pattern    patternMatcher    =    Pattern.compile(currentFormatField.toString());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
94	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(currentFormatField.toString(),  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(currentFormatField.toString(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(currentFormatField.toString(),  regex);	  Pattern    patternMatcher    =    Pattern.compile(currentFormatField.toString());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
95	[BUG]  [BUGGY]  if(currentFormatField  ==  null  ||  patternMatcher.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  ||  patternMatcher.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  ||  patternMatcher.equals(nextFormatField))  {	  if(currentFormatField    ==    null    ||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
96	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  parsePattern,  strategies);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  parsePattern,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  parsePattern,  strategies);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
97	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  strategy);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  strategy);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  strategy);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
98	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  parsePattern,  strategies);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  parsePattern,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  parsePattern,  strategies);	  Pattern    collector    =    Pattern.compile(regex.toString(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
99	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  patternPattern,  parsePattern);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  patternPattern,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  patternPattern,  parsePattern);	  Pattern    collector    =    Pattern.compile(regex.toString(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
100	[BUG]  [BUGGY]  if(currentFormatField  ==  null  ||  patternMatcher.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  ||  patternMatcher.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  ||  patternMatcher.addRegex(this,  nextFormatField))  {	  if(currentFormatField    ==    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
101	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(regex,  parsePattern);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(regex,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parsePattern(regex,  parsePattern);	  Pattern    patternMatcher    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
102	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(this,  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(this,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parsePattern(this,  regex);	  Pattern    patternMatcher    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
103	[BUG]  [BUGGY]  Pattern  patternMatcher  =  parsePattern.parsePattern(regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  parsePattern.parsePattern(regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  parsePattern.parsePattern(regex);	  Pattern    patternMatcher    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
104	[BUG]  [BUGGY]  if(patternMatcher.group().equals(currentFormatField)||  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.group().equals(currentFormatField)||  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.group().equals(currentFormatField)||  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group().equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
105	[BUG]  [BUGGY]  if(patternMatcher.group().equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.group().equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.group().equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group().equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
106	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group().equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
107	[BUG]  [BUGGY]  if(regex!=  null  &&  currentFormatField.containsRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  &&  currentFormatField.containsRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  &&  currentFormatField.containsRegex(this,  currentStrategy))  {	  if(currentStrategy!=    null    &&    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
108	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  patternMatcher))  {	  if(currentStrategy!=    null    &&    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
109	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  nextFormatField))  {	  if(currentStrategy!=    null    &&    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
110	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  regex))  {	  if(currentStrategy!=    null    &&    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
111	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)||  patternMatcher.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)||  patternMatcher.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)||  patternMatcher.group()  ==  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group()    ==    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
112	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group()  ==  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group()    ==    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
113	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)||  currentFormatField.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)||  currentFormatField.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)||  currentFormatField.group()  ==  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group()    ==    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
114	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)||  nextFormatField.group()  ==  currentFormatField)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)||  nextFormatField.group()  ==  currentFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)||  nextFormatField.group()  ==  currentFormatField)  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group()    ==    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
115	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.group(),  patternMatcher);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.group(),  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.group(),  patternMatcher);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
116	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group(),  nextFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group(),  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(patternMatcher.group(),  nextFormatField);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
117	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  currentFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.group(),  currentFormatField);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
118	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.group(),  patternMatcher);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.group(),  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(nextFormatField.group(),  patternMatcher);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
119	[BUG]  [BUGGY]  if(nextFormatField  ==  null  ||  currentFormatField!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField  ==  null  ||  currentFormatField!=  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField  ==  null  ||  currentFormatField!=  null)  {	  if(currentFormatField    ==    null    ||    nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
120	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  nextFormatField  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  nextFormatField  ==  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  nextFormatField  ==  null)  {	  if(currentFormatField    ==    null    ||    nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
121	[BUG]  [BUGGY]  if(currentFormatField  ==  null  ||  nextFormatField  ==  null)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  ||  nextFormatField  ==  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  ||  nextFormatField  ==  null)  {	  if(currentFormatField    ==    null    ||    nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
122	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.contains(this,  nextFormatField))  {	  if(currentStrategy!=    null    &&    currentFormatField.contains(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
123	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.contains(this,  patternMatcher))  {	  if(currentStrategy!=    null    &&    currentFormatField.contains(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
124	[BUG]  [BUGGY]  if(patternMatcher!=  null  &&  currentFormatField.contains(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher!=  null  &&  currentFormatField.contains(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher!=  null  &&  currentFormatField.contains(this,  currentStrategy))  {	  if(currentStrategy!=    null    &&    currentFormatField.contains(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
125	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.contains(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.contains(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  patternMatcher.contains(this,  currentStrategy))  {	  if(currentStrategy!=    null    &&    currentFormatField.contains(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
126	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group().contains(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group().contains(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  patternMatcher.group().contains(currentFormatField))  {	  if(currentFormatField.contains(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
127	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  patternMatcher.group().equals(currentFormatField))  {	  if(currentFormatField.contains(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
128	[BUG]  [BUGGY]  if(patternMatcher.contains(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.contains(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.contains(currentFormatField))  {	  if(currentFormatField.contains(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
129	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  patternMatcher.group()  ==  nextFormatField)  {	  if(currentFormatField.contains(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
130	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toPattern(),  parsePattern);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toPattern(),  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.toPattern(),  parsePattern);	  Pattern    collector    =    Pattern.compile(currentFormatField.toPattern());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
131	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toPattern(),  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toPattern(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.toPattern(),  regex);	  Pattern    collector    =    Pattern.compile(currentFormatField.toPattern());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
132	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
133	[BUG]  [BUGGY]  if(currentFormatField.equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
134	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)||  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)||  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)||  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
135	[BUG]  [BUGGY]  Pattern  collector  =  currentFormatField.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  currentFormatField.clone();  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  currentFormatField.clone();	  Pattern    collector    =    patternMatcher.clone();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
136	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.cloneTree();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.cloneTree();  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.cloneTree();	  Pattern    collector    =    patternMatcher.clone();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
137	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  nextFormatField!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  nextFormatField!=  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  nextFormatField!=  null)  {	  if(nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
138	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(this,  nextFormatField);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(this,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(this,  nextFormatField);	  Pattern    collector    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
139	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(nextFormatField,  regex);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(nextFormatField,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(nextFormatField,  regex);	  Pattern    collector    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
140	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(nextFormatField,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(nextFormatField,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(nextFormatField,  currentFormatField);	  Pattern    collector    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
141	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(currentFormatField);	  Pattern    patternMatcher    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
142	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(nextFormatField,  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(nextFormatField,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(nextFormatField,  regex);	  Pattern    patternMatcher    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
143	[BUG]  [BUGGY]  Pattern  patternMatcher  =  nextFormatField.group();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  nextFormatField.group();  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  nextFormatField.group();	  Pattern    patternMatcher    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
144	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(nextFormatField,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(nextFormatField,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(nextFormatField,  currentFormatField);	  Pattern    patternMatcher    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
145	[BUG]  [BUGGY]  patternMatcher.group(this,  nextFormatField);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.group(this,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.group(this,  nextFormatField);	  patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
146	[BUG]  [BUGGY]  patternMatcher.group(currentFormatField);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.group(currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.group(currentFormatField);	  patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
147	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(regex,  strategies);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(regex,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(regex,  strategies);	  Pattern    collector    =    patternMatcher.group(regex);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
148	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(this,  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(this,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(this,  regex);	  Pattern    collector    =    patternMatcher.group(regex);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
149	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  nextFormatField,  patternMatcher);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  nextFormatField,  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  nextFormatField,  patternMatcher);	  Pattern    collector    =    Pattern.compile(regex,    nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
150	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  currentFormatField);	  Pattern    collector    =    Pattern.compile(regex,    nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
151	[BUG]  [BUGGY]  if(currentFormatField.equals(currentFormatField)||  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(currentFormatField)||  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(currentFormatField)||  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField.equals(currentStrategy)||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
152	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  currentFormatField.contains(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  currentFormatField.contains(currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  currentFormatField.contains(currentStrategy))  {	  if(currentFormatField!=    null    &&    currentFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
153	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.contains(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.contains(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  patternMatcher.contains(currentFormatField))  {	  if(currentFormatField!=    null    &&    currentFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
154	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.contains(nextFormatField))  {	  if(currentFormatField!=    null    &&    currentFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
155	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.contains(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.contains(currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  nextFormatField.contains(currentStrategy))  {	  if(currentFormatField!=    null    &&    currentFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
156	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.substring(0,  currentFormatField.length()  -  1));  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.substring(0,  currentFormatField.length()  -  1));  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.substring(0,  currentFormatField.length()  -  1));	  Pattern    collector    =    Pattern.compile(currentFormatField.group());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
157	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.group(),  patternMatcher.group());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.group(),  patternMatcher.group());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.group(),  patternMatcher.group());	  Pattern    collector    =    Pattern.compile(currentFormatField.group());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
158	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.getName());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.getName());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.getName());	  Pattern    collector    =    Pattern.compile(currentFormatField.group());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
159	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  patternMatcher);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.group(),  patternMatcher);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
160	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group(),  patternPattern);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group(),  patternPattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(patternMatcher.group(),  patternPattern);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
161	[BUG]  [BUGGY]  patternMatcher.setRegex(currentFormatField);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.setRegex(currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.setRegex(currentFormatField);	  patternMatcher.setRegex(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
162	[BUG]  [BUGGY]  patternMatcher.setRegex(this,  nextFormatField);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.setRegex(this,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.setRegex(this,  nextFormatField);	  patternMatcher.setRegex(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
163	[BUG]  [BUGGY]  patternMatcher.setRegex(this);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.setRegex(this);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.setRegex(this);	  patternMatcher.setRegex(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
164	[BUG]  [BUGGY]  patternMatcher.setRegex(nextFormatField,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.setRegex(nextFormatField,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.setRegex(nextFormatField,  currentFormatField);	  patternMatcher.setRegex(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
165	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(this);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(this);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(this);	  patternMatcher.group(this);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
166	[BUG]  [BUGGY]  patternMatcher.group(this,  regex);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.group(this,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.group(this,  regex);	  patternMatcher.group(this);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
167	[BUG]  [BUGGY]  patternMatcher.group(this,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.group(this,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.group(this,  currentFormatField);	  patternMatcher.group(this);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
168	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  strategies);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern(),  strategies);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
169	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  parsePattern,  strategies);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  parsePattern,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern(),  parsePattern,  strategies);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
170	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(parsePattern.toPattern(),  regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(parsePattern.toPattern(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(parsePattern.toPattern(),  regex);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
171	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  strategy);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  strategy);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern(),  strategy);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
172	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField,  currentFormatField,  patternMatcher);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField,  currentFormatField,  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(nextFormatField,  currentFormatField,  patternMatcher);	  Pattern    collector    =    Pattern.compile(nextFormatField,    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
173	[BUG]  [BUGGY]  if(currentStrategy!=  null  ||  regex.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  ||  regex.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  ||  regex.addRegex(this,  nextFormatField))  {	  if(regex!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
174	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  regex.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  regex.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  regex.addRegex(this,  nextFormatField))  {	  if(regex!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
175	[BUG]  [BUGGY]  if(!currentFormatField.equals(regex))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(!currentFormatField.equals(regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(!currentFormatField.equals(regex))  {	  if(currentFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
176	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField,  strategies);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField,  strategies);	  Pattern    collector    =    Pattern.compile(regex.toString(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
177	[BUG]  [BUGGY]  if(!currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(!currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(!currentFormatField.equals(nextFormatField))  {	  if(!currentFormatField.equals(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
178	[BUG]  [BUGGY]  if(!currentFormatField.equals(currentStrategy)||  patternMatcher.group().equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(!currentFormatField.equals(currentStrategy)||  patternMatcher.group().equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(!currentFormatField.equals(currentStrategy)||  patternMatcher.group().equals(currentFormatField))  {	  if(!currentFormatField.equals(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
179	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  currentFormatField);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  currentFormatField);	  Pattern    collector    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
180	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  nextFormatField);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  nextFormatField);	  Pattern    collector    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
181	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex,  currentFormatField);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex,  currentFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  regex,  currentFormatField);	  Pattern    collector    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
182	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex,  parsePattern);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  regex,  parsePattern);	  Pattern    collector    =    patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
183	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)||  patternMatcher.group().equals(currentFormatField))  {	  if(regex.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
184	[BUG]  [BUGGY]  if(!regex.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(!regex.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(!regex.equals(currentFormatField))  {	  if(regex.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
185	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)||  regex.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)||  regex.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)||  regex.equals(currentFormatField))  {	  if(regex.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
186	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  strategies,  parsePattern);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  strategies,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  strategies,  parsePattern);	  Pattern    collector    =    Pattern.compile(regex.toString(),    strategies);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
187	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)||  nextFormatField.equals(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)||  nextFormatField.equals(currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)||  nextFormatField.equals(currentStrategy))  {	  if(nextFormatField.equals(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
188	[BUG]  [BUGGY]  if(nextFormatField.equals(currentStrategy)||  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentStrategy)||  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentStrategy)||  nextFormatField.equals(currentFormatField))  {	  if(nextFormatField.equals(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
189	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  currentFormatField.group()  <  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  currentFormatField.group()  <  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)&&  currentFormatField.group()  <  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.group()    <    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
190	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  nextFormatField.group()  <  currentFormatField)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  nextFormatField.group()  <  currentFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)&&  nextFormatField.group()  <  currentFormatField)  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.group()    <    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
191	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  patternMatcher.group()  <  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  patternMatcher.group()  <  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)&&  patternMatcher.group()  <  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.group()    <    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
192	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField!=    null    &&    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
193	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.equals(currentFormatField))  {	  if(currentFormatField!=    null    &&    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
194	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
195	[BUG]  [BUGGY]  if(currentFormatField.contains(currentStrategy)||  patternMatcher.containsRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentStrategy)||  patternMatcher.containsRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentStrategy)||  patternMatcher.containsRegex(this,  currentFormatField))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
196	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  patternMatcher.containsRegex(this,  currentFormatField))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
197	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  strategies);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.group(),  strategies);	  Pattern    collector    =    Pattern.compile(regex.group());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
198	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  patternMatcher.group());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  patternMatcher.group());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.group(),  patternMatcher.group());	  Pattern    collector    =    Pattern.compile(regex.group());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
199	[BUG]  [BUGGY]  if(currentFormatField.contains(currentStrategy)||  currentFormatField.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentStrategy)||  currentFormatField.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentStrategy)||  currentFormatField.addRegex(this,  nextFormatField))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
200	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  currentFormatField.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  currentFormatField.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  currentFormatField.addRegex(this,  currentStrategy))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
201	[BUG]  [BUGGY]  if(currentFormatField.contains(currentStrategy)||  currentFormatField.addRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentStrategy)||  currentFormatField.addRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentStrategy)||  currentFormatField.addRegex(this,  patternMatcher))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
202	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  currentFormatField.addRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  currentFormatField.addRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  currentFormatField.addRegex(this,  regex))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
203	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  nextFormatField;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  nextFormatField;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  nextFormatField;	  Pattern    patternMatcher    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
204	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  currentFormatField;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  currentFormatField;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  currentFormatField;	  Pattern    patternMatcher    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
205	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  currentFormatField;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  currentFormatField;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  regex,  currentFormatField;	  Pattern    patternMatcher    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
206	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  parsePattern;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  parsePattern;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  regex,  parsePattern;	  Pattern    patternMatcher    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
207	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  currentFormatField.containsRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  currentFormatField.containsRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  currentFormatField.containsRegex(this,  currentStrategy))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
208	[BUG]  [BUGGY]  if(currentFormatField.contains(currentStrategy)||  currentFormatField.containsRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentStrategy)||  currentFormatField.containsRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentStrategy)||  currentFormatField.containsRegex(this,  nextFormatField))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
209	[BUG]  [BUGGY]  if(currentFormatField.contains(currentStrategy)&&  currentFormatField.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentStrategy)&&  currentFormatField.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentStrategy)&&  currentFormatField.containsRegex(this,  regex))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
210	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(this,  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(this,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(this,  regex);	  Pattern    patternMatcher    =    patternMatcher.group(regex);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
211	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)||  currentFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)||  currentFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)||  currentFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(currentStrategy)||    currentFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
212	[BUG]  [BUGGY]  if(currentFormatField.equals(currentFormatField)&&  currentFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(currentFormatField)&&  currentFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(currentFormatField)&&  currentFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(currentStrategy)||    currentFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
213	[BUG]  [BUGGY]  if(currentFormatField.equals(currentFormatField)||  currentFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(currentFormatField)||  currentFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(currentFormatField)||  currentFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(currentStrategy)||    currentFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
214	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  nextFormatField.containsRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  nextFormatField.containsRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)&&  nextFormatField.containsRegex(this,  currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
215	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().containsRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().containsRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().containsRegex(this,  currentStrategy))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
216	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
217	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  nextFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
218	[BUG]  [BUGGY]  if(regex!=  null  &&  currentFormatField.addRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  &&  currentFormatField.addRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  &&  currentFormatField.addRegex(this,  regex))  {	  if(regex!=    null    &&    currentStrategy.addRegex(this,    currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
219	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  regex.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  regex.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  regex.addRegex(this,  currentStrategy))  {	  if(regex!=    null    &&    currentStrategy.addRegex(this,    currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
220	[BUG]  [BUGGY]  if(regex!=  null  ||  patternMatcher.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  ||  patternMatcher.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  ||  patternMatcher.group()  ==  nextFormatField)  {	  if(regex!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
221	[BUG]  [BUGGY]  if(regex  ==  null  &&  currentFormatField.addRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex  ==  null  &&  currentFormatField.addRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex  ==  null  &&  currentFormatField.addRegex(this,  regex))  {	  if(regex!=    null    &&    currentStrategy.addRegex(this,    currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
222	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.addRegex(this,  currentStrategy))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
223	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  patternMatcher.equals(nextFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    nextFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
224	[BUG]  [BUGGY]  patternMatcher.add(nextFormatField);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.add(nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.add(nextFormatField);	  patternMatcher.add(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
225	[BUG]  [BUGGY]  patternMatcher.addRegex(this);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.addRegex(this);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.addRegex(this);	  patternMatcher.add(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
226	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(),  regex  +  1;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(),  regex  +  1;	  Pattern    collector    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
227	[BUG]  [BUGGY]  Pattern  collector  =  parsePattern(regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  parsePattern(regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  parsePattern(regex);	  Pattern    collector    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
228	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.group(),  regex);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.group(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.group(),  regex);	  Pattern    collector    =    Pattern.compile(currentFormatField.group());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
229	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.get());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.get());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.get());	  Pattern    collector    =    Pattern.compile(currentFormatField.group());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
230	[BUG]  [BUGGY]  patternMatcher.group(nextFormatField,  regex);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.group(nextFormatField,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.group(nextFormatField,  regex);	  patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
231	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.group(nextFormatField  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.group(nextFormatField  +  1);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.group(nextFormatField  +  1);	  Pattern    collector    =    patternMatcher.group(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
232	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)||  regex.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)||  regex.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)||  regex.equals(currentFormatField))  {	  if(nextFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
233	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toArray(new  Pattern[currentFormatField.size()  ]));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toArray(new  Pattern[currentFormatField.size()  ]));  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.toArray(new  Pattern[currentFormatField.size()  ]));	  Pattern    collector    =    Pattern.compile(currentFormatField.toString());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
234	[BUG]  [BUGGY]  if(currentFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(currentStrategy)||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
235	[BUG]  [BUGGY]  if(currentFormatField.equals(currentFormatField)&&  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(currentFormatField)&&  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(currentFormatField)&&  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField.equals(currentStrategy)||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
236	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(parsePattern.toString(),  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(parsePattern.toString(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(parsePattern.toString(),  regex);	  Pattern    collector    =    Pattern.compile(regex.toString(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
237	[BUG]  [BUGGY]  if(currentFormatField.equals(regex)||  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(regex)||  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(regex)||  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
238	[BUG]  [BUGGY]  if(patternMatcher.group().equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.group().equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.group().equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group().equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
239	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(regex.toString());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(regex.toString());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parse(regex.toString());	  Pattern    patternMatcher    =    patternMatcher.parse();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
240	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(nextFormatField);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parse(nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parse(nextFormatField);	  Pattern    patternMatcher    =    patternMatcher.parse();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
241	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField,  patternMatcher.group());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField,  patternMatcher.group());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(nextFormatField,  patternMatcher.group());	  Pattern    collector    =    Pattern.compile(nextFormatField.group());    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
242	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  parsePattern);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  +  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString()  +  parsePattern);	  Pattern    collector    =    Pattern.compile(regex.toString()    +    strategies);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
243	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  /  strategies);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString()  /  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString()  /  strategies);	  Pattern    collector    =    Pattern.compile(regex.toString()    +    strategies);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
244	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.parsePattern();  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.parsePattern();	  Pattern    collector    =    patternMatcher.clone();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
245	[BUG]  [BUGGY]  if(patternMatcher.equals(nextFormatField)&&  currentFormatField.containsRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(nextFormatField)&&  currentFormatField.containsRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(nextFormatField)&&  currentFormatField.containsRegex(this,  currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
246	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  patternMatcher.group().containsRegex(this,  regex))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
247	[BUG]  [BUGGY]  if(regex.equals(nextFormatField)&&  patternMatcher.containsRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(nextFormatField)&&  patternMatcher.containsRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(nextFormatField)&&  patternMatcher.containsRegex(this,  currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
248	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  patternMatcher.equals(nextFormatField))  {	  if(currentFormatField!=    null    &&    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
249	[BUG]  [BUGGY]  if(currentFormatField.contains(nextStrategy))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextStrategy))  {	  if(nextFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
250	[BUG]  [BUGGY]  if(currentFormatField.contains(currentStrategy)&&  currentFormatField.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentStrategy)&&  currentFormatField.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentStrategy)&&  currentFormatField.containsRegex(this,  patternMatcher))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
251	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
252	[BUG]  [BUGGY]  patternMatcher.setRegex(nextFormatField  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.setRegex(nextFormatField  +  1);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.setRegex(nextFormatField  +  1);	  patternMatcher.setRegex(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
253	[BUG]  [BUGGY]  patternMatcher.setRegex(nextFormatField,  regex);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.setRegex(nextFormatField,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.setRegex(nextFormatField,  regex);	  patternMatcher.setRegex(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
254	[BUG]  [BUGGY]  if(nextFormatField!=  null  ||  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField!=  null  ||  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField!=  null  ||  currentFormatField.equals(nextFormatField))  {	  if(nextFormatField    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
255	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(this,  regex))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.contains(this,  regex))  {	  if(currentStrategy!=    null    &&    currentFormatField.contains(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
256	[BUG]  [BUGGY]  if(patternMatcher.equals(nextFormatField)&&  currentFormatField.group()  <  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(nextFormatField)&&  currentFormatField.group()  <  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(nextFormatField)&&  currentFormatField.group()  <  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.group()    <    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
257	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  new  Strategy[collector.size()  ]);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  new  Strategy[collector.size()  ]);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  new  Strategy[collector.size()  ]);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    strategies);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
258	[BUG]  [BUGGY]  if(regex.containsKey(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.containsKey(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.containsKey(currentFormatField))  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
259	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
260	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.group()  >  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.group()  >  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  patternMatcher.group()  >  nextFormatField)  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
261	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
262	[BUG]  [BUGGY]  Pattern  patternMatcher  =  parsePattern(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  parsePattern(regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  parsePattern(regex);	  Pattern    patternMatcher    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
263	[BUG]  [BUGGY]  if(patternMatcher!=  null  &&  patternMatcher.group()  >  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher!=  null  &&  patternMatcher.group()  >  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher!=  null  &&  patternMatcher.group()  >  nextFormatField)  {	  if(currentFormatField!=    null    &&    patternMatcher.group()    >    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
264	[BUG]  [BUGGY]  if(patternMatcher!=  null  &&  nextFormatField.group()  >  currentFormatField)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher!=  null  &&  nextFormatField.group()  >  currentFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher!=  null  &&  nextFormatField.group()  >  currentFormatField)  {	  if(currentFormatField!=    null    &&    patternMatcher.group()    >    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
265	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)||  patternMatcher.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)||  patternMatcher.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)||  patternMatcher.group()  ==  nextFormatField)  {	  if(regex.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
266	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)&&  patternMatcher.containsRegex(this,  regex))  {	  if(regex.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
267	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  patternMatcher);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  patternMatcher);	  Pattern    collector    =    Pattern.compile(currentFormatField,    patternMatcher);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
268	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField,  parsePattern);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField,  parsePattern);	  Pattern    collector    =    Pattern.compile(regex.toString(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
269	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  patternMatcher);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  patternMatcher);	  Pattern    collector    =    Pattern.compile(regex.toString(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
270	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  nextFormatField.equals(nextFormatField))  {	  if(currentFormatField!=    null    &&    nextFormatField.equals(this))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
271	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(regex))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  nextFormatField.equals(regex))  {	  if(currentFormatField!=    null    &&    nextFormatField.equals(this))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
272	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toPattern(),  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toPattern(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toPattern(),  regex);	  Pattern    patternMatcher    =    Pattern.compile(regex.toPattern());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
273	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  parsePattern);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  parsePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  parsePattern);	  Pattern    collector    =    Pattern.compile(regex);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
274	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  strategies);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  strategies);	  Pattern    collector    =    Pattern.compile(regex);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
275	[BUG]  [BUGGY]  if(currentFormatField.contains(currentStrategy)&&  currentFormatField.addRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentStrategy)&&  currentFormatField.addRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentStrategy)&&  currentFormatField.addRegex(this,  regex))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
276	[BUG]  [BUGGY]  if(currentFormatField.contains(currentFormatField)&&  currentFormatField.addRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentFormatField)&&  currentFormatField.addRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentFormatField)&&  currentFormatField.addRegex(this,  regex))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
277	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  regex);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  regex);	  Pattern    collector    =    Pattern.compile(currentFormatField,    regex);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
278	[BUG]  [BUGGY]  if(currentFormatField.containsRegex(this,  currentStrategy)||  currentFormatField.containsRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.containsRegex(this,  currentStrategy)||  currentFormatField.containsRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.containsRegex(this,  currentStrategy)||  currentFormatField.containsRegex(this,  nextFormatField))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
279	[BUG]  [BUGGY]  if(currentFormatField!=  null  ||  currentStrategy.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  ||  currentStrategy.length()  >  0)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  ||  currentStrategy.length()  >  0)  {	  if(currentStrategy!=    null    &&    currentFormatField.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
280	[BUG]  [BUGGY]  if(patternMatcher.equals(nextFormatField)||  currentFormatField.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(nextFormatField)||  currentFormatField.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(nextFormatField)||  currentFormatField.group()  ==  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group()    ==    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
281	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  patternMatcher.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  patternMatcher.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)&&  patternMatcher.group()  ==  nextFormatField)  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group()    ==    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
282	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(regex,  strategies);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(regex,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(regex,  strategies);	  Pattern    patternMatcher    =    patternMatcher.group(regex);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
283	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  bysePattern);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  bysePattern);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern(),  bysePattern);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    regex);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
284	[BUG]  [BUGGY]  if(regex  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex  ==  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex  ==  null)  {	  if(regex!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
285	[BUG]  [BUGGY]  if(currentFormatField  ==  null  &&  currentFormatField.contains(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  &&  currentFormatField.contains(currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  &&  currentFormatField.contains(currentStrategy))  {	  if(currentFormatField!=    null    &&    currentFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
286	[BUG]  [BUGGY]  Pattern  patternMatcher  =  nextFormatField.parsePattern();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  nextFormatField.parsePattern();  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  nextFormatField.parsePattern();	  Pattern    patternMatcher    =    patternMatcher.parsePattern();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
287	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  patternMatcher,  nextFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  patternMatcher,  nextFormatField);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  patternMatcher,  nextFormatField);	  Pattern    collector    =    Pattern.compile(regex,    nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
288	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  nextFormatField,  regex);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex,  nextFormatField,  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex,  nextFormatField,  regex);	  Pattern    collector    =    Pattern.compile(regex,    nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
289	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.toPattern());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField.toPattern());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(nextFormatField.toPattern());	  Pattern    collector    =    Pattern.compile(currentFormatField.toPattern());    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
290	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.group(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.group(),  regex);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    regex);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
291	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex  +  1;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  regex  +  1;	  Pattern    patternMatcher    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
292	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group()  <  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  patternMatcher.group()  <  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  patternMatcher.group()  <  nextFormatField)  {	  if(currentFormatField.contains(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
293	[BUG]  [BUGGY]  if(regex.contains(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(nextFormatField))  {	  if(currentFormatField.contains(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
294	[BUG]  [BUGGY]  if(currentStrategy!=  null  ||  currentFormatField.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  ||  currentFormatField.length()  >  0)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  ||  currentFormatField.length()  >  0)  {	  if(currentStrategy!=    null    &&    currentFormatField.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
295	[BUG]  [BUGGY]  if(currentStrategy!=  null  &&  currentFormatField.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  &&  currentFormatField.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  &&  currentFormatField.addRegex(this,  nextFormatField))  {	  if(currentFormatField!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
296	[BUG]  [BUGGY]  if(strategy!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(strategy!=  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(strategy!=  null)  {	  if(regex!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
297	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  tactics);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  tactics);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  tactics);	  Pattern    collector    =    Pattern.compile(regex.toString(),    regex);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
298	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.containsRegex(this,  patternMatcher))  {	  if(currentStrategy!=    null    &&    currentFormatField.contains(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
299	[BUG]  [BUGGY]  if(currentStrategy!=  null  ||  currentFormatField.contains(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  ||  currentFormatField.contains(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  ||  currentFormatField.contains(nextFormatField))  {	  if(currentStrategy!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
300	[BUG]  [BUGGY]  if(currentStrategy  ==  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy  ==  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy  ==  null  ||  currentFormatField.addRegex(this,  nextFormatField))  {	  if(currentStrategy!=    null    ||    currentStrategy.addRegex(this,    nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
301	[BUG]  [BUGGY]  patternMatcher.setRegex(new  StringBuilder());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  patternMatcher.setRegex(new  StringBuilder());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	patternMatcher.setRegex(new  StringBuilder());	  patternMatcher.setRegex(nextFormatField);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
302	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  strategies;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group(),  regex,  strategies;  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.group(),  regex,  strategies;	  Pattern    patternMatcher    =    patternMatcher.group(),    regex;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
303	[BUG]  [BUGGY]  if(strategy.contains(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(strategy.contains(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(strategy.contains(currentFormatField))  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
304	[BUG]  [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.group()  <  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.contains(currentFormatField)||  patternMatcher.group()  <  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.contains(currentFormatField)||  patternMatcher.group()  <  nextFormatField)  {	  if(regex.contains(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
305	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  formatPattern))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  formatPattern))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  formatPattern))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
306	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  currentFormatField))  {	  if(currentStrategy!=    null    &&    currentFormatField.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
307	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(pattern,  patternMatcher);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(pattern,  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(pattern,  patternMatcher);	  Pattern    collector    =    Pattern.compile(nextFormatField,    patternMatcher);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
308	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  reserve))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  reserve))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.addRegex(this,  reserve))  {	  if(regex!=    null    &&    currentStrategy.addRegex(this,    currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
309	[BUG]  [BUGGY]  if(currentFormatField.contains(nextFormatField)||  currentFormatField.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(nextFormatField)||  currentFormatField.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(nextFormatField)||  currentFormatField.containsRegex(this,  regex))  {	  if(currentFormatField.contains(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
310	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(parsePattern.toString(),  regex);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(parsePattern.toString(),  regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(parsePattern.toString(),  regex);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
311	[BUG]  [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  tactics);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  tactics);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  Pattern.compile(regex.toString(),  tactics);	  Pattern    patternMatcher    =    Pattern.compile(regex.toString(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
312	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.hasRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentStrategy.hasRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentStrategy.hasRegex(this,  patternMatcher))  {	  if(currentFormatField!=    null    &&    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
313	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)||  currentFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)||  currentFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)||  currentFormatField.equals(currentFormatField))  {	  if(nextFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
314	[BUG]  [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentFormatField)&&  nextFormatField.equals(currentFormatField))  {	  if(nextFormatField.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
315	[BUG]  [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  currentFormatField.containsRegex(this,  currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.equals(currentFormatField)&&  currentFormatField.containsRegex(this,  currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.equals(currentFormatField)&&  currentFormatField.containsRegex(this,  currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
316	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.containsRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  patternMatcher.containsRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  patternMatcher.containsRegex(this,  currentStrategy))  {	  if(currentFormatField.equals(nextFormatField)&&    patternMatcher.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
317	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  currentStrategy.equals(regex))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  currentStrategy.equals(regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  currentStrategy.equals(regex))  {	  if(currentFormatField.equals(nextFormatField)&&    nextFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
318	[BUG]  [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  nextFormatField.equals(patternMatcher.group()))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(nextFormatField)&&  nextFormatField.equals(patternMatcher.group()))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(nextFormatField)&&  nextFormatField.equals(patternMatcher.group()))  {	  if(currentFormatField.equals(nextFormatField)&&    nextFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
319	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher!=  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher!=  null)  {	  if(nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
320	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.equals(this))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.equals(this))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.equals(this))  {	  if(currentFormatField!=    null    &&    nextFormatField.equals(this))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
321	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(this)||  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  nextFormatField.equals(this)||  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  nextFormatField.equals(this)||  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField!=    null    &&    nextFormatField.equals(this))    {    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
322	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(currentStrategy)||  currentFormatField.containsRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.contains(currentStrategy)||  currentFormatField.containsRegex(this,  regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.contains(currentStrategy)||  currentFormatField.containsRegex(this,  regex))  {	  if(currentFormatField!=    null    &&    currentFormatField.contains(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
323	[BUG]  [BUGGY]  if(regex!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex!=  null  &&  currentStrategy.addRegex(this,  patternMatcher))  {	  if(regex!=    null    &&    currentStrategy.addRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
324	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group(),  currentFormatField,  patternMatcher);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group(),  currentFormatField,  patternMatcher);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(patternMatcher.group(),  currentFormatField,  patternMatcher);	  Pattern    collector    =    Pattern.compile(patternMatcher.group(),    currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
325	[BUG]  [BUGGY]  if(nextFormatField.equals(currentStrategy)||  currentFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(nextFormatField.equals(currentStrategy)||  currentFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(nextFormatField.equals(currentStrategy)||  currentFormatField.equals(currentFormatField))  {	  if(nextFormatField.equals(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
326	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  tactics);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern(),  tactics);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern(),  tactics);	  Pattern    collector    =    Pattern.compile(regex.toPattern(),    parsePattern);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
327	[BUG]  [BUGGY]  if(currentFormatField  ==  nextFormatField  ||  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  nextFormatField  ||  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  nextFormatField  ||  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField    ==    null    ||    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
328	[BUG]  [BUGGY]  if(currentFormatField.contains(currentFormatField)&&  currentFormatField.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.contains(currentFormatField)&&  currentFormatField.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.contains(currentFormatField)&&  currentFormatField.containsRegex(this,  patternMatcher))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
329	[BUG]  [BUGGY]  if(currentFormatField.containsRegex(this,  currentFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.containsRegex(this,  currentFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.containsRegex(this,  currentFormatField)||  currentFormatField.containsRegex(this,  patternMatcher))  {	  if(currentFormatField.contains(currentStrategy)||    currentFormatField.containsRegex(this,    patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
330	[BUG]  [BUGGY]  if(patternMatcher.group().equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(patternMatcher.group().equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(patternMatcher.group().equals(currentFormatField)||  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField.equals(nextFormatField)||    patternMatcher.group().equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
331	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.get());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  Pattern.compile(regex.get());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  Pattern.compile(regex.get());	  Pattern    collector    =    Pattern.compile(regex.group());    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
332	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(regex,  strategies);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  patternMatcher  =  patternMatcher.parsePattern(regex,  strategies);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  patternMatcher  =  patternMatcher.parsePattern(regex,  strategies);	  Pattern    patternMatcher    =    patternMatcher.parsePattern(regex);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
333	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.equals(patternMatcher.group()))  {  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.equals(patternMatcher.group()))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.equals(patternMatcher.group()))  {	  if(currentFormatField!=    null    &&    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
334	[BUG]  [BUGGY]  if(currentFormatField!=  nextFormatField  &&  currentFormatField.equals(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  nextFormatField  &&  currentFormatField.equals(nextFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  nextFormatField  &&  currentFormatField.equals(nextFormatField))  {	  if(currentFormatField!=    null    &&    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
335	[BUG]  [BUGGY]  if(currentFormatField  ==  null  &&  nextFormatField.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  &&  nextFormatField.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  &&  nextFormatField.equals(currentFormatField))  {	  if(currentFormatField!=    null    &&    currentFormatField.equals(nextFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
336	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)&&  regex.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)&&  regex.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)&&  regex.equals(currentFormatField))  {	  if(regex.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
337	[BUG]  [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.group()  >  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(regex.equals(currentFormatField)&&  patternMatcher.group()  >  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(regex.equals(currentFormatField)&&  patternMatcher.group()  >  nextFormatField)  {	  if(regex.equals(currentFormatField))    {    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
338	[BUG]  [BUGGY]  Pattern  currentFormatField  =  Pattern.compile(regex.toString());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  currentFormatField  =  Pattern.compile(regex.toString());  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  currentFormatField  =  Pattern.compile(regex.toString());	  Pattern    patternMatcher    =    Pattern.compile(currentFormatField.toString());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
339	[BUG]  [BUGGY]  Pattern  collector  =  patternMatcher.combine(regex);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  Pattern  collector  =  patternMatcher.combine(regex);  [BUGGY]      if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	Pattern  collector  =  patternMatcher.combine(regex);	  Pattern    collector    =    patternMatcher.clone();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
340	[BUG]  [BUGGY]  if(currentFormatField  ==  null  ||  currentFormatField!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField  ==  null  ||  currentFormatField!=  null)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField  ==  null  ||  currentFormatField!=  null)  {	  if(currentFormatField    ==    null    ||    nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
341	[BUG]  [BUGGY]  if(!currentFormatField.equals(currentStrategy)&&!regex.equals(currentFormatField))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(!currentFormatField.equals(currentStrategy)&&!regex.equals(currentFormatField))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(!currentFormatField.equals(currentStrategy)&&!regex.equals(currentFormatField))  {	  if(!currentFormatField.equals(currentStrategy))    {    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
342	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  currentStrategy))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  currentStrategy))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  currentFormatField.containsRegex(this,  currentStrategy))  {	  if(currentStrategy!=    null    &&    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
343	[BUG]  [BUGGY]  if(currentStrategy!=  null  &&  currentFormatField.containsRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentStrategy!=  null  &&  currentFormatField.containsRegex(this,  patternMatcher))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentStrategy!=  null  &&  currentFormatField.containsRegex(this,  patternMatcher))  {	  if(currentStrategy!=    null    &&    currentFormatField.containsRegex(this,    regex))    {    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
344	[BUG]  [BUGGY]  if(currentFormatField.equals(regex)||  currentFormatField.equals(regex))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField.equals(regex)||  currentFormatField.equals(regex))  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField.equals(regex)||  currentFormatField.equals(regex))  {	  if(currentFormatField.equals(regex))    {    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
345	[BUG]  [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.group()  ==  nextFormatField)  {  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  }      [BUGGY]  if(currentFormatField!=  null  &&  patternMatcher.group()  ==  nextFormatField)  {  [BUGGY]      collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	144	144	2	replace	if(currentFormatField!=  null  &&  patternMatcher.group()  ==  nextFormatField)  {	  if(currentFormatField!=    null    &&    patternMatcher.group()    >    nextFormatField)    {    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
