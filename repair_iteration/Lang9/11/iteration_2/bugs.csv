bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos.setIndex(offset+strategie.offset());  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+strategie.offset());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+strategie.offset());	  pos.setIndex(offset+strategie.start());    	non-compiled	[CE]  >  expected	11	None	replace
2	[BUG]  [BUGGY]  pos.setIndex(offset+strategie.length());  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+strategie.length());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+strategie.length());	  pos.setIndex(offset+strategie.start());    	non-compiled	[CE]  >  expected	11	None	replace
3	[BUG]  [BUGGY]  pos.setIndex(strategy.start());  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(strategy.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(strategy.start());	  pos.setIndex(offset+strategie.start());    	non-compiled	[CE]  >  expected	11	None	replace
4	[BUG]  [BUGGY]  pos.setIndex(offset+strategie.start()  +  1);  [CE]  >  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+strategie.start()  +  1);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+strategie.start()  +  1);	  pos.setIndex(offset+strategie.start());    	non-compiled	[CE]  >  expected	11	None	replace
5	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start()  +  1);	  pos.setIndex(offset+matcher.start());    	non-compiled	[CE]  >  expected	3	None	replace
6	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.startTime());  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.startTime());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.startTime());	  pos.setIndex(offset+matcher.start());    	non-compiled	[CE]  >  expected	3	None	replace
7	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.offset());  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.offset());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.offset());	  pos.setIndex(offset+matcher.start());    	non-compiled	[CE]  >  expected	3	None	replace
8	[BUG]  [BUGGY]  pos.setIndex(matcher.start());  [CE]  >  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(matcher.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(matcher.start());	  pos.setIndex(offset+matcher.start());    	non-compiled	[CE]  >  expected	3	None	replace
9	[BUG]  [BUGGY]  pos.setIndex(i+strategie.end());  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i+strategie.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i+strategie.end());	  pos.setIndex(offset+strategie.end());    	non-compiled	[CE]  >  expected	9	None	replace
10	[BUG]  [BUGGY]  pos.setIndex(0,  strategy.end());  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(0,  strategy.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(0,  strategy.end());	  pos.setIndex(offset+strategie.end());    	non-compiled	[CE]  >  expected	9	None	replace
11	[BUG]  [BUGGY]  pos.setIndex(strategy.offset+strategie.end());  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(strategy.offset+strategie.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(strategy.offset+strategie.end());	  pos.setIndex(offset+strategie.end());    	non-compiled	[CE]  >  expected	9	None	replace
12	[BUG]  [BUGGY]  pos.setIndex(offset+1  +  matcher.end());  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+1  +  matcher.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1  +  matcher.end());	  pos.setIndex(offset+2    +    matcher.end());    	non-compiled	[CE]  >  expected	2	None	replace
13	[BUG]  [BUGGY]  pos.setIndex(offset+2  +  strategy.end());  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+2  +  strategy.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+2  +  strategy.end());	  pos.setIndex(offset+2    +    matcher.end());    	non-compiled	[CE]  >  expected	2	None	replace
14	[BUG]  [BUGGY]  pos.setIndex(offset+1,  matcher.end());  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+1,  matcher.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1,  matcher.end());	  pos.setIndex(offset+2    +    matcher.end());    	non-compiled	[CE]  >  expected	2	None	replace
15	[BUG]  [BUGGY]  pos.setIndex(offset+2  +  strategy.start());  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+2  +  strategy.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+2  +  strategy.start());	  pos.setIndex(offset+2    +    matcher.end());    	non-compiled	[CE]  >  expected	2	None	replace
16	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  return  cal.getTime();  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  return  cal.getTime();  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start()  +  1);  return  cal.getTime();	      pos.setIndex(offset+matcher.start());    return    cal.getTime();    	non-compiled	[CE]  >  expected	8	None	replace
17	[BUG]  [BUGGY]  n.setIndex(offset+matcher.start());  return  cal.getTime();  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  n.setIndex(offset+matcher.start());  return  cal.getTime();  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	n.setIndex(offset+matcher.start());  return  cal.getTime();	      pos.setIndex(offset+matcher.start());    return    cal.getTime();    	non-compiled	[CE]  >  expected	8	None	replace
18	[BUG]  [BUGGY]  pos.setIndex(i  +  strategies.length);  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i  +  strategies.length);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i  +  strategies.length);	  pos.setIndex(offset+    strategies.length);    	non-compiled	[CE]  >  expected	14	None	replace
19	[BUG]  [BUGGY]  pos.setIndex(offset+  strategies.length  +  1);  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+  strategies.length  +  1);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+  strategies.length  +  1);	  pos.setIndex(offset+    strategies.length);    	non-compiled	[CE]  >  expected	14	None	replace
20	[BUG]  [BUGGY]  pos.setIndex(0,  strategies.length);  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(0,  strategies.length);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(0,  strategies.length);	  pos.setIndex(offset+    strategies.length);    	non-compiled	[CE]  >  expected	14	None	replace
21	[BUG]  [BUGGY]  cal.setTime(timeZone);  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  cal.setTime(timeZone);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	cal.setTime(timeZone);	      	non-compiled	[CE]  >  expected	4	None	replace
22	[BUG]  [BUGGY]  Matcher  matcher  =  getMatcher();  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  Matcher  matcher  =  getMatcher();  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	Matcher  matcher  =  getMatcher();	      	non-compiled	[CE]  >  expected	4	None	replace
23	[BUG]  [BUGGY]  cal.setTime(timeZone,  strategy);  [CE]  >  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  cal.setTime(timeZone,  strategy);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	cal.setTime(timeZone,  strategy);	      	non-compiled	[CE]  >  expected	4	None	replace
24	[BUG]  [BUGGY]  Matcher  matcher  =  getValue(i);  [CE]  >  expected  [FE]                    AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  Matcher  matcher  =  getValue(i);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	Matcher  matcher  =  getValue(i);	      	non-compiled	[CE]  >  expected	4	None	replace
25	[BUG]  [BUGGY]  pos.setIndex(i+1);  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i+1);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i+1);	  pos.setIndex(offset+1);    	non-compiled	[CE]  >  expected	15	None	replace
26	[BUG]  [BUGGY]  pos.setIndex(0,  offset+1);  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(0,  offset+1);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(0,  offset+1);	  pos.setIndex(offset+1);    	non-compiled	[CE]  >  expected	15	None	replace
27	[BUG]  [BUGGY]  pos.setIndex(index+1);  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(index+1);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(index+1);	  pos.setIndex(offset+1);    	non-compiled	[CE]  >  expected	15	None	replace
28	[BUG]  [BUGGY]  pos.setIndex(i  +  strategies.end());  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i  +  strategies.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i  +  strategies.end());	  pos.setIndex(offset+    strategies.end());    	non-compiled	[CE]  >  expected	10	None	replace
29	[BUG]  [BUGGY]  pos.setIndex(offset+  strategies.length());  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+  strategies.length());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+  strategies.length());	  pos.setIndex(offset+    strategies.end());    	non-compiled	[CE]  >  expected	10	None	replace
30	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.group(2));  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.group(2));  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.group(2));	      pos.setIndex(offset+matcher.group(1));    	non-compiled	[CE]  >  expected	12	None	replace
31	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.group(i  +  1));  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.group(i  +  1));  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.group(i  +  1));	      pos.setIndex(offset+matcher.group(i));    	non-compiled	[CE]  >  expected	5	None	replace
32	[BUG]  [BUGGY]  pos.setIndex(i+matcher.group(i));  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i+matcher.group(i));  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i+matcher.group(i));	  pos.setIndex(i+matcher.end());    	non-compiled	[CE]  >  expected	1	None	replace
33	[BUG]  [BUGGY]  pos.setIndex(i+2  +  matcher.end());  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i+2  +  matcher.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i+2  +  matcher.end());	  pos.setIndex(i+matcher.end());    	non-compiled	[CE]  >  expected	1	None	replace
34	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.length());  return  cal.getTime();  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.length());  return  cal.getTime();  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.length());  return  cal.getTime();	      pos.setIndex(offset+matcher.end());    return    cal.getTime();    	non-compiled	[CE]  >  expected	7	None	replace
35	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.last());  return  cal.getTime();  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.last());  return  cal.getTime();  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.last());  return  cal.getTime();	      pos.setIndex(offset+matcher.end());    return    cal.getTime();    	non-compiled	[CE]  >  expected	7	None	replace
36	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.size()  -  1);  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.size()  -  1);  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.size()  -  1);	      pos.setIndex(offset+matcher.size());    	non-compiled	[CE]  >  expected	13	None	replace
37	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.size()  +  1);  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+matcher.size()  +  1);  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.size()  +  1);	      pos.setIndex(offset+matcher.size());    	non-compiled	[CE]  >  expected	13	None	replace
38	[BUG]  [BUGGY]  pos.setIndex(0,  strategy.length);  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(0,  strategy.length);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(0,  strategy.length);	  pos.setIndex(offset+    strategies.length);    	non-compiled	[CE]  >  expected	14	None	replace
39	[BUG]  [BUGGY]  pos.setIndex(i+1+  strategies.length);  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i+1+  strategies.length);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i+1+  strategies.length);	  pos.setIndex(offset+    strategies.length);    	non-compiled	[CE]  >  expected	14	None	replace
40	[BUG]  [BUGGY]  pos.setIndex(position+1);  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(position+1);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(position+1);	  pos.setIndex(offset+1);    	non-compiled	[CE]  >  expected	15	None	replace
41	[BUG]  [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(matcher!=  null)  {  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }	      pos.setIndex(offset+matcher.end());    return    cal.getTime();    	non-compiled	[CE]  >  expected	7	None	replace
42	[BUG]  [BUGGY]  pos.setIndex(offset+1);  return  cal.getTime();  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+1);  return  cal.getTime();  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1);  return  cal.getTime();	      pos.setIndex(offset+matcher.end());    return    cal.getTime();    	non-compiled	[CE]  >  expected	7	None	replace
43	[BUG]  [BUGGY]  pos.setIndex(offset+strategie.end());  return  cal.getTime();  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+strategie.end());  return  cal.getTime();  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+strategie.end());  return  cal.getTime();	      pos.setIndex(offset+matcher.end());    return    cal.getTime();    	non-compiled	[CE]  >  expected	7	None	replace
44	[BUG]  [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.group(i));  return  cal.getTime();  }  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.group(i));  return  cal.getTime();  }  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(matcher!=  null)  {  pos.setIndex(offset+matcher.group(i));  return  cal.getTime();  }	      pos.setIndex(offset+matcher.group(i));    return    cal.getTime();    	non-compiled	[CE]  >  expected	6	None	replace
45	[BUG]  [BUGGY]  pos.setIndex(i+strategie.start());  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i+strategie.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i+strategie.start());	  pos.setIndex(offset+strategie.start());    	non-compiled	[CE]  >  expected	11	None	replace
46	[BUG]  [BUGGY]  pos.setIndex(i  +  strategy.end());  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(i  +  strategy.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(i  +  strategy.end());	  pos.setIndex(i+matcher.end());    	non-compiled	[CE]  >  expected	1	None	replace
47	[BUG]  [BUGGY]  pos.setIndex(0  +  matcher.end());  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(0  +  matcher.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(0  +  matcher.end());	  pos.setIndex(offset+2    +    matcher.end());    	non-compiled	[CE]  >  expected	2	None	replace
48	[BUG]  [BUGGY]  cal.setTime(new  Date(strategy.getTime()));  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  cal.setTime(new  Date(strategy.getTime()));  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	cal.setTime(new  Date(strategy.getTime()));	      	non-compiled	[CE]  >  expected	4	None	replace
49	[BUG]  [BUGGY]  cal.setTime(new  Date(strategy.getTime()),  strategy);  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  cal.setTime(new  Date(strategy.getTime()),  strategy);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	cal.setTime(new  Date(strategy.getTime()),  strategy);	      	non-compiled	[CE]  >  expected	4	None	replace
50	[BUG]  [BUGGY]  cal.setTime(strategy);  [CE]  >  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  cal.setTime(strategy);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	cal.setTime(strategy);	      	non-compiled	[CE]  >  expected	4	None	replace
51	[BUG]  [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.start());  return  cal.getTime();  }  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.start());  return  cal.getTime();  }  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(matcher!=  null)  {  pos.setIndex(offset+matcher.start());  return  cal.getTime();  }	      pos.setIndex(offset+matcher.start());    return    cal.getTime();    	non-compiled	[CE]  >  expected	8	None	replace
52	[BUG]  [BUGGY]  pos.setIndex(strategy.end());  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(strategy.end());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(strategy.end());	  pos.setIndex(offset+strategie.end());    	non-compiled	[CE]  >  expected	9	None	replace
53	[BUG]  [BUGGY]  if(strategy!=  null)  {  pos.setIndex(offset+matcher.group(i));  return  cal.getTime();  }  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(strategy!=  null)  {  pos.setIndex(offset+matcher.group(i));  return  cal.getTime();  }  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(strategy!=  null)  {  pos.setIndex(offset+matcher.group(i));  return  cal.getTime();  }	      pos.setIndex(offset+matcher.group(i));    return    cal.getTime();    	non-compiled	[CE]  >  expected	6	None	replace
54	[BUG]  [BUGGY]  if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  matcher.group(i));  }  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  matcher.group(i));  }  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  matcher.group(i));  }	      	non-compiled	[CE]  >  expected	4	None	replace
55	[BUG]  [BUGGY]  if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  Matcher.group(i));  }  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  Matcher.group(i));  }  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  Matcher.group(i));  }	      	non-compiled	[CE]  >  expected	4	None	replace
56	[BUG]  [BUGGY]  if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  matcher.group(1));  }  [CE]  >  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  matcher.group(1));  }  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(tzNames!=  null)  {  for(int  i  =  0;  i  <  strategies.length;  i++)  {  strategy.setCalendar(this,  cal,  matcher.group(1));  }	      	non-compiled	[CE]  >  expected	4	None	replace
57	[BUG]  [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  if(matcher!=  null)  {  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(matcher!=  null)  {  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  else  {  throw  new  IllegalArgumentException( " ");  }	      pos.setIndex(offset+matcher.end());    return    cal.getTime();    	non-compiled	[CE]  >  expected	7	None	replace
58	[BUG]  [BUGGY]  pos.setIndex(offset+  strategies.size());  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+  strategies.size());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+  strategies.size());	  pos.setIndex(offset+    strategies.end());    	non-compiled	[CE]  >  expected	10	None	replace
59	[BUG]  [BUGGY]  pos.setIndex(offset);  [CE]  >  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset);  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset);	  pos.setIndex(offset+1);    	non-compiled	[CE]  >  expected	15	None	replace
60	[BUG]  [BUGGY]  pos.setIndex(offset+2  +  matcher.start());  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+2  +  matcher.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+2  +  matcher.start());	  pos.setIndex(offset+matcher.start());    	non-compiled	[CE]  >  expected	3	None	replace
61	[BUG]  [BUGGY]  pos.setIndex(offset+strategy.start());  [CE]  >  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+strategy.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+strategy.start());	  pos.setIndex(offset+matcher.start());    	non-compiled	[CE]  >  expected	3	None	replace
62	[BUG]  [BUGGY]  pos.setIndex(offset+1,  matcher.start());  [CE]  >  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+1,  matcher.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1,  matcher.start());	  pos.setIndex(offset+matcher.start());    	non-compiled	[CE]  >  expected	3	None	replace
63	[BUG]  [BUGGY]  pos.setIndex(0,  strategy.start());  [CE]  >  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(0,  strategy.start());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(0,  strategy.start());	  pos.setIndex(offset+strategie.start());    	non-compiled	[CE]  >  expected	11	None	replace
64	[BUG]  [BUGGY]  pos.setIndex(offset+strategie.getIndex());  [CE]  >  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }    [BUGGY]  pos.setIndex(offset+strategie.getIndex());  [BUGGY]    return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+strategie.getIndex());	  pos.setIndex(offset+strategie.end());    	non-compiled	[CE]  >  expected	9	None	replace
