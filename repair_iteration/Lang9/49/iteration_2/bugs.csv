bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(currentFormatField.toString());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(currentFormatField.toString());  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(currentFormatField.toString());	      parsePattern    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  strategies);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  strategies);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(regex.toString(),  strategies);	      parsePattern    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  currentFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  currentFormatField);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(regex.toString(),  currentFormatField);	      parsePattern    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }	      if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField[i]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
5	[BUG]  [BUGGY]  FormatField  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  FormatField  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	FormatField  currentFormatField  =  patternMatcher.group();	      if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField[i]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i],  regex);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i],  regex);  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i],  regex);  }	      if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField[i]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(nextFormatField[i]);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(nextFormatField[i]);  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(nextFormatField[i]);  }	      if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField[i]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();	      if(patternMatcher!=    null)    {    Pattern    patternMatcher    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
9	[BUG]  [BUGGY]  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();	      if(patternMatcher!=    null)    {    Pattern    patternMatcher    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toString());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField.toString());  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField.toString());	      Pattern    collector    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  currentFormatField);	      Pattern    collector    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  regex);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  regex);	      Pattern    collector    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  patternMatcher);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  patternMatcher);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  patternMatcher);	      Pattern    collector    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  currentFormatField  =  nextFormatField;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  currentFormatField  =  nextFormatField;  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	currentFormatField  =  nextFormatField;	      if(currentFormatField.equals(nextFormatField))    {    currentFormatField    =    nextFormatField;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
15	[BUG]  [BUGGY]  CurrentFormatField  =  nextFormatField;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  CurrentFormatField  =  nextFormatField;  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	CurrentFormatField  =  nextFormatField;	      if(currentFormatField.equals(nextFormatField))    {    currentFormatField    =    nextFormatField;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
16	[BUG]  [BUGGY]  currentFormatField  =  nextFormatField.clone();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  currentFormatField  =  nextFormatField.clone();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	currentFormatField  =  nextFormatField.clone();	      if(currentFormatField.equals(nextFormatField))    {    currentFormatField    =    nextFormatField;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
17	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentStrategy);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
20	[BUG]  [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
21	[BUG]  [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    Pattern    collector    =    Pattern.compile(regex.toString());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  FormatField  currentFormatField  =  Pattern.compile(regex.toString());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  FormatField  currentFormatField  =  Pattern.compile(regex.toString());  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	FormatField  currentFormatField  =  Pattern.compile(regex.toString());	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    Pattern    collector    =    Pattern.compile(regex.toString());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(nextFormatField.toString());  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(nextFormatField.toString());  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(nextFormatField.toString());  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    Pattern    collector    =    Pattern.compile(regex.toString());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.group();  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  patternMatcher  =  patternMatcher.group();	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  FormatField  currentFormatField  =  patternMatcher.size();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  FormatField  currentFormatField  =  patternMatcher.size();  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	FormatField  currentFormatField  =  patternMatcher.size();	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  currentFormatField  =  nextFormatField.group();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  currentFormatField  =  nextFormatField.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	currentFormatField  =  nextFormatField.group();	      currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
28	[BUG]  [BUGGY]  currentFormatField  =  patternMatcher.group(),  nextFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  currentFormatField  =  patternMatcher.group(),  nextFormatField);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	currentFormatField  =  patternMatcher.group(),  nextFormatField);	      currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
29	[BUG]  [BUGGY]  currentFormatField  =  patternMatcher.group()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  currentFormatField  =  patternMatcher.group()  +  1;  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	currentFormatField  =  patternMatcher.group()  +  1;	      currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
30	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentStrategy);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  CurrentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  CurrentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	CurrentFormatField  =  patternMatcher.group();	      if(currentFormatField!=    null)    {    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
33	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(nextFormatField);  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(nextFormatField);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(currentFormatField);  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(currentFormatField);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
35	[BUG]  [BUGGY]  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  patternMatcher.group();  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	patternMatcher.group();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(nextFormatField);  }  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  Pattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();	      if(patternMatcher!=    null)    {    Pattern    pattern    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  CurrentPattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  CurrentPattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	CurrentPattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();	      if(patternMatcher!=    null)    {    Pattern    pattern    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
42	[BUG]  [BUGGY]  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();	      if(patternMatcher!=    null)    {    Pattern    pattern    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
43	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(currentFormatField.toString());  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(currentFormatField.toString());  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(currentFormatField.toString());  currentFormatField  =  patternMatcher.group();	      parsePattern    =    Pattern.compile(regex.toString());    currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  nextFormatField.group();  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  nextFormatField.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  nextFormatField.group();	      parsePattern    =    Pattern.compile(regex.toString());    currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(itemMatcher[i]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(itemMatcher[i]);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(itemMatcher[i]);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(itemMatcher[i]);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(itemMatcher[i]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  nextFormatField.equals(currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  nextFormatField.equals(currentFormatField);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	nextFormatField.equals(currentFormatField);	      if(currentFormatField.equals(nextFormatField))    {    currentFormatField    =    nextFormatField;    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  parsePattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  parsePattern);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  parsePattern);	      Pattern    collector    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  if(currentFormatField  ==  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField  ==  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField  ==  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    Pattern    collector    =    Pattern.compile(regex.toString());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
52	[BUG]  [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(new  FormatField(this,  regex));  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(new  FormatField(this,  regex));  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(new  FormatField(this,  regex));  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.addRegex(this,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.addRegex(this,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.addRegex(this,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  regex);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  regex);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(regex.toString(),  regex);	      parsePattern    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
58	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  patternMatcher);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(regex.toString(),  patternMatcher);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(regex.toString(),  patternMatcher);	      parsePattern    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
59	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  Pattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  Pattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  Pattern  pattern  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  }	      if(patternMatcher!=    null)    {    Pattern    pattern    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
63	[BUG]  [BUGGY]  luate(patternMatcher,  currentFormatField))  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  luate(patternMatcher,  currentFormatField))  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	luate(patternMatcher,  currentFormatField))  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
64	[BUG]  [BUGGY]  FormatField  <?>  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  FormatField  <?>  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	FormatField  <?>  currentFormatField  =  patternMatcher.group();	      if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField[i]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(new  FormatField[i]);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(new  FormatField[i]);  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(new  FormatField[i]);  }	      if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField[i]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
67	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(nextFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(itemMatcher[i]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
70	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(new  Strategy[collector.size()  ]);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(new  Strategy[collector.size()  ]);  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(new  Strategy[collector.size()  ]);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
71	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  Pattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  Pattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  Pattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  }	      if(patternMatcher!=    null)    {    Pattern    patternMatcher    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
72	[BUG]  [BUGGY]  CurrentPattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  CurrentPattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	CurrentPattern  patternMatcher  =  patternMatcher.group();  currentFormatField  =  patternMatcher.group();	      if(patternMatcher!=    null)    {    Pattern    patternMatcher    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
73	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  patternMatcher.group();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  patternMatcher.group();  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  patternMatcher.group();  }	      parsePattern    =    Pattern.compile(regex.toString());    currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  nextFormatField;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  nextFormatField;  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  nextFormatField;	      parsePattern    =    Pattern.compile(regex.toString());    currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  currentFormatField  =  patternMatcher.group(),  nextFormatField;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  currentFormatField  =  patternMatcher.group(),  nextFormatField;  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	currentFormatField  =  patternMatcher.group(),  nextFormatField;	      currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
76	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toPattern());  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(regex.toPattern());	      Pattern    collector    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  strategies);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(regex.toString(),  strategies);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(regex.toString(),  strategies);	      Pattern    collector    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField);  }  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
81	[BUG]  [BUGGY]  if(currentFormatField  ==  null)  {  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  patternMatcher.group();  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField  ==  null)  {  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  patternMatcher.group();  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField  ==  null)  {  parsePattern  =  Pattern.compile(regex.toString());  currentFormatField  =  patternMatcher.group();  }	      parsePattern    =    Pattern.compile(regex.toString());    currentFormatField    =    patternMatcher.group();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  pendingFormatField  =  patternMatcher.group();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  pendingFormatField  =  patternMatcher.group();  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	pendingFormatField  =  patternMatcher.group();	      if(currentFormatField!=    null)    {    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
83	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
84	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  ++i)  {  collector.add(currentFormatField);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  ++i)  {  collector.add(currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  ++i)  {  collector.add(currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
85	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
86	[BUG]  [BUGGY]  parsePattern  =  Pattern.compile(regex.toString()  +  strategies);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  parsePattern  =  Pattern.compile(regex.toString()  +  strategies);  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	parsePattern  =  Pattern.compile(regex.toString()  +  strategies);	      parsePattern    =    Pattern.compile(regex.toString());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  Pattern  patternMatcher  =  regex.group();  currentFormatField  =  patternMatcher.group();  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  Pattern  patternMatcher  =  regex.group();  currentFormatField  =  patternMatcher.group();  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  Pattern  patternMatcher  =  regex.group();  currentFormatField  =  patternMatcher.group();  }	      if(patternMatcher!=    null)    {    Pattern    patternMatcher    =    patternMatcher.group();    currentFormatField    =    patternMatcher.group();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
88	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField[i]);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(itemMatcher[i]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
89	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(itemMatcher[i]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
90	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(currentFormatField!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(itemMatcher[i]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
92	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(currentFormatField,  currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
93	[BUG]  [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group());  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  Pattern  collector  =  Pattern.compile(patternMatcher.group());  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	Pattern  collector  =  Pattern.compile(patternMatcher.group());	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
94	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  ++i)  {  collector.add(i  +  1,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
95	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    Pattern    collector    =    Pattern.compile(regex.toString());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
96	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  i++)  {  Pattern  collector  =  Pattern.compile(regex.toString());  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    Pattern    collector    =    Pattern.compile(regex.toString());    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
97	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
98	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i  +  1,  nextFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i    +    1,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
99	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(i,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
100	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField,  currentStrategy);  }  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField,  currentStrategy);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(currentFormatField,  currentStrategy);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
101	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(this,  currentFormatField);  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(this,  currentFormatField);  }  [BUGGY]    if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  patternMatcher.size();  i++)  {  collector.add(this,  currentFormatField);  }	  if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    i++)    {    collector.add(i,    currentFormatField);    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
102	[BUG]  [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;    [BUGGY]  if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  ++i)  {  collector.add(currentFormatField[i]);  }  [BUGGY]    }  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  null;  strategies=  collector.toArray(new  Strategy[collector.size()]);  parsePattern=  Pattern.compile(regex.toString());  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	143	143	2	replace	if(patternMatcher!=  null)  {  for(int  i  =  0;  i  <  currentFormatField.size();  ++i)  {  collector.add(currentFormatField[i]);  }	      if(currentFormatField!=    null)    {    for(int    i    =    0;    i    <    patternMatcher.size();    ++i)    {    collector.add(currentFormatField[i]);    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
