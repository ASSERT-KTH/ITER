bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Pattern  patternMatcher  =  nextFormatField.matcher(currentFormatField);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  nextFormatField.matcher(currentFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  nextFormatField.matcher(currentFormatField);	      Pattern    patternMatcher    =    patternMatcher.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
2	[BUG]  [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(patternMatcher);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(patternMatcher);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  currentFormatField.matcher(patternMatcher);	      Pattern    patternMatcher    =    patternMatcher.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
3	[BUG]  [BUGGY]  Pattern  nextFormatField  =  currentStrategy.parsePattern(parsePattern);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  currentStrategy.parsePattern(parsePattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  currentStrategy.parsePattern(parsePattern);	      Pattern    nextFormatField    =    parsePattern.parsePattern(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
4	[BUG]  [BUGGY]  Pattern  nextFormatField  =  patternMatcher.parsePattern(currentStrategy);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  patternMatcher.parsePattern(currentStrategy);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  patternMatcher.parsePattern(currentStrategy);	      Pattern    nextFormatField    =    parsePattern.parsePattern(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
5	[BUG]  [BUGGY]  Pattern  nextFormatField  =  parsePattern.parsePattern(currentStrategy,  patternMatcher);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  parsePattern.parsePattern(currentStrategy,  patternMatcher);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  parsePattern.parsePattern(currentStrategy,  patternMatcher);	      Pattern    nextFormatField    =    parsePattern.parsePattern(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentStrategy);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentStrategy);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.matcher(currentStrategy);	      Pattern    patternMatcher    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  Pattern  patternMatcher  =  currentStrategy.matcher(parsePattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  currentStrategy.matcher(parsePattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  currentStrategy.matcher(parsePattern);	      Pattern    patternMatcher    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  Pattern  patternMatcher  =  nextStrategy.matcher(currentFormatField);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  nextStrategy.matcher(currentFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  nextStrategy.matcher(currentFormatField);	      Pattern    patternMatcher    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  Pattern  nextFormatField  =  currentStrategy.matcher(parsePattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  currentStrategy.matcher(parsePattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  currentStrategy.matcher(parsePattern);	      Pattern    nextFormatField    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
10	[BUG]  [BUGGY]  Pattern  nextFormatField  =  patternMatcher.matcher(currentStrategy);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  patternMatcher.matcher(currentStrategy);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  patternMatcher.matcher(currentStrategy);	      Pattern    nextFormatField    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  Pattern  nextFormatField  =  parsePattern.matcher(currentFormatField);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  parsePattern.matcher(currentFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  parsePattern.matcher(currentFormatField);	      Pattern    nextFormatField    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  Pattern  nextFormatField  =  currentStrategy.matcher(paramPattern);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  currentStrategy.matcher(paramPattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  currentStrategy.matcher(paramPattern);	      Pattern    nextFormatField    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(regex);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.matcher(regex);	      Pattern    patternMatcher    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternPattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternPattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternPattern.matcher(regex);	      Pattern    patternMatcher    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(regex);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  currentFormatField.matcher(regex);	      Pattern    patternMatcher    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  Pattern  nextFormatField  =  currentFormatField.next();  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  currentFormatField.next();  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  currentFormatField.next();	      Pattern    nextFormatField    =    patternMatcher.next();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Pattern  nextFormatField  =  currentStrategy.next();  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  currentStrategy.next();  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  currentStrategy.next();	      Pattern    nextFormatField    =    patternMatcher.next();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  Pattern  nextFormatField  =  patternMatcher.end();  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  patternMatcher.end();  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  patternMatcher.end();	      Pattern    nextFormatField    =    patternMatcher.next();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  if(!currentFormatField.matches())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentFormatField.matches())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentFormatField.matches())  {	  if(!nextFormatField.matches())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
20	[BUG]  [BUGGY]  if(!nextFormatField.matchesRegex())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.matchesRegex())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.matchesRegex())  {	  if(!nextFormatField.matches())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
21	[BUG]  [BUGGY]  if(!nextFormatField.matches()  ||  nextFormatField.matches())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.matches()  ||  nextFormatField.matches())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.matches()  ||  nextFormatField.matches())  {	  if(!nextFormatField.matches())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
22	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.regionEnd());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.regionEnd());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.start(),    patternMatcher.end());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
23	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.end(),  patternMatcher.regionEnd());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.end(),  patternMatcher.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.end(),  patternMatcher.regionEnd());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.start(),    patternMatcher.end());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.start(),  currentStrategy.end());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.start(),  currentStrategy.end());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.start(),  currentStrategy.end());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.start(),    patternMatcher.end());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  if(currentStrategy!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(currentStrategy!=  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(currentStrategy!=  null)  {	  if(nextStrategy    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(parsePattern);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(parsePattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  currentFormatField.matcher(parsePattern);	      Pattern    patternMatcher    =    parsePattern.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternPattern.matcher(currentFormatField);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternPattern.matcher(currentFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternPattern.matcher(currentFormatField);	      Pattern    patternMatcher    =    parsePattern.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  if(!currentStrategy.isRegistered()  ||  patternMatcher.isRegistered())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.isRegistered()  ||  patternMatcher.isRegistered())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.isRegistered()  ||  patternMatcher.isRegistered())  {	  if(!currentStrategy.isRegistered())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(!currentStrategy.isRegistered()  &&  patternMatcher.isRegistered())  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.isRegistered()  &&  patternMatcher.isRegistered())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.isRegistered()  &&  patternMatcher.isRegistered())  {	  if(!currentStrategy.isRegistered())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(!currentStrategy.isRegistered()  &&  patternMatcher.hasNext())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.isRegistered()  &&  patternMatcher.hasNext())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.isRegistered()  &&  patternMatcher.hasNext())  {	  if(!currentStrategy.isRegistered())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  if(currentStrategy.isRegistered())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(currentStrategy.isRegistered())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(currentStrategy.isRegistered())  {	  if(!currentStrategy.isRegistered())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
32	[BUG]  [BUGGY]  if(!currentStrategy.matchesRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matchesRegex(this,  patternMatcher))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matchesRegex(this,  patternMatcher))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  if(!currentStrategy.matchesRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matchesRegex(this,  regex))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matchesRegex(this,  regex))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  if(!currentStrategy.matchesRegex(nextFormatField))  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matchesRegex(nextFormatField))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matchesRegex(nextFormatField))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  if(!currentStrategy.matchesRegex(this))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matchesRegex(this))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matchesRegex(this))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  if(currentFormatField  ==  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(currentFormatField  ==  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(currentFormatField  ==  null)  {	  if(nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  if(currentFormatField!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(currentFormatField!=  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(currentFormatField!=  null)  {	  if(nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  if(!currentStrategy.regionEnd())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.regionEnd())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.regionEnd())  {	  if(!patternMatcher.regionEnd())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
39	[BUG]  [BUGGY]  if(!patternMatcher.regionStart())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!patternMatcher.regionStart())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!patternMatcher.regionStart())  {	  if(!patternMatcher.regionEnd())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
40	[BUG]  [BUGGY]  if(!patternMatcher.regionEnd()  &&  patternMatcher.end()  >  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!patternMatcher.regionEnd()  &&  patternMatcher.end()  >  0)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!patternMatcher.regionEnd()  &&  patternMatcher.end()  >  0)  {	  if(!patternMatcher.regionEnd())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  if(!nextFormatField.regionEnd())  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.regionEnd())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.regionEnd())  {	  if(!patternMatcher.regionEnd())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  if(!currentFormatField.isEmpty())  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentFormatField.isEmpty())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentFormatField.isEmpty())  {	  if(!nextFormatField.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
43	[BUG]  [BUGGY]  if(!currentStrategy.isEmpty())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.isEmpty())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.isEmpty())  {	  if(!nextFormatField.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
44	[BUG]  [BUGGY]  if(nextFormatField.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(nextFormatField.isEmpty())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(nextFormatField.isEmpty())  {	  if(!nextFormatField.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  if(!nextFormatField.isEmpty()  &&  nextFormatField.equals(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.isEmpty()  &&  nextFormatField.equals(currentStrategy))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.isEmpty()  &&  nextFormatField.equals(currentStrategy))  {	  if(!nextFormatField.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.end(),  patternMatcher.regionEnd());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.end(),  patternMatcher.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.end(),  patternMatcher.regionEnd());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
47	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.end(),  currentStrategy.regionEnd());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.end(),  currentStrategy.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(currentFormatField.end(),  currentStrategy.regionEnd());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionStart());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionStart());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionStart());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(),  patternMatcher.regionEnd());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(),  patternMatcher.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(),  patternMatcher.regionEnd());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  if(!currentFormatField.lookingAt())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentFormatField.lookingAt())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentFormatField.lookingAt())  {	  if(!nextFormatField.lookingAt())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
51	[BUG]  [BUGGY]  if(nextFormatField!=  null  ||!nextFormatField.lookingAt())  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(nextFormatField!=  null  ||!nextFormatField.lookingAt())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(nextFormatField!=  null  ||!nextFormatField.lookingAt())  {	  if(!nextFormatField.lookingAt())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  if(!currentStrategy.lookingAt())  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.lookingAt())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.lookingAt())  {	  if(!nextFormatField.lookingAt())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  if(nextFormatField!=  null  ||!currentFormatField.lookingAt())  {  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(nextFormatField!=  null  ||!currentFormatField.lookingAt())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(nextFormatField!=  null  ||!currentFormatField.lookingAt())  {	  if(!nextFormatField.lookingAt())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  nextFormatField);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  nextFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  nextFormatField);	      Pattern    patternMatcher    =    patternMatcher.region(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
55	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(nextFormatField);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(nextFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(nextFormatField);	      Pattern    patternMatcher    =    patternMatcher.region(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
56	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  currentStrategy);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  currentStrategy);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  currentStrategy);	      Pattern    patternMatcher    =    patternMatcher.region(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
57	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  regex);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(currentFormatField,  regex);	      Pattern    patternMatcher    =    patternMatcher.region(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
58	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  regex);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  regex);	      Pattern    patternMatcher    =    patternMatcher.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
59	[BUG]  [BUGGY]  if(currentStrategy  ==  null  ||!currentStrategy.isRegistered())  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(currentStrategy  ==  null  ||!currentStrategy.isRegistered())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(currentStrategy  ==  null  ||!currentStrategy.isRegistered())  {	  if(!currentStrategy.isRegistered())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  if(!currentStrategy.isRegistered()  &&  nextFormatField!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.isRegistered()  &&  nextFormatField!=  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.isRegistered()  &&  nextFormatField!=  null)  {	  if(!currentStrategy.isRegistered())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  if(!currentStrategy.isRegistered()  &&  nextFormatField  ==  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.isRegistered()  &&  nextFormatField  ==  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.isRegistered()  &&  nextFormatField  ==  null)  {	  if(!currentStrategy.isRegistered())    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  if(currentStrategy  ==  null  ||  nextFormatField  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(currentStrategy  ==  null  ||  nextFormatField  ==  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(currentStrategy  ==  null  ||  nextFormatField  ==  null)  {	  if(currentStrategy    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  if(!nextFormatField.isEmpty()  &&!regex.isEmpty())  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.isEmpty()  &&!regex.isEmpty())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.isEmpty()  &&!regex.isEmpty())  {	  if(!nextFormatField.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
64	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.regionStart(),  patternMatcher.regionEnd());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.regionStart(),  patternMatcher.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.regionStart(),  patternMatcher.regionEnd());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
65	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.group(),  patternMatcher.end());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.group(),  patternMatcher.end());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.group(),  patternMatcher.end());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
66	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(),  patternMatcher.regionStart());  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(),  patternMatcher.regionStart());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(),  patternMatcher.regionStart());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  Pattern  patternMatcher  =  formatPattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  formatPattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  formatPattern.matcher(regex);	      Pattern    patternMatcher    =    parsePattern.matcher(regex);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
68	[BUG]  [BUGGY]  Pattern  patternMatcher  =  formatPattern.matcher(currentFormatField);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  formatPattern.matcher(currentFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  formatPattern.matcher(currentFormatField);	      Pattern    patternMatcher    =    parsePattern.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  Pattern  nextFormatField  =  parsePattern.matcher(regex);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  parsePattern.matcher(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  parsePattern.matcher(regex);	      Pattern    nextFormatField    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  Pattern  nextFormatField  =  patternMatcher.next()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  patternMatcher.next()  +  1;  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  patternMatcher.next()  +  1;	      Pattern    nextFormatField    =    patternMatcher.next();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  if(!nextFormatField.matchesRegExp())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.matchesRegExp())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.matchesRegExp())  {	  if(!nextFormatField.matches())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
72	[BUG]  [BUGGY]  if(!regex.regionEnd())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!regex.regionEnd())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!regex.regionEnd())  {	  if(!patternMatcher.regionEnd())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  if(!currentStrategy.matchRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matchRegex(this,  regex))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matchRegex(this,  regex))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
74	[BUG]  [BUGGY]  if(!currentStrategy.matchRegex(this))  {  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matchRegex(this))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matchRegex(this))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  if(!currentStrategy.matchRegex(this,  patternMatcher))  {  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matchRegex(this,  patternMatcher))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matchRegex(this,  patternMatcher))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  if(currentStrategy.matchRegex(this,  regex))  {  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(currentStrategy.matchRegex(this,  regex))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(currentStrategy.matchRegex(this,  regex))  {	  if(!currentStrategy.matches(patternMatcher))    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  Pattern  nextFormatField  =  parsePattern.parsePattern(regex);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  parsePattern.parsePattern(regex);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  parsePattern.parsePattern(regex);	      Pattern    nextFormatField    =    parsePattern.parsePattern(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  if(nextStrategy!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(nextStrategy!=  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(nextStrategy!=  null)  {	  if(nextStrategy    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
79	[BUG]  [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(currentStrategy);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  currentFormatField.matcher(currentStrategy);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  currentFormatField.matcher(currentStrategy);	      Pattern    patternMatcher    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
80	[BUG]  [BUGGY]  Pattern  nextFormatField  =  currentStrategy.parsePattern(paramsePattern);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  currentStrategy.parsePattern(paramsePattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  currentStrategy.parsePattern(paramsePattern);	      Pattern    nextFormatField    =    parsePattern.parsePattern(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
81	[BUG]  [BUGGY]  if(nextFormatField!=  null  &&  currentStrategy.isRegistered())  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(nextFormatField!=  null  &&  currentStrategy.isRegistered())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(nextFormatField!=  null  &&  currentStrategy.isRegistered())  {	  if(nextFormatField!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
82	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.end(),  patternMatcher.regionStart());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.end(),  patternMatcher.regionStart());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.start(),  patternMatcher.end(),  patternMatcher.regionStart());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.start(),    patternMatcher.end());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
83	[BUG]  [BUGGY]  Pattern  nextFormatField  =  currentStrategy.matcher(paramsePattern);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  currentStrategy.matcher(paramsePattern);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  currentStrategy.matcher(paramsePattern);	      Pattern    nextFormatField    =    parsePattern.matcher(currentStrategy);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
84	[BUG]  [BUGGY]  if(!currentStrategy.matches())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!currentStrategy.matches())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!currentStrategy.matches())  {	  if(!nextFormatField.matches())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
85	[BUG]  [BUGGY]  if(!nextFormatField.isRegistered())  {  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.isRegistered())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.isRegistered())  {	  if(!nextFormatField.matches())    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  currentStrategy);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  currentStrategy);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  currentStrategy);	      Pattern    patternMatcher    =    patternMatcher.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
87	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  nextFormatField);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  nextFormatField);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.matcher(currentFormatField,  nextFormatField);	      Pattern    patternMatcher    =    patternMatcher.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
88	[BUG]  [BUGGY]  Pattern  patternMatcher  =  parsePattern.matcher(currentFormatField,  patternMatcher);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  parsePattern.matcher(currentFormatField,  patternMatcher);  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  parsePattern.matcher(currentFormatField,  patternMatcher);	      Pattern    patternMatcher    =    parsePattern.matcher(currentFormatField);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
89	[BUG]  [BUGGY]  if(nextStrategy  ==  null  ||  nextFormatField  ==  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(nextStrategy  ==  null  ||  nextFormatField  ==  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(nextStrategy  ==  null  ||  nextFormatField  ==  null)  {	  if(nextStrategy    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  if(nextStrategy  ==  null  ||  nextFormatField!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(nextStrategy  ==  null  ||  nextFormatField!=  null)  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(nextStrategy  ==  null  ||  nextFormatField!=  null)  {	  if(nextStrategy    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
91	[BUG]  [BUGGY]  if(!patternMatcher.regionEnd()  &&  patternMatcher.hasNext())  {  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!patternMatcher.regionEnd()  &&  patternMatcher.hasNext())  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!patternMatcher.regionEnd()  &&  patternMatcher.hasNext())  {	  if(!patternMatcher.regionEnd())    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
92	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(currentFormatField.end(),  patternMatcher.regionEnd());  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(currentFormatField.end(),  patternMatcher.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.region(currentFormatField.end(),  patternMatcher.regionEnd());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
93	[BUG]  [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.start());  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.start());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  patternMatcher  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.start());	      Pattern    patternMatcher    =    patternMatcher.region(patternMatcher.end(),    patternMatcher.regionEnd());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
94	[BUG]  [BUGGY]  Pattern  nextFormatField  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  Pattern  nextFormatField  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());  [BUGGY]    if(!patternMatcher.lookingAt())  {  nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	Pattern  nextFormatField  =  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());	      Pattern    nextFormatField    =    patternMatcher.next();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
95	[BUG]  [BUGGY]  if(!nextFormatField.isEmpty()  &&  patternMatcher.hasRegex(currentStrategy))  {  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    Matcher  patternMatcher=  formatPattern.matcher(pattern);  if(!patternMatcher.lookingAt())  {  throw  new  IllegalArgumentException(   "Invalid  pattern   ");  }  currentFormatField=  patternMatcher.group();  Strategy  currentStrategy=  getStrategy(currentFormatField);  for(;;)  {  patternMatcher.region(patternMatcher.end(),  patternMatcher.regionEnd());    [BUGGY]  if(!nextFormatField.isEmpty()  &&  patternMatcher.hasRegex(currentStrategy))  {  [BUGGY]    nextStrategy  =  null;  break;  }  String  nextFormatField=  patternMatcher.group();  nextStrategy  =  getStrategy(nextFormatField);  if(currentStrategy.addRegex(this,  regex))  {  collector.add(currentStrategy);  }  currentFormatField=  nextFormatField;  currentStrategy=  nextStrategy;  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  init  [RETURN_TYPE]  void  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  StringBuilder  regex  Matcher  patternMatcher  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  List  collector  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.20412414523193154	132	132	2	replace	if(!nextFormatField.isEmpty()  &&  patternMatcher.hasRegex(currentStrategy))  {	  if(!nextFormatField.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
