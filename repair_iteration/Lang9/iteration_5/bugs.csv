bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action22	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
23	[BUG]  [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
23	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end()  +  1);	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
24	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end()  +  1);  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end()  +  1);	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.end());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.end());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
25	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.end());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.end());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.end());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	32	2	replace
34	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	32	2	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	32	2	replace
35	[BUG]  [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	32	2	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end());    	compilable	  [FE]  AssertionError  testLANG_832	94	2	replace
42	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end());    	compilable	  [FE]  AssertionError  testLANG_832	94	2	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end());    	compilable	  [FE]  AssertionError  testLANG_832	94	2	replace
44	[BUG]  [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.end());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end());    	compilable	  [FE]  AssertionError  testLANG_832	94	2	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start()  +  2);  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start()  +  2);  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end());    	compilable	  [FE]  AssertionError  testLANG_832	94	2	replace
45	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start()  +  2);  pos.setIndex(offset+matcher.end());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start()  +  2);  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start()  +  2);  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end());    	compilable	  [FE]  AssertionError  testLANG_832	94	2	replace
131	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(matcher.start());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+1);  pos.setIndex(matcher.start());	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
132	[BUG]  [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(matcher.start());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(matcher.start());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1);  pos.setIndex(matcher.start());	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
132	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+1);  pos.setIndex(matcher.start()  +  1);	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
133	[BUG]  [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(matcher.start()  +  1);  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1);  pos.setIndex(matcher.start()  +  1);	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
133	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
134	[BUG]  [BUGGY]  if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
134	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  else  {  pos.setIndex(offset+matcher.start());  }  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  else  {  pos.setIndex(offset+matcher.start());  }	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
135	[BUG]  [BUGGY]  if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  else  {  pos.setIndex(offset+matcher.start());  }  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  else  {  pos.setIndex(offset+matcher.start());  }  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	if(offset  ==  0)  {  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start());  }  else  {  pos.setIndex(offset+matcher.start());  }	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
151	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    pos.setIndex(offset+matcher.start()  +  1);	  	compilable	  [FE]  AssertionError  testLANG_832	124	2	add
152	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.start()  +  1);  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);  pos.setIndex(offset+matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    pos.setIndex(offset+matcher.start()  +  1);	  	compilable	  [FE]  AssertionError  testLANG_832	124	2	add
161	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	33	2	replace
162	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start()  +  1);	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	33	2	replace
164	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	33	2	replace
165	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end());	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.start()    +    1);    pos.setIndex(offset+matcher.start()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	33	2	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          Pattern  getParsePattern()  {          [BUGGY]  return(this.parsePattern!=  null)?  null  :  parsePattern;  [BUGGY]          }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	return(this.parsePattern!=  null)?  null  :  parsePattern;	  return(this.parsePattern    ==    null)?    null    :    parsePattern;    	compilable	  [FE]  AssertionError  testLANG_832	24	2	replace
163	[BUG]  [BUGGY]  return(this.parsePattern!=  null)?  null  :  parsePattern;  [FE]  AssertionError  testLANG_832  [CONTEXT]          Pattern  getParsePattern()  {          [BUGGY]  return(this.parsePattern!=  null)?  null  :  parsePattern;  [BUGGY]          }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	return(this.parsePattern!=  null)?  null  :  parsePattern;	  return(this.parsePattern    ==    null)?    null    :    parsePattern;    	compilable	  [FE]  AssertionError  testLANG_832	24	2	replace
302	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start()  +  1);	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
303	[BUG]  [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start()  +  1);  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+1);  pos.setIndex(offset+matcher.start()  +  1);	  pos.setIndex(offset+1);    pos.setIndex(offset+matcher.start());    	compilable	  [FE]  AssertionError  testLANG_832	155	2	replace
323	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          Pattern  getParsePattern()  {          [BUGGY]  return(this.formatPattern  ==  parsePattern)?  null  :  this.formatPattern;  [BUGGY]          }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	return(this.formatPattern  ==  parsePattern)?  null  :  this.formatPattern;	  return(this.formatPattern    ==    null)?    null    :    parsePattern;    	compilable	  [FE]  AssertionError  testLANG_832	144	2	replace
324	[BUG]  [BUGGY]  return(this.formatPattern  ==  parsePattern)?  null  :  this.formatPattern;  [FE]  AssertionError  testLANG_832  [CONTEXT]          Pattern  getParsePattern()  {          [BUGGY]  return(this.formatPattern  ==  parsePattern)?  null  :  this.formatPattern;  [BUGGY]          }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	return(this.formatPattern  ==  parsePattern)?  null  :  this.formatPattern;	  return(this.formatPattern    ==    null)?    null    :    parsePattern;    	compilable	  [FE]  AssertionError  testLANG_832	144	2	replace
183	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          Pattern  getParsePattern()  {          [BUGGY]  return(this.parsePattern  ==  null)?  parsePattern  :  this.parsePattern;  [BUGGY]          }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	add	return(this.parsePattern  ==  null)?  parsePattern  :  this.parsePattern;	  return(this.parsePattern    ==    null)?    null    :    parsePattern;    	compilable	  [FE]  AssertionError  testLANG_832	24	2	replace
184	[BUG]  [BUGGY]  return(this.parsePattern  ==  null)?  parsePattern  :  this.parsePattern;  [FE]  AssertionError  testLANG_832  [CONTEXT]          Pattern  getParsePattern()  {          [BUGGY]  return(this.parsePattern  ==  null)?  parsePattern  :  this.parsePattern;  [BUGGY]          }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  getParsePattern  [RETURN_TYPE]  Pattern  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  ConcurrentMap  nameValues  tzsCache  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  String  currentFormatField  formatField  id  key  nextFormatField  pattern  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.7071067811865475	180	180	2	replace	return(this.parsePattern  ==  null)?  parsePattern  :  this.parsePattern;	  return(this.parsePattern    ==    null)?    null    :    parsePattern;    	compilable	  [FE]  AssertionError  testLANG_832	24	2	replace
424	[BUG]  [BUGGY]  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	add	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end()  +  1);	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
425	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end()  +  1);  [FE]  AssertionError  testLANG_832  [CONTEXT]          return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {  Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }          [BUGGY]  pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end()  +  1);  [BUGGY]          return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	289	289	2	replace	pos.setIndex(offset+matcher.start());  pos.setIndex(offset+matcher.end()  +  1);	  pos.setIndex(offset+matcher.start()        +        1);        pos.setIndex(offset+matcher.start());    pos.setIndex(offset+matcher.end()    +    1);    	compilable	  [FE]  AssertionError  testLANG_832	243	2	replace
