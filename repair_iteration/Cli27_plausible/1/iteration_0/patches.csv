bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
2	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected!=  null  ||  selected.equals(option.getOpt()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	compilable	  [FE]  NullPointerException  	1	6	replace
3	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [FE]  NullPointerException  [FE]      ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getOpt()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	compilable	  [FE]  NullPointerException  	1	6	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	  	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]    String  selected  =  option.getText();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getText();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    String  selected  =  option.getText();		non-compiled	[CE]  cannot  find  symbol	2	None	add
6	[BUG]  [BUGGY]    String  selected  =  option.getSelectedString();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getSelectedString();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    String  selected  =  option.getSelectedString();		non-compiled	[CE]  cannot  find  symbol	2	None	add
7	[BUG]  [BUGGY]    String  selected  =  option.getString();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getString();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    String  selected  =  option.getString();		non-compiled	[CE]  cannot  find  symbol	2	None	add
8	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]          ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getKey();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	    String  selected  =  option.getKey();		compilable	  [FE]  AlreadySelectedException  	2	6	add
9	[BUG]  [BUGGY]    String  selected  =  option.getKey();  [FE]  AlreadySelectedException  [FE]          ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getKey();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    String  selected  =  option.getKey();		compilable	  [FE]  AlreadySelectedException  	2	6	add
10	[BUG]  [BUGGY]    String  selected  =  option.getName();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getName();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    String  selected  =  option.getName();		non-compiled	[CE]  cannot  find  symbol	2	None	add
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getOpt();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	    String  selected  =  option.getOpt();		compilable	  [FE]  ComparisonFailure  	2	6	add
12	[BUG]  [BUGGY]    String  selected  =  option.getOpt();  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    String  selected  =  option.getOpt();  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    String  selected  =  option.getOpt();		compilable	  [FE]  ComparisonFailure  	2	6	add
13	[BUG]  [BUGGY]    Option  option  =  optionMap.get(option);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    Option  option  =  optionMap.get(option);  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    Option  option  =  optionMap.get(option);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	2	None	add
14	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocation()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocation()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	compilable	  [FE]  ComparisonFailure  	1	3	replace
16	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	compilable	  [FE]  ComparisonFailure  	1	3	replace
17	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected!=  null  &&  selected.equals(option.getOpt()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	compilable	  [FE]  AlreadySelectedException  	1	6	replace
18	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [FE]  AlreadySelectedException  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selected.equals(option.getOpt()))  {	if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  	compilable	  [FE]  AlreadySelectedException  	1	6	replace
19	[BUG]  [BUGGY]    Option  option  =  optionMap.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure  [CONTEXT]  if  (option  ==  null)  {  selected  =  null;  return;  }      [BUGGY]    Option  option  =  optionMap.get(selected);  [BUGGY]  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	    Option  option  =  optionMap.get(selected);		non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	2	None	add
