bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  selected  =  optionMap.getText();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  optionMap.getText();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getText();	      String    selected    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  String  selected  =  option.getText()  + "n ";  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getText()  + "n ";  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + "n ";	      String    selected    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  String  selected  =  option.getText()  + ": ";  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getText()  + ": ";  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getText()  + ": ";	      String    selected    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getOpt()))    {    if(selected!=  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
5	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getOpt()))    {    if(selected  ==  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
6	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected  >=  null  &&  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected  >=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getOpt()))    {    if(selected  >=  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
7	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  If(selected!=  null  &&  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]          AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  If(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getOpt()))    {    If(selected!=  null  &&  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
8	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	11	None	add
9	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    String  selected  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
10	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
11	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  if  (selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  if  (selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    String  selected  =  option.getOpt();  if  (selected!=  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
12	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected,  required);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionMap.get(selected,  required);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected,  required);	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
13	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase());  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionMap.get(selected.toLowerCase());  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected.toLowerCase());	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
14	[BUG]  [BUGGY]  Option  option  =  optionMap.get(this.selected);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionMap.get(this.selected);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(this.selected);	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
15	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(selected  +  1);	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
16	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getSelectedValue();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedValue();	      String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
18	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
19	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  ';'  expected	15	None	add
20	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
21	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
22	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getLowerCase()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(optionMap.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
23	[BUG]  [BUGGY]  String  selected  =  option.getValue();  [CE]  illegal  start  of  type  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getValue();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getValue();	      String    selected    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getOpt();  }	      	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	4	None	replace
25	[BUG]  [BUGGY]  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]              ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getString();  }	      	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	4	None	replace
26	[BUG]  [BUGGY]  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [CE]  for-each  loops  are  not  supported  in  -source  1.4  [FE]                ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null)  {  for(String  option  :  options.keySet())  {  selected  =  option.getValue();  }	      	non-compiled	[CE]  for-each  loops  are  not  supported  in  -source  1.4	4	None	replace
27	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected  ==  null  &&  selected.equals(option.getOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	18	6	replace
28	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [FE]  NullPointerException  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  &&  selected.equals(option.getOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	18	6	replace
29	[BUG]  [BUGGY]  String  selected  =  optionMap.getSelectedString();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  optionMap.getSelectedString();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getSelectedString();	      String    selected    =    option.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
30	[BUG]  [BUGGY]  String  selected  =  options.getSelectedString();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  options.getSelectedString();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getSelectedString();	      String    selected    =    option.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selected  =  option.getKey();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	8	None	add
32	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]      AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selection  =  option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	        String    selected    =    option.getKey();    String  selection  =  option.getKey();	  	compilable	  [FE]  AlreadySelectedException  	8	6	add
33	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selection  =  option.getKey();  [FE]  AlreadySelectedException  [FE]      AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selection  =  option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selection  =  option.getKey();	  	compilable	  [FE]  AlreadySelectedException  	8	6	add
34	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selected  =  Option.getKey();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selected  =  Option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selected  =  Option.getKey();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	8	None	add
35	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]          AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  chosen  =  option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	        String    selected    =    option.getKey();    String  chosen  =  option.getKey();	  	compilable	  [FE]  AlreadySelectedException  	8	6	add
36	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  chosen  =  option.getKey();  [FE]  AlreadySelectedException  [FE]          AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  chosen  =  option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  chosen  =  option.getKey();	  	compilable	  [FE]  AlreadySelectedException  	8	6	add
37	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]            AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  key  =  option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	        String    selected    =    option.getKey();    String  key  =  option.getKey();	  	compilable	  [FE]  AlreadySelectedException  	8	6	add
38	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  key  =  option.getKey();  [FE]  AlreadySelectedException  [FE]            AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  key  =  option.getKey();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  key  =  option.getKey();	  	compilable	  [FE]  AlreadySelectedException  	8	6	add
39	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
40	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getLocation()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(optionMap.getLocation()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(optionMap.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
41	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionsMap.get(option);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(option);	      Option    option    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.get(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  options.get(option);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  options.get(option);	      Option    option    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
43	[BUG]  [BUGGY]  Option  option  =  optionMap.get(this.option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionMap.get(this.option);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(this.option);	      Option    option    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
44	[BUG]  [BUGGY]  String  selected  =  option.getSelectedName();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getSelectedName();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedName();	      String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
45	[BUG]  [BUGGY]  String  selected  =  option.getName()  + "n ";  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getName()  + "n ";  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + "n ";	      String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  String  selected  =  option.getName()  + ": ";  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getName()  + ": ";  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getName()  + ": ";	      String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
48	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
49	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLocation()))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
50	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLocalName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
51	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
52	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  NullPointerException  	16	6	replace
53	[BUG]  [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  &&  selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  NullPointerException  	16	6	replace
54	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
55	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    Option  option  =  optionMap.get(option.getOpt());	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	11	None	add
56	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  Option  option  =  optionMap.get(selected);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    Option  option  =  optionMap.get(selected);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	11	None	add
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	        String    selected    =    option.getOpt();    String  selection  =  option.getOpt();	  	compilable	  [FE]  ComparisonFailure  	11	6	add
58	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    String  selection  =  option.getOpt();	  	compilable	  [FE]  ComparisonFailure  	11	6	add
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  String  select  =  option.getOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	        String    selected    =    option.getOpt();    String  select  =  option.getOpt();	  	compilable	  [FE]  ComparisonFailure  	11	6	add
60	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  String  select  =  option.getOpt();  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  String  select  =  option.getOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    String  select  =  option.getOpt();	  	compilable	  [FE]  ComparisonFailure  	11	6	add
61	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selected.equals(option.getLocation()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
62	[BUG]  [BUGGY]  [FE]  AlreadySelectedException  [FE]      AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	18	6	replace
63	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [FE]  AlreadySelectedException  [FE]      AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  &&  selected.equals(option.getLongOpt()))  {	  if(selected!=    null    &&    selected.equals(option.getOpt()))    {    	compilable	  [FE]  AlreadySelectedException  	18	6	replace
64	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  chosen  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  chosen  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  chosen  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	8	None	add
65	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
66	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  this  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	8	None	add
67	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]          AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  setSelected(option.getOpt());  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	8	None	add
68	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLowerCase()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  select.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
69	[BUG]  [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLowerCase()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selection.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
70	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  isSelected(option.getLowerCase()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  isSelected(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
71	[BUG]  [BUGGY]  String  selected  =  options.getName();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  options.getName();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getName();	      String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  String  selected  =  option.toString();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.toString();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.toString();	      String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
73	[BUG]  [BUGGY]  String  option  =  option.getText();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  option  =  option.getText();  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  option  =  option.getText();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  Option  option  =  option.getOption();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  option.getOption();  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  option.getOption();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(selected);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionsMap.get(selected);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionsMap.get(selected);	      Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
76	[BUG]  [BUGGY]  String  selected  =  options.getText();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  options.getText();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getText();	      String    selected    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
77	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  [CE]  illegal  start  of  expression  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selected.equals(option.getLocation()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getOpt()))    {    if(selected!=  null  &&  selected.equals(option.getLocation()))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
78	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  select.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  select.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getOpt()))    {    if(selected!=  null  &&  select.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
79	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selection.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  if(selected!=  null  &&  selection.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    &&    selected.equals(option.getOpt()))    {    if(selected!=  null  &&  selection.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
80	[BUG]  [BUGGY]  String  selected  =  options.getString();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  options.getString();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  options.getString();	      String    selected    =    option.getString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  String  selected  =  optionMap.getString();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  optionMap.getString();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getString();	      String    selected    =    option.getString();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getLongOpt();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getLongOpt();  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String  selected  =  option.getLongOpt();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
83	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    String  selected  =  option.getLongOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
84	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  Option  option  =  optionMap.get(selected);  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  Option  option  =  optionMap.get(selected);  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    Option  option  =  optionMap.get(selected);  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
85	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  select.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  select.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  select.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
86	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
87	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	2	None	add
88	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocation()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  select.equals(option.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
89	[BUG]  [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLocation()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  selection.equals(option.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
90	[BUG]  [BUGGY]  String  selected  =  option.getLongOpt();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getLongOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getLongOpt();	      String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    AlreadySelectedException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getKey();  String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getKey();    String  selected  =  option.getKey();  if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	8	None	add
92	[BUG]  [BUGGY]  String  selected  =  optionMap.get(option.getName());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  optionMap.get(option.getName());  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.get(option.getName());	      String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
93	[BUG]  [BUGGY]  String  selected  =  optionMap.getName();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  optionMap.getName();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  optionMap.getName();	      String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
94	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	add	if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	3	6	replace
95	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	3	6	replace
96	[BUG]  [BUGGY]  if(select  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  select  [FE]      NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(select  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(select  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  select	3	None	replace
97	[BUG]  [BUGGY]  Option  option  =  optionMap.get(select);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  Option  option  =  optionMap.get(select);  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	Option  option  =  optionMap.get(select);	      Option    option    =    optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
98	[BUG]  [BUGGY]  optionMap.put(option.getKey(),  selected);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  optionMap.put(option.getKey(),  selected);  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	optionMap.put(option.getKey(),  selected);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
99	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  char  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  char  selected  =  option.getOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    char  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	11	None	add
100	[BUG]  [BUGGY]      String  selected  =  option.getOpt();  OptionOpt  option  =  option.getOpt();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]      String  selected  =  option.getOpt();  OptionOpt  option  =  option.getOpt();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	        String    selected    =    option.getOpt();    OptionOpt  option  =  option.getOpt();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
101	[BUG]  [BUGGY]  String  selected  =  option.getSelectedIndex();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  String  selected  =  option.getSelectedIndex();  [BUGGY]    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  {  {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	String  selected  =  option.getSelectedIndex();	      String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
102	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
103	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  If(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  If(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    If(selected!=  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  ';'  expected	2	None	add
104	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getUpperOpt()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    if  (option  ==  null)  {  selected  =  null;  return;  }        [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getUpperOpt()))  {  [BUGGY]    {  selected  =  option.getOpt();  }  else  {  throw  new  AlreadySelectedException(this,  option);  }  }  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.7071067811865476	98	99	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getUpperOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
