bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
2	[BUG]  [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
3	[BUG]  [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getName(),  option);  this.optionMap.put(option.getOpt(),  option);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getName(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getName(),  option);  this.optionMap.put(option.getOpt(),  option);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
4	[BUG]  [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt()  [CE]  ')'  expected  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt()  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt()	  	non-compiled	[CE]  ')'  expected	53	None	add
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	33	6	replace
6	[BUG]  [BUGGY]  if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	33	6	replace
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(this.selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(this.selected!=  null  ||  this.selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	33	9	replace
8	[BUG]  [BUGGY]  if(this.selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(this.selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(this.selected!=  null  ||  this.selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	33	9	replace
9	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  this.selected.equals(option.getLocalPart()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
10	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)this.optionMap.get(option.getOpt());	  Option    option    =(Option)this.optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
11	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(option  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(option  +  1);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)this.optionMap.get(option  +  1);	  Option    option    =(Option)this.optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
12	[BUG]  [BUGGY]  this.optionMap.put(option.getKey(),  options);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getKey(),  options);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getKey(),  options);	  this.optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  selected.equals(option.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
14	[BUG]  [BUGGY]  option  =(Option)this.optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  option  =(Option)this.optionMap.get(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	option  =(Option)this.optionMap.get(option.getOpt());	  option    =(Option)this.optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
15	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
16	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
17	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  selected.equals(option.getLocalPart()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
18	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option.getOpt()))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  isSelected(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  isSelected(option.getOpt()))  {	  if(selected!=    null    ||    isSelected(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
19	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option,  option.getOpt()))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  isSelected(option,  option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  isSelected(option,  option.getOpt()))  {	  if(selected!=    null    ||    isSelected(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
20	[BUG]  [BUGGY]  if(option!=  null  ||  isSelected(option.getOpt()))  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null  ||  isSelected(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null  ||  isSelected(option.getOpt()))  {	  if(selected!=    null    ||    isSelected(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
21	[BUG]  [BUGGY]  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  option  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	option  =  option.getOpt();	  option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
22	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||!selected.equals(option.getOpt()))    {    if(selected  ==  null  ||!selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
23	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||!selected.equals(option.getOpt()))    {    if(selected!=  null  ||!selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
24	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  If(selected  ==  null  ||!selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  If(selected  ==  null  ||!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||!selected.equals(option.getOpt()))    {    If(selected  ==  null  ||!selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  ';'  expected	82	None	add
25	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  if(selected  ==  null  ||!selected.equals(option.getLocation()))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  if(selected  ==  null  ||!selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||!selected.equals(option.getOpt()))    {    if(selected  ==  null  ||!selected.equals(option.getLocation()))  {	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
26	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getRawOffset()))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getRawOffset()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||!selected.equals(option.getRawOffset()))  {	  if(selected    ==    null    ||!selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
27	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||!selected.equals(option.getLocalPart()))  {	  if(selected    ==    null    ||!selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getOpt());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOption(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOption(option.getOpt());	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.getOption(selected);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOption(selected);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOption(selected);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.optionMap);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOption(this.optionMap);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOption(this.optionMap);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.get(option.getOption());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.get(option.getOption());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.get(option.getOption());	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
32	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOption(),  options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.get(option.getOption(),  options);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.get(option.getOption(),  options);	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
33	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	22	9	add
34	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	22	9	add
35	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
36	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	22	9	add
37	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	22	9	add
38	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getName();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getName();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getName();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
39	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	96	9	add
40	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	96	9	add
41	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
42	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	96	9	add
43	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	96	9	add
44	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.get  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.get  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.get	  	non-compiled	[CE]  ';'  expected	96	None	add
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	96	9	add
46	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	96	9	add
47	[BUG]  [BUGGY]  Option  option  =  options.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.get(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.get(option.getOpt());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
48	[BUG]  [BUGGY]  Option  option  =  options.get(option.getName());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.get(option.getName());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.get(option.getName());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
49	[BUG]  [BUGGY]  option  =  options.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  option  =  options.get(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	option  =  options.get(option.getOpt());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
50	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(selected!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    return;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
51	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    return;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
52	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null)  {  String  selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  return;  }  [CE]  cannot  find  symbol  [FE]                  NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null)  {  String  selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(selected  ==  null)  {  String  selected  =  option.getOpt();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  return;  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    return;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
53	[BUG]  [BUGGY]  this.optionMap.put(option.getLocalName(),  option);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getLocalName(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getLocalName(),  option);	          this.optionMap.put(option.getOpt(),    option);    Option    option    =(Option)this.optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
54	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option.getOpt());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.getOption(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.getOption(option.getOpt());	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
55	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.getOption(this.option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.getOption(this.option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
56	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(selected);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.getOption(selected);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.getOption(selected);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
57	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
58	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getUpperCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getUpperCase()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getUpperCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
59	[BUG]  [BUGGY]  String  selected  =  option.getSelectedName();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelectedName();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelectedName();	  String    selected    =    option.getName();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
60	[BUG]  [BUGGY]  String  selected  =  option.getLocation();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getLocation();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getLocation();	          String    selected    =    option.getOpt();    String    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
61	[BUG]  [BUGGY]  String  selected  =  option.getUpperBound();  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getUpperBound();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getUpperBound();	          String    selected    =    option.getOpt();    String    selected    =    option.getLocation();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
62	[BUG]  [BUGGY]  if(option  ==  null)  {  If(selected!=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option  ==  null)  {  If(selected!=  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option  ==  null)  {  If(selected!=  null)  {	  if(selected!=    null)    {    If(selected!=    null)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
63	[BUG]  [BUGGY]  if(selected!=  null)  {  If(selected  ==  null)  {  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null)  {  If(selected  ==  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null)  {  If(selected  ==  null)  {	  if(selected!=    null)    {    If(selected!=    null)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
64	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	20	9	add
65	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	20	9	add
66	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	20	9	add
67	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	20	9	add
68	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	20	9	add
69	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	20	9	add
70	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  This.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [CE]  cannot  find  symbol  This  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  This.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    This.selected  =  option.getOpt();  this.selected  =  option.getOpt();	  	non-compiled	[CE]  cannot  find  symbol  This	20	None	add
71	[BUG]  [BUGGY]  this.optionMap.put(option.getOpt(),  selection);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getOpt(),  selection);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getOpt(),  selection);	  this.optionMap.put(option.getName(),    selection);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
72	[BUG]  [BUGGY]  String  selected  =  option.getSelectedText();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelectedText();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelectedText();	  String    selected    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
73	[BUG]  [BUGGY]  String  selected  =  option.getText().trim();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getText().trim();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getText().trim();	  String    selected    =    option.getText();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
74	[BUG]  [BUGGY]  String  selected  =  option.getSelectedKey();  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelectedKey();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelectedKey();	  String    selected    =    option.getSelectedValue();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
75	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  this.optionMap.getOption(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  this.optionMap.getOption(option);	  Option    option    =    option.getOption(this.optionMap);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
76	[BUG]  [BUGGY]  option  =  this.optionMap.getOption(option);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  option  =  this.optionMap.getOption(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	option  =  this.optionMap.getOption(option);	  Option    option    =    option.getOption(this.optionMap);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
77	[BUG]  [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||!selected.equals(option.getOpt()))    {    if(selected!=  null  ||!selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
78	[BUG]  [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected  ==  null  ||!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||!selected.equals(option.getOpt()))    {    if(selected  ==  null  ||!selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
79	[BUG]  [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected  >=  null  ||!selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected  >=  null  ||!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||!selected.equals(option.getOpt()))    {    if(selected  >=  null  ||!selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
80	[BUG]  [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||!selected.equals(option.getOpt()))    {    if(selected!=  null  ||!selected.equals(option.getLocalName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
81	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	28	9	add
82	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	28	9	add
83	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	28	9	add
84	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	28	9	add
85	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
86	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
87	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
88	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelected();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelected();	  String    selected    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
89	[BUG]  [BUGGY]  String  selected  =  option.getValue();  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getValue();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getValue();	  String    selected    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
90	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	26	9	add
91	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	26	9	add
92	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	26	9	add
93	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	26	9	add
94	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
95	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	26	9	add
96	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	26	9	add
97	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
98	[BUG]  [BUGGY]  String  selected  =  option.getLowerCase();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getLowerCase();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getLowerCase();	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
99	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  selection  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	13	None	add
100	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  option  =  option.getOpt();  String  selection  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  option  =  option.getOpt();  String  selection  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  option  =  option.getOpt();  String  selection  =  option.getOpt();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	13	None	add
101	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  option  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  option  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  option  =  option.getOpt();  String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	13	None	add
102	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selection  is  already  defined  in  method  setSelected(Option)  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selection  is  already  defined  in  method  setSelected(Option)	13	None	add
103	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  choice  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  choice  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  choice  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	13	None	add
104	[BUG]  [BUGGY]  this.optionMap.put(option.getOpt(),  options);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getOpt(),  options);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getOpt(),  options);	  this.optionMap.put(option.getLongOpt(),    option);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
105	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  OptionGroup  optionGroup  =  option.getOpt();  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	OptionGroup  optionGroup  =  option.getOpt();	  OptionGroup    optionGroup    =    option.getGroup();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
106	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  OptionGroup  optionGroup  =  option.getOptionGroup();  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	OptionGroup  optionGroup  =  option.getOptionGroup();	  OptionGroup    optionGroup    =    option.getGroup();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
107	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOrCreateGroup();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  OptionGroup  optionGroup  =  option.getOrCreateGroup();  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	OptionGroup  optionGroup  =  option.getOrCreateGroup();	  OptionGroup    optionGroup    =    option.getGroup();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
108	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
109	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
110	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  ';'  expected	100	None	add
111	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  chosen.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  chosen.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  chosen.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
112	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
113	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
114	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option.getOpt()  -  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)optionMap.get(option.getOpt()  -  1);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)optionMap.get(option.getOpt()  -  1);	  Option    option    =(Option)optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
115	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option.getKey());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)optionMap.get(option.getKey());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)optionMap.get(option.getKey());	  Option    option    =(Option)optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
116	[BUG]  [BUGGY]  this.optionMap.put(option.getOpt(),  selected);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getOpt(),  selected);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getOpt(),  selected);	  this.optionMap.put(option.getName(),    selected);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
117	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	94	9	add
118	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	94	9	add
119	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
120	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	94	9	add
121	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	94	9	add
122	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  >=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  >=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  >=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	94	None	add
123	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getName()))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||!selected.equals(option.getName()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
124	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getPt()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getPt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getPt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getPt()))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
125	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getPt()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getPt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  selected.equals(option.getPt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getPt()))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
126	[BUG]  [BUGGY]  if(selected  ==  null  ||  isSelected(option.getRawOffset()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  isSelected(option.getRawOffset()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  isSelected(option.getRawOffset()))  {	  if(selected    ==    null    ||    selected.equals(option.getRawOffset()))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
127	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.setSelected(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)this.optionMap.setSelected(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)this.optionMap.setSelected(option);	  Option    option    =(Option)super.setSelected(option);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
128	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.setSelected(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)optionMap.setSelected(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)optionMap.setSelected(option);	  Option    option    =(Option)super.setSelected(option);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
129	[BUG]  [BUGGY]  option  =(Option)super.setSelected(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  option  =(Option)super.setSelected(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	option  =(Option)super.setSelected(option);	  Option    option    =(Option)super.setSelected(option);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
130	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  -  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.get(option.getOpt()  -  1);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.get(option.getOpt()  -  1);	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
131	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.get(option.getOpt(),  options);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.get(option.getOpt(),  options);	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
132	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
133	[BUG]  [BUGGY]  this.selected  =  option.getSelectedValue();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelectedValue();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelectedValue();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
134	[BUG]  [BUGGY]  this.selected  =  option.getName();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getName();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getName();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
135	[BUG]  [BUGGY]  this.selected  =  option.getSelected(option.getOpt());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected(option.getOpt());  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected(option.getOpt());	  this.selected    =    option.getSelected();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
136	[BUG]  [BUGGY]  this.selected  =  option.getSelected()  +  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected()  +  1;  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected()  +  1;	  this.selected    =    option.getSelected();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
137	[BUG]  [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	If(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
138	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getName()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getName()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
139	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocalPart()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
140	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  String  options  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelected();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelected();  String  options  =  option.getOpt();	          String    selected    =    option.getOpt();    String    options    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
141	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  String  options  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelectedValue();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelectedValue();  String  options  =  option.getOpt();	          String    selected    =    option.getOpt();    String    options    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
142	[BUG]  [BUGGY]  String  selected  =  option.getKey();  String  options  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getKey();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getKey();  String  options  =  option.getOpt();	          String    selected    =    option.getOpt();    String    options    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
143	[BUG]  [BUGGY]  String  selected  =  option.getName();  String  options  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getName();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getName();  String  options  =  option.getOpt();	          String    selected    =    option.getOpt();    String    options    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
144	[BUG]  [BUGGY]  if(option  ==  null)  {  If(selected  ==  null)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option  ==  null)  {  If(selected  ==  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option  ==  null)  {  If(selected  ==  null)  {	  if(selected    ==    null)    {    If(selected    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
145	[BUG]  [BUGGY]  If(selected  ==  null)  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  If(selected  ==  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	If(selected  ==  null)  {	  if(selected    ==    null)    {    If(selected    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
146	[BUG]  [BUGGY]  this.optionMap.put(option.getOpt(),  Option);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getOpt(),  Option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getOpt(),  Option);	          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),    Option);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
147	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalName()))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getLocalName()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getLocalName()))    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
148	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  selected.equals(option.getLocalName()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    if(selected    ==    null    ||    selected.equals(option.getLocalName()))    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
149	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  this.optionMap.getOption(this);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
150	[BUG]  [BUGGY]  Option  option  =  options.getOption(this);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOption(this);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOption(this);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
151	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  options);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  option.getOption(this,  options);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  option.getOption(this,  options);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
152	[BUG]  [BUGGY]  this.optionMap.put(option,  option.getName(),  selected);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option,  option.getName(),  selected);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option,  option.getName(),  selected);	  this.optionMap.put(option,    option.getName(),    option);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
153	[BUG]  [BUGGY]  this.optionMap.put(option,  option.getOpt(),  option);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option,  option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option,  option.getOpt(),  option);	  this.optionMap.put(option,    option.getName(),    option);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
154	[BUG]  [BUGGY]  this.optionMap.put(option,  option.getName(),  null);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option,  option.getName(),  null);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option,  option.getName(),  null);	  this.optionMap.put(option,    option.getName(),    option);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
155	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
156	[BUG]  [BUGGY]  this.selected  =  option.getKey();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getKey();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getKey();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
157	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
158	[BUG]  [BUGGY]  this.optionMap.put(option.getLocation(),  options);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getLocation(),  options);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getLocation(),  options);	  this.optionMap.put(option.getLocation(),    option);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
159	[BUG]  [BUGGY]  String  selected  =  option.getSelected();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelected();  String  selection  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelected();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
160	[BUG]  [BUGGY]  String  selected  =  option.getSelectedValue();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelectedValue();  String  selection  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelectedValue();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
161	[BUG]  [BUGGY]  String  selected  =  option.getKey();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getKey();  String  selection  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getKey();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
162	[BUG]  [BUGGY]  String  selected  =  option.getName();  String  selection  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getName();  String  selection  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getName();  String  selection  =  option.getOpt();	          String    selected    =    option.getOpt();    String    selection    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
163	[BUG]  [BUGGY]  this.optionMap.put(option.getOpt(),  optional);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getOpt(),  optional);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getOpt(),  optional);	          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),    options);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
164	[BUG]  [BUGGY]  this.optionMap.put(option.getOpt(),  new  OptionGroup());  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getOpt(),  new  OptionGroup());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getOpt(),  new  OptionGroup());	          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),    options);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
165	[BUG]  [BUGGY]  this.optionMap.put(option.getUpperCase(),  option);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getUpperCase(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getUpperCase(),  option);	  this.optionMap.put(option.getLowerCase(),    option);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
166	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	24	9	add
167	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	24	9	add
168	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	24	9	add
169	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	24	9	add
170	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
171	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()  ==  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
172	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
173	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  String  chosen  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  String  chosen  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  selected  =  option.getOpt();  String  chosen  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	15	None	add
174	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  option  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  option  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  option  =  option.getOpt();  String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	15	None	add
175	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  selected  =  option.getOpt();  String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	15	None	add
176	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  option  =  option.getOpt();  String  chosen  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  option  =  option.getOpt();  String  chosen  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  option  =  option.getOpt();  String  chosen  =  option.getOpt();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	15	None	add
177	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  chosen  =  option.getOpt();  String  chosen  =  option.getOpt();  [CE]  variable  chosen  is  already  defined  in  method  setSelected(Option)  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  chosen  =  option.getOpt();  String  chosen  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  chosen  =  option.getOpt();  String  chosen  =  option.getOpt();	  	non-compiled	[CE]  variable  chosen  is  already  defined  in  method  setSelected(Option)	15	None	add
178	[BUG]  [BUGGY]  Option  option  =  options.setOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.setOption(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.setOption(option);	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
179	[BUG]  [BUGGY]  Option  option  =  options.get(selected);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.get(selected);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.get(selected);	  Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
180	[BUG]  [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.get(selected  +  1);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.get(selected  +  1);	  Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
181	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
182	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
183	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLocation()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
184	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
185	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLocalName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLocalName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
186	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  selected.equals(option.getName()))  {	  if(selected    ==    null    ||    selected.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  option.getOpt().equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected  ==  null  ||  option.getOpt().equals(option.getOpt()))  {	  if(selected!=    null)    {    if(option!=    null)    {    	compilable	  [FE]  ComparisonFailure  	5	6	replace
188	[BUG]  [BUGGY]  if(selected  ==  null  ||  option.getOpt().equals(option.getOpt()))  {  [FE]  ComparisonFailure  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  option.getOpt().equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  option.getOpt().equals(option.getOpt()))  {	  if(selected!=    null)    {    if(option!=    null)    {    	compilable	  [FE]  ComparisonFailure  	5	6	replace
189	[BUG]  [BUGGY]  String  selected  =  option.getSelectedString()  + "n ";  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getSelectedString()  + "n ";  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getSelectedString()  + "n ";	  String    selected    =    option.getSelectedString();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
190	[BUG]  [BUGGY]  Option  option  =  option.getOption(option.getOpt());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  option.getOption(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  option.getOption(option.getOpt());	  Option    option    =    option.getOption(required);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
191	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  required);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  option.getOption(this,  required);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  option.getOption(this,  required);	  Option    option    =    option.getOption(required);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
192	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    String  selected  =  option.getOpt();  String  options  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	72	None	add
193	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    if(option.getOpt()!=  null)  {  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	72	None	add
194	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  }  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    if(option.getOpt()  ==  null)  {  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  }	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	72	None	add
195	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  option  =  option.getOpt();  String  options  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  option  =  option.getOpt();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    String  option  =  option.getOpt();  String  options  =  option.getOpt();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	72	None	add
196	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selection  =  option.getOpt();  String  options  =  option.getOpt();  [CE]  variable  options  is  already  defined  in  method  setSelected(Option)  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selection  =  option.getOpt();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    String  selection  =  option.getOpt();  String  options  =  option.getOpt();	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  setSelected(Option)	72	None	add
197	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionsMap.get(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionsMap.get(option.getOpt());	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
198	[BUG]  [BUGGY]  Option  option  =  this.optionMap.get(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  this.optionMap.get(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  this.optionMap.get(option);	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
199	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.cloneTree());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionsMap.get(option.cloneTree());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionsMap.get(option.cloneTree());	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
200	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	79	9	add
201	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	79	9	add
202	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
203	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
204	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
205	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	79	9	add
206	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	79	9	add
207	[BUG]  [BUGGY]  Option  option  =  option.getOption(this.selected);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  option.getOption(this.selected);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  option.getOption(this.selected);	  Option    option    =    option.getOption(selected);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
208	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
209	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    if(this.selected  ==  null  ||  this.selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
210	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
211	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  If(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  If(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    If(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  ';'  expected	32	None	add
212	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
213	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
214	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
215	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	26	9	add
216	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	26	9	add
217	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
218	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLowerCase()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
219	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLowerBound()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLowerBound()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLowerBound()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
220	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected  ==  null  ||  selected.equals(option.getKey()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  ComparisonFailure  	101	6	replace
221	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getKey()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getKey()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	compilable	  [FE]  ComparisonFailure  	101	6	replace
222	[BUG]  [BUGGY]  Option  option  =  options.get(option.getLocation());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.get(option.getLocation());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.get(option.getLocation());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
223	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getSelected())  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getSelected())  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getSelected())  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
224	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  option.getSelected())  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  option.getSelected())  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  option.getSelected())  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
225	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getName())  {  this.selected  =  option.getSelectedString();  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getName())  {  this.selected  =  option.getSelectedString();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getName())  {  this.selected  =  option.getSelectedString();  }	          this.selected    =    option.getOpt();    if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
226	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
227	[BUG]  [BUGGY]  OptionGroup  optionGroup  =  option.getOrCreateOptionGroup();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  OptionGroup  optionGroup  =  option.getOrCreateOptionGroup();  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	OptionGroup  optionGroup  =  option.getOrCreateOptionGroup();	  OptionGroup    optionGroup    =    option.getGroup();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
228	[BUG]  [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
229	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
230	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
231	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(option!=  null)  {	  if(selected!=    null)    {    if(selected    ==    null)    {    	compilable	  [FE]  NullPointerException  	2	9	replace
232	[BUG]  [BUGGY]  if(option!=  null)  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {	  if(selected!=    null)    {    if(selected    ==    null)    {    	compilable	  [FE]  NullPointerException  	2	9	replace
233	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	20	9	add
234	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	20	9	add
235	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	20	9	add
236	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	20	9	add
237	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getLocation();  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getOpt();  this.selected  =  option.getLocation();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  option.getLocation();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
238	[BUG]  [BUGGY]  this.selected  =  option.getSelected(option.getLocation());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected(option.getLocation());  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected(option.getLocation());	  this.selected    =    option.getSelected();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
239	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||!selected.equals(option.getLocation()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
240	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected  ==  null  ||!selected.equals(option.getLongOpt()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	85	6	replace
241	[BUG]  [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getLongOpt()))  {  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||!selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||!selected.equals(option.getLongOpt()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	85	6	replace
242	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  option  =  option.getOpt();  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  option  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  option  =  option.getOpt();	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	15	None	add
243	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  this.selected.equals(option.getLocation()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getOpt()))  {  if(selected  ==  null  ||  this.selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    if(selected  ==  null  ||  this.selected.equals(option.getLocation()))  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
244	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
245	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
246	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.get  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.get  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.get	  	non-compiled	[CE]  ';'  expected	94	None	add
247	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(option.getKey());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(option.getKey());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)this.optionMap.get(option.getKey());	  Option    option    =(Option)this.optionMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
248	[BUG]  [BUGGY]  this.selected  =  option.getValue();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getValue();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getValue();	  this.selected    =    option.getKey();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
249	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getName();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getName();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getName();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
250	[BUG]  [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getName();  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getName();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getName();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
251	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getString();  }  [CE]  cannot  find  symbol  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getString();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getName()!=  null)  {  this.selected  =  option.getString();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
252	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
253	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
254	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
255	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  select.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  select.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  select.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
256	[BUG]  [BUGGY]  option  =  option.getOption(this.optionMap);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  option  =  option.getOption(this.optionMap);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	option  =  option.getOption(this.optionMap);	  Option    option    =    option.getOption(this.optionMap);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
257	[BUG]  [BUGGY]  this.optionMap.put(option.getLowerBound(),  option);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getLowerBound(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getLowerBound(),  option);	          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),    option);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
258	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
259	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
260	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    if(option  ==  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
261	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getSelected();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
262	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getName());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOption(option.getName());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOption(option.getName());	  Option    option    =    options.getOpt();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
263	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getRawOffset()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  select.equals(option.getRawOffset()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  select.equals(option.getRawOffset()))  {	  if(selected    ==    null    ||    selected.equals(option.getRawOffset()))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
264	[BUG]  [BUGGY]  this.selected  =  option.getSelection();  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelection();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelection();	          this.selected    =    option.getOpt();    if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
265	[BUG]  [BUGGY]  this.optionMap.put(option.getOpt(),  Option;  [CE]  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getOpt(),  Option;  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getOpt(),  Option;	          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),    Option);    	non-compiled	[CE]  	56	None	replace
266	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  option  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  option  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  option  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	13	None	add
267	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();  String  options  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	13	None	add
268	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionsMap.getOption(option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionsMap.getOption(option);	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
269	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  select.equals(option.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
270	[BUG]  [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selection.equals(option.getLocation()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocation()))    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
271	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
272	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
273	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
274	[BUG]  [BUGGY]  if(selected!=  null  ||  isSelected(option.getOptionType()))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  isSelected(option.getOptionType()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  isSelected(option.getOptionType()))  {	  if(selected!=    null    ||    isSelected(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
275	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
276	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
277	[BUG]  [BUGGY]  this.optionMap.put(option.getSelected(),  option);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getSelected(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getSelected(),  option);	  this.optionMap.put(option.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
278	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocalPart()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLocalPart()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  select.equals(option.getLocalPart()))  {	  if(selected    ==    null    ||    selected.equals(option.getLocalPart()))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
279	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getName()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  select.equals(option.getName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  select.equals(option.getName()))  {	  if(selected    ==    null    ||    selected.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
280	[BUG]  [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getLocation()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||!selected.equals(option.getOpt()))    {    if(selected!=  null  ||!selected.equals(option.getLocation()))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
281	[BUG]  [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||!selected.equals(option.getOpt()))    {    if(selected!=  null  ||!selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
282	[BUG]  [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||!selected.equals(option.getOpt()))  {  if(selected!=  null  ||!selected.equals(option.getName()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||!selected.equals(option.getOpt()))    {    if(selected!=  null  ||!selected.equals(option.getName()))  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
283	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getPt();  }  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getPt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  this.selected  =  option.getPt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getName()))    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
284	[BUG]  [BUGGY]  this.selected  =  option.getSelectedValue();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelectedValue();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelectedValue();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    return;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
285	[BUG]  [BUGGY]  this.selected  =  option.getSelected();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  return;  }  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelected();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelected();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getName()))  {  return;  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    return;    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
286	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
287	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  If(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
288	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {  If(selected  ==  null  ||  selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
289	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
290	[BUG]  [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
291	[BUG]  [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getLocation(),  option);  this.optionMap.put(option.getOpt(),  option);  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getLocation(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getLocation(),  option);  this.optionMap.put(option.getOpt(),  option);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
292	[BUG]  [BUGGY]  option  =  optionMap.get(option.getOpt());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  option  =  optionMap.get(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	option  =  optionMap.get(option.getOpt());	  Option    option    =    optionMap.get(selected);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
293	[BUG]  [BUGGY]  this.selected  =  option.getString();  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getString();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getString();	          this.selected    =    option.getOpt();    if(option!=    null)    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
294	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLocation()))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLocation()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  this.selected.equals(option.getLocation()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
295	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected  ==  null  ||  this.selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	33	6	replace
296	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLongOpt()))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  this.selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	compilable	  [FE]  ComparisonFailure  	33	6	replace
297	[BUG]  [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  this.selected.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    this.selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
298	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  option.getOption(this,  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  option.getOption(this,  option);	  Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
299	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected!=  null)  {  this.selected  =  option.getSelected();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected!=  null)  {  this.selected  =  option.getSelected();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected!=  null)  {  this.selected  =  option.getSelected();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
300	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
301	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	72	None	add
302	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  [CE]  variable  option  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  Option  option  =  optionMap.get(option.getOpt());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    Option  option  =  optionMap.get(option.getOpt());	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  setSelected(Option)	72	None	add
303	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOption();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOption();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    String  selected  =  option.getOpt();  String  options  =  option.getOption();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	72	None	add
304	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getOption());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionsMap.get(option.getOption());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionsMap.get(option.getOption());	  Option    option    =    optionMap.get(option.getOption());    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
305	[BUG]  [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  select.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  select.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
306	[BUG]  [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLowerCase()))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selection.equals(option.getLowerCase()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selection.equals(option.getLowerCase()))  {	  if(selected    ==    null    ||    selected.equals(option.getLowerCase()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
307	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    if(this.selected  ==  option.getOpt())  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
308	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
309	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getPt();  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getPt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getPt();  }	  	non-compiled	[CE]  cannot  find  symbol	24	None	add
310	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(option.getKey());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionsMap.get(option.getKey());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionsMap.get(option.getKey());	  Option    option    =    optionsMap.get(option);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
311	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getLocation());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOption(option.getLocation());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOption(option.getLocation());	  Option    option    =    options.getOpt();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
312	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.getKey());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOption(option.getKey());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOption(option.getKey());	  Option    option    =    options.getOpt();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
313	[BUG]  [BUGGY]  if(selected  ==  null)  {  If(selected!=  null)  {  [CE]  ';'  expected  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null)  {  If(selected!=  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null)  {  If(selected!=  null)  {	  if(selected!=    null)    {    If(selected!=    null)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
314	[BUG]  [BUGGY]  if(option!=  null)  {  If(selected  ==  null)  {  [CE]  ';'  expected  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  If(selected  ==  null)  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  If(selected  ==  null)  {	  if(selected!=    null)    {    If(selected!=    null)    {    	non-compiled	[CE]  ';'  expected	104	None	replace
315	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  char  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  char  selected  =  option.getOpt();  String  selection  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    char  selected  =  option.getOpt();  String  selection  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	13	None	add
316	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  selection  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    selection    =    option.getOpt();    String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	13	None	add
317	[BUG]  [BUGGY]  String  selected  =  option.getLongOpt();  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getLongOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getLongOpt();	          String    selected    =    option.getOpt();    String    selected    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
318	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  &&!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected!=  null  &&!selected.equals(option.getOpt()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	85	9	replace
319	[BUG]  [BUGGY]  if(selected!=  null  &&!selected.equals(option.getOpt()))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  &&!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  &&!selected.equals(option.getOpt()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	85	9	replace
320	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(!selected.equals(option.getOpt()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	85	9	replace
321	[BUG]  [BUGGY]  if(!selected.equals(option.getOpt()))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(!selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(!selected.equals(option.getOpt()))  {	  if(selected!=    null    ||!selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	85	9	replace
322	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getLongOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getLongOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	22	9	add
323	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getLongOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getLongOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getLongOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	  	compilable	  [FE]  NullPointerException  	22	9	add
324	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
325	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    if(selected  ==  null  ||  selected.equals(option.getOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
326	[BUG]  [BUGGY]  this.selected  =  option.getSelectedValue();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelectedValue();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelectedValue();  if(option.getOpt()!=  null)  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option.getOpt()!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
327	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getSelectedOpt()))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getSelectedOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getSelectedOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getLongOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
328	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getKey());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.get(option.getKey());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.get(option.getKey());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
329	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getLocation());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.get(option.getLocation());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.get(option.getLocation());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
330	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option.getItemCount());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.get(option.getItemCount());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.get(option.getItemCount());	  Option    option    =    optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
331	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {	  if(selected!=    null)    {    if(option!=    null)    {    	compilable	  [FE]  NullPointerException  	5	9	replace
332	[BUG]  [BUGGY]  if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  this.selected.equals(option.getOpt()))  {	  if(selected!=    null)    {    if(option!=    null)    {    	compilable	  [FE]  NullPointerException  	5	9	replace
333	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  char  selected  =  option.getOpt();  String  options  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  char  selected  =  option.getOpt();  String  options  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    char  selected  =  option.getOpt();  String  options  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	72	None	add
334	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  if(option  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  if(option  ==  null)  {  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    String  selected  =  option.getOpt();  String  options  =  option.getOpt();  if(option  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
335	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  if(option!=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  options  =  option.getOpt();  String  selected  =  option.getOpt();  String  options  =  option.getOpt();  if(option!=  null)  {  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    options    =    option.getOpt();    String  selected  =  option.getOpt();  String  options  =  option.getOpt();  if(option!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
336	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option.getLocation());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =(Option)optionMap.get(option.getLocation());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =(Option)optionMap.get(option.getLocation());	  Option    option    =(Option)optionMap.get(option.getOpt());    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
337	[BUG]  [BUGGY]  String  selected  =  option.getKey();  Option  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getKey();  Option  option  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getKey();  Option  option  =  option.getOpt();	          String    selected    =    option.getOpt();    Option    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
338	[BUG]  [BUGGY]  String  selected  =  option.getText();  Option  option  =  option.getOpt();  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  String  selected  =  option.getText();  Option  option  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	String  selected  =  option.getText();  Option  option  =  option.getOpt();	          String    selected    =    option.getOpt();    Option    option    =    option.getOpt();    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
339	[BUG]  [BUGGY]  Option  option  =  options.get(option.getKey());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.get(option.getKey());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.get(option.getKey());	  Option    option    =    options.get(option);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
340	[BUG]  [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLabel()))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected  ==  null  ||  selected.equals(option.getLabel()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected  ==  null  ||  selected.equals(option.getLabel()))  {	  if(selected    ==    null    ||    selected.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
341	[BUG]  [BUGGY]  if(selected!=  null  ||  isSelected(option,  option.getOpt()))  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  isSelected(option,  option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  isSelected(option,  option.getOpt()))  {	  if(selected!=    null    ||    isSelected(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
342	[BUG]  [BUGGY]  if(selected!=  null  ||  isSelected(option.getKey()))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  isSelected(option.getKey()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  isSelected(option.getKey()))  {	  if(selected!=    null    ||    isSelected(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
343	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
344	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected!=  null  &&  selected.equals(option.getOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	31	9	replace
345	[BUG]  [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  &&  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  &&  selected.equals(option.getOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	31	9	replace
346	[BUG]  [BUGGY]  if(selection  ==  null  ||  selected.equals(option.getOpt()))  {  [CE]  cannot  find  symbol  selection  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selection  ==  null  ||  selected.equals(option.getOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selection  ==  null  ||  selected.equals(option.getOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  cannot  find  symbol  selection	31	None	replace
347	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	31	9	replace
348	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected!=    null    ||    selected.equals(option.getOpt()))    {    	compilable	  [FE]  NullPointerException  	31	9	replace
349	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt()  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt()  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt()	  	non-compiled	[CE]  ';'  expected	79	None	add
350	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(option!=  null)  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(option!=    null)    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(option!=  null)  {  this.selected  =  option.getOpt();  if(option  ==  null)  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
351	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getLongOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getLongOpt(),  option);  this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
352	[BUG]  [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getLongOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getLongOpt(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getLongOpt(),  option);  this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
353	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
354	[BUG]  [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getOpt(),  option);  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.optionMap.put(option.getOpt(),        option);        this.optionMap.put(option.getOpt(),    option);    this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);	  	compilable	  [FE]  NullPointerException  	53	9	add
355	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  options.getOptionMap();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  options.getOptionMap();	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
356	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getKey();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	this.selected  =  option.getKey();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    return;    }    	compilable	  [FE]  NullPointerException  	81	9	replace
357	[BUG]  [BUGGY]  this.selected  =  option.getKey();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [FE]  NullPointerException  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getKey();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getKey();  if(option!=  null)  {  String  selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getOpt()))  {  return;  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    return;    }    	compilable	  [FE]  NullPointerException  	81	9	replace
358	[BUG]  [BUGGY]  this.selected  =  option.getSelectedIndex();  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.selected  =  option.getSelectedIndex();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.selected  =  option.getSelectedIndex();	          this.selected    =    option.getOpt();    if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
359	[BUG]  [BUGGY]  this.optionMap.put(option.getKey(),  option);  This.optionMap.put(option.getOpt(),  option);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getKey(),  option);  This.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getKey(),  option);  This.optionMap.put(option.getOpt(),  option);	          this.optionMap.put(option.getOpt(),    option);    This.optionMap.put(option.getOpt(),    option);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
360	[BUG]  [BUGGY]  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getKey(),  option);  this.optionMap.put(option.getOpt(),  option);	          this.optionMap.put(option.getOpt(),    option);    This.optionMap.put(option.getOpt(),    option);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
361	[BUG]  [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelectedValue();  }  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelectedValue();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelectedValue();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
362	[BUG]  [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelectedString();  }  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelectedString();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getSelectedString();  }	          this.selected    =    option.getOpt();    if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
363	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	77	9	replace
364	[BUG]  [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  this.selected  =  option.getOpt();  }  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(option!=  null)  {  this.selected  =  option.getOpt();  if(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  this.selected  =  option.getOpt();  }	          this.selected    =    option.getOpt();    if(option!=    null)    {    String    selected    =    option.getOpt();    if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    this.selected    =    option.getOpt();    }    	compilable	  [FE]  NullPointerException  	77	9	replace
365	[BUG]  [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	If(selected  ==  null  ||  selected.equals(option.getLongOpt()))  {	  if(selected    ==    null    ||    selected.equals(option.getOpt()))    {    If(selected    ==    null    ||    selected.equals(option.getOpt()))    {    	non-compiled	[CE]  ';'  expected	59	None	replace
366	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
367	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(option!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
368	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.get  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.get  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    null)    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  null)  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.get	  	non-compiled	[CE]  ';'  expected	26	None	add
369	[BUG]  [BUGGY]  this.optionMap.put(option.getImplicitReturn(),  option);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  this.optionMap.put(option.getImplicitReturn(),  option);  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	this.optionMap.put(option.getImplicitReturn(),  option);	  this.optionMap.put(option.getLongOpt(),    option);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
370	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option.getKey());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.getOption(option.getKey());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.getOption(option.getKey());	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
371	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option.getLocation());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  Option  option  =  optionMap.getOption(option.getLocation());  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	Option  option  =  optionMap.getOption(option.getLocation());	  Option    option    =    optionMap.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
372	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  options.getOpt();  this.selected  =  option.getOpt();  [CE]  cannot  find  symbol  options  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  options.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  options.getOpt();  this.selected  =  option.getOpt();	  	non-compiled	[CE]  cannot  find  symbol  options	20	None	add
373	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  Option.getOpt();  this.selected  =  option.getOpt();  [CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    this.selected  =  option.getOpt();  this.selected  =  Option.getOpt();  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        this.selected    =    option.getOpt();    this.selected  =  Option.getOpt();  this.selected  =  option.getOpt();	  	non-compiled	[CE]  non-static  method  getOpt()  cannot  be  referenced  from  a  static  context	20	None	add
374	[BUG]  [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]  if(selected!=  null  ||  selected.equals(option.getOpt()))  {  if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {  [BUGGY]      {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	if(selected!=    null    ||    selected.equals(option.getOpt()))    {    if(selected!=  null  ||  selected.equals(option.getLongOpt()))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
375	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    if(this.selected  ==  null)  {  this.selected  =  option.getOpt();  if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
376	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	add	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	96	9	add
377	[BUG]  [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          this.selected    =    option.getOpt();    if(this.selected!=  option.getOpt())  {  this.selected  =  option.getOpt();  }  else  {  this.selected  =  option.getOpt();  }  this.selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                this.selected        =        option.getOpt();        if(this.selected!=    option.getOpt())    {    this.selected    =    option.getOpt();    }    else    {    this.selected    =    option.getOpt();    }    this.selected  =  option.getOpt();	  	compilable	  [FE]  NullPointerException  	96	9	add
378	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  char  selected  =  option.getOpt();  String  chosen  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]    NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  char  selected  =  option.getOpt();  String  chosen  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    char  selected  =  option.getOpt();  String  chosen  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	15	None	add
379	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]      NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  selected  =  option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	15	None	add
380	[BUG]  [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  String  chosen  =  Option.getOpt();  [CE]  variable  selected  is  already  defined  in  method  setSelected(Option)  [FE]        NullPointerException    [CONTEXT]      public  void  setSelected(Option  option)  throws  AlreadySelectedException  {      [BUGGY]          String    selected    =    option.getOpt();    String  chosen  =  option.getOpt();  String  selected  =  option.getOpt();  String  chosen  =  Option.getOpt();  [BUGGY]      if  (option  ==  null)  {  {  selected  =  null;  return;  }    if  (selected  ==  null  ||  selected.equals(option.getOpt()))  [CLASS]  OptionGroup  [METHOD]  setSelected  [RETURN_TYPE]  void  Option  option  [VARIABLES]  Option  option  boolean  required  String  selected  Map  optionMap  long  serialVersionUID  	projects/Cli27/src/java/org/apache/commons/cli/OptionGroup.java	0.5773502691896257	88	89	3	replace	                String        selected        =        option.getOpt();        String    chosen    =    option.getOpt();    String  selected  =  option.getOpt();  String  chosen  =  Option.getOpt();	  	non-compiled	[CE]  variable  selected  is  already  defined  in  method  setSelected(Option)	15	None	add
