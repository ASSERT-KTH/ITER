bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (str.startsWith("\"")) { [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { [BUGGY] if (str.startsWith("\""))  { [BUGGY] { str = str.substring(1, str.length()); } int length = str.length(); if (str.endsWith("\"")) { str = str.substring(0, length - 1); } return str; [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	65	66	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { [BUGGY] [BUGGY] if (str.startsWith("\""))  { { str = str.substring(1, str.length()); } int length = str.length(); if (str.endsWith("\"")) { str = str.substring(0, length - 1); } return str; [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	65	66	1	add	
3	[BUG] [BUGGY] str = str.substring(1, str.length()); [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { [BUGGY] str = str.substring(1, str.length()); [BUGGY] } int length = str.length(); if (str.endsWith("\"")) { str = str.substring(0, length - 1); } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	67	67	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { [BUGGY] [BUGGY] str = str.substring(1, str.length()); } int length = str.length(); if (str.endsWith("\"")) { str = str.substring(0, length - 1); } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	67	67	1	add	
5	[BUG] [BUGGY] int length = str.length(); [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { str = str.substring(1, str.length()); } [BUGGY] int length = str.length(); [BUGGY] if (str.endsWith("\"")) { str = str.substring(0, length - 1); } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	69	69	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { str = str.substring(1, str.length()); } [BUGGY] [BUGGY] int length = str.length(); if (str.endsWith("\"")) { str = str.substring(0, length - 1); } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	69	69	1	add	
7	[BUG] [BUGGY] if (str.endsWith("\"")) { [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { str = str.substring(1, str.length()); } int length = str.length(); [BUGGY] if (str.endsWith("\""))  { [BUGGY] { str = str.substring(0, length - 1); } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	70	71	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { str = str.substring(1, str.length()); } int length = str.length(); [BUGGY] [BUGGY] if (str.endsWith("\""))  { { str = str.substring(0, length - 1); } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	70	71	1	add	
9	[BUG] [BUGGY] str = str.substring(0, length - 1); [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { str = str.substring(1, str.length()); } int length = str.length(); if (str.endsWith("\"")) { [BUGGY] str = str.substring(0, length - 1); [BUGGY] } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	72	72	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingAndTrailingQuotes(String str) { if (str.startsWith("\"")) { str = str.substring(1, str.length()); } int length = str.length(); if (str.endsWith("\"")) { [BUGGY] [BUGGY] str = str.substring(0, length - 1); } return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	72	72	1	add	
11	[BUG] [BUGGY] return str; [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] if (str.startsWith("\"")) { str = str.substring(1, str.length()); } int length = str.length(); if (str.endsWith("\"")) { str = str.substring(0, length - 1); } [BUGGY] return str; [BUGGY] } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	75	75	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] if (str.startsWith("\"")) { str = str.substring(1, str.length()); } int length = str.length(); if (str.endsWith("\"")) { str = str.substring(0, length - 1); } [BUGGY] [BUGGY] return str; } [CLASS] Util [METHOD] stripLeadingAndTrailingQuotes [RETURN_TYPE] String  String str [VARIABLES] boolean String str int length  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	1.0	75	75	1	add	
14	[BUG] [BUGGY] if (str == null) { [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { [BUGGY] if (str == null)  { [BUGGY] { return null; } if (str.startsWith("--")) { return str.substring(2, str.length()); } else if (str.startsWith("-")) { return str.substring(1, str.length()); [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	38	39	1	replace	
15	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { [BUGGY] [BUGGY] if (str == null)  { { return null; } if (str.startsWith("--")) { return str.substring(2, str.length()); } else if (str.startsWith("-")) { return str.substring(1, str.length()); [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	38	39	1	add	
16	[BUG] [BUGGY] return null; [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { if (str == null) { [BUGGY] return null; [BUGGY] } if (str.startsWith("--")) { return str.substring(2, str.length()); } else if (str.startsWith("-")) { return str.substring(1, str.length()); }  [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	40	40	1	replace	
17	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { if (str == null) { [BUGGY] [BUGGY] return null; } if (str.startsWith("--")) { return str.substring(2, str.length()); } else if (str.startsWith("-")) { return str.substring(1, str.length()); }  [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	40	40	1	add	
18	[BUG] [BUGGY] if (str.startsWith("--")) { [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { if (str == null) { return null; } [BUGGY] if (str.startsWith("--"))  { [BUGGY] { return str.substring(2, str.length()); } else if (str.startsWith("-")) { return str.substring(1, str.length()); } return str; } [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	42	43	1	replace	
19	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { if (str == null) { return null; } [BUGGY] [BUGGY] if (str.startsWith("--"))  { { return str.substring(2, str.length()); } else if (str.startsWith("-")) { return str.substring(1, str.length()); } return str; } [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	42	43	1	add	
20	[BUG] [BUGGY] return str.substring(2, str.length()); [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { if (str == null) { return null; } if (str.startsWith("--")) { [BUGGY] return str.substring(2, str.length()); [BUGGY] } else if (str.startsWith("-")) { return str.substring(1, str.length()); } return str; } [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	44	44	1	replace	
21	[BUG] [BUGGY] [FE] ComparisonFailure testStripLeadingAndTrailingQuotes [CONTEXT] static String stripLeadingHyphens(String str) { if (str == null) { return null; } if (str.startsWith("--")) { [BUGGY] [BUGGY] return str.substring(2, str.length()); } else if (str.startsWith("-")) { return str.substring(1, str.length()); } return str; } [CLASS] Util [METHOD] stripLeadingHyphens [RETURN_TYPE] String  String str [VARIABLES] boolean String str  	projects/Cli29/src/java/org/apache/commons/cli/Util.java	0.0	44	44	1	add	
