compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(1, str.length()); }
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(2, str.length()); }
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { str.substring(0, str.length()); if(str.startsWith("-")) { return str.substring(1, str.length()); }
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { if(str.startsWith("-")) { return str.substring(1, str.length()); }
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { str.substring(0, str.length()); if(str.startsWith("-")) { return str.substring(2, str.length()); }
compilation error,69,add,[CE] ,,  if(str.endsWith(""")) { if(str.startsWith(""")) { str = str.substring(1, str.length()); }
compilation error,69,add,[CE] ,,  if(str.endsWith(""")) { if(str.endsWith(""")) { str = str.substring(1, str.length()); }
compilation error,75,replace,[CE] missing return statement,return str; , 
compilation error,38,add,[CE] variable str is already defined in method stripLeadingHyphens(String),,  String str = stripLeadingHyphens(str.substring(0, str.length()));
compilation error,38,add,[CE] not a statement,,  boolean null = str.startsWith("--")|| str.startsWith("--")) { return str.substring(0, str.length());
compilation error,38,add,[CE] variable str is already defined in method stripLeadingHyphens(String),,  String str = stripLeadingHyphens(str);
compilation error,38,add,[CE] not a statement,,  boolean null = str.startsWith("--")|| str.startsWith("--")) { return str.substring(1, str.length());
compilation error,38,add,[CE] not a statement,,  boolean null = str.startsWith("--")&& str.startsWith("--")) { return str.substring(0, str.length());
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(1, str.length()); }
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { if(str.startsWith("--")) { return str.substring(1, str.length()); }
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(0, str.length()); }
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { if(str.startsWith("--")) { return str.substring(0, str.length()); }
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { if(str.startsWith("--")) { return str.substring(2, str.length()); }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { str = str.substring(1, str.length()); }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { str = str.substring(1, length); }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.endsWith(""")) { str = str.substring(1, length); }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { str = str.substring(1, str.length); }
compilation error,44,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(1, str.length()); }
compilation error,44,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(0, str.length()); }
compilation error,44,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { if(str.startsWith("--")) { return str.substring(1, str.length()); }
compilation error,44,add,[CE] illegal start of expression,,  if(str.endsWith("-")) { if(str.startsWith("--")) { return str.substring(1, str.length()); }
compilation error,44,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(2, str.length()); }
compilation error,70,replace,[CE] ,if (str.endsWith("\"")) { ,if(str.endsWith(""")|| str.endsWith(""")) {
compilation error,70,replace,[CE] unclosed string literal,if (str.endsWith("\"")) { ,if(str.endsWith(""")) {
compilation error,70,replace,[CE] unclosed string literal,if (str.endsWith("\"")) { ,if(length > 0 && str.endsWith(""")) {
compilation error,70,replace,[CE] unclosed string literal,if (str.endsWith("\"")) { ,if(length > 0 && str.startsWith(""")) {
compilation error,65,replace,[CE] ,if (str.startsWith("\"")) { ,if(str.startsWith(""")|| str.endsWith(""")) {
compilation error,65,replace,[CE] unclosed string literal,if (str.startsWith("\"")) { ,if(str.startsWith(""")) {
compilation error,65,replace,[CE] illegal start of type,if (str.startsWith("\"")) { , 
compilation error,67,replace,[CE] cannot find symbol length,str = str.substring(1, str.length()); ,str = str.substring(1, str.length - 1);
increase failing tests,42,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,if (str.startsWith("--")) { ,if(str.startsWith("-")|| str.startsWith("--")) {
increase failing tests,44,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,return str.substring(2, str.length()); ,return str.substring(2, str.length() - 1);
increase failing tests,44,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,return str.substring(2, str.length()); ,return str.substring(2, str.length() + 1);
increase failing tests,44,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,return str.substring(2, str.length()); ,return str.substring(1, str.length());
compilation error,69,replace,[CE] cannot find symbol length,int length = str.length(); ,int length = str.length - 1;
compilation error,65,add,[CE] variable str is already defined in method stripLeadingAndTrailingQuotes(String),,  String str = str.substring(0, str.length() - 1);
increase failing tests,38,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,if (str == null) { ,if(str == null || str.startsWith("-")) {
increase failing tests,38,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,if (str == null) { ,if(str == null || str.startsWith("--")) {
compilation error,67,add,[CE] ,,  if(str.endsWith(""")) { if(str.startsWith(""")) { str = str.substring(1, str.length()); }
compilation error,67,add,[CE] ,,  if(str.endsWith(""")) { if(str.endsWith(""")) { str = str.substring(1, str.length()); }
compilation error,40,replace,[CE] non-static variable this cannot be referenced from a static context,return null; ,return this;
compilation error,40,replace,[CE] cannot find symbol ArrayUtils,return null; ,return ArrayUtils.stripLeadingHyphens(str);
compilation error,40,replace,[CE] cannot find symbol ArrayUtilities,return null; ,return ArrayUtilities.stripLeadingHyphens(str);
compilation error,40,replace,[CE] cannot find symbol ArrayUtils,return null; ,return ArrayUtils.stripLeadingHyphens(str, 0, str.length());
compilation error,42,replace,[CE] unclosed string literal,if (str.startsWith("--")) { ,if(str.startsWith("--")|| str.startsWith("--)) {
increase failing tests,42,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,if (str.startsWith("--")) { ,if(str.startsWith("-->")) {
compilation error,70,replace,[CE] ,if (str.endsWith("\"")) { ,if(str.endsWith(""")|| str.startsWith(""")) {
compilation error,70,replace,[CE] ,if (str.endsWith("\"")) { ,if(str.startsWith(""")|| str.endsWith(""")) {
compilation error,38,replace,[CE] bad operand types for binary operator '||',if (str == null) { ,if(str == null || stripLeadingHyphens(str)) {
compilation error,38,replace,[CE] method stripLeadingHyphens in class Util cannot be applied to given types;,if (str == null) { ,if(str == null || stripLeadingHyphens(str.charAt(0))) {
compilation error,38,replace,[CE] bad operand types for binary operator '||',if (str == null) { ,if(str == null || stripLeadingHyphens(str.substring(0, str.length()))) {
compilation error,65,add,[CE] variable str is already defined in method stripLeadingAndTrailingQuotes(String),,  String str = stripLeadingAndTrailingQuotes(str);
compilation error,65,add,[CE] ';' expected,,  boolean isLeadingAndTrailingQuotes(str);
compilation error,65,add,[CE] variable length is already defined in method stripLeadingAndTrailingQuotes(String),,  int length = str.length();
compilation error,40,add,[CE] cannot find symbol ArrayUtil,,  ArrayUtil.stripLeadingHyphens(str);
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(0, str.length()); }
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { if(str.startsWith("--")) { return str.substring(0, str.length()); }
increase failing tests,40,add, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,,  str = stripLeadingHyphens(str);
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(0, str.length() - 1); }
compilation error,65,replace,[CE] ,if (str.startsWith("\"")) { ,if(str.startsWith(""")|| str.startsWith(""")) {
compilation error,65,replace,[CE] unclosed string literal,if (str.startsWith("\"")) { ,if(str.startsWith("&"")) {
compilation error,70,add,[CE] ,,  if(length > 0) { if(str.startsWith(""")) { str = str.substring(length - 1); if(str.startsWith(""")) {
compilation error,70,add,[CE] ,,  if(length > 0) { if(str.startsWith(""")) { str = str.substring(length - 1); if(str.startsWith(""")) { return str; }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { length = str.substring(length - 1); }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { return str; }
increase failing tests,38,add, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,,  str = stripLeadingHyphens(str);
compilation error,38,add,[CE] cannot find symbol ArrayUtil,,  ArrayUtil.stripLeadingHyphens(str);
compilation error,38,add,[CE] ';' expected,,  boolean isLeadingHyphens(str);
compilation error,38,add,[CE] variable str is already defined in method stripLeadingHyphens(String),,  String str = str.substring(0, str.length() - 1);
increase failing tests,44,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,return str.substring(2, str.length()); ,return str.substring(0, str.length());
increase failing tests,42,add, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,,  str = stripLeadingHyphens(str);
increase failing tests,42,add, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,,  str = stripLeadingHyphens(str.substring(0, str.length()));
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("+")) { return str.substring(0, str.length()); }
compilation error,67,add,[CE] ,,  if(str.startsWith(""")) { if(str.startsWith(""")) { return str; }
compilation error,67,add,[CE] ,,  if(str.startsWith(""")) { if(str.startsWith(""")) { str = str.substring(0, str.length() - 1); }
compilation error,67,add,[CE] unclosed string literal,,  if(str.startsWith("")) { if(str.startsWith(""")) { return str; }
compilation error,67,add,[CE] unclosed string literal,,  if(str.startsWith("")) { if(str.startsWith(""")) { str = str.substring(0, str.length() - 1); }
compilation error,69,add,[CE] ,,  if(str.startsWith(""")) { if(str.startsWith(""")) { str = str.substring(1, str.length()); }
compilation error,69,add,[CE] ,,  if(str.startsWith(""")) { if(str.startsWith(""")) { str = str.substring(0, str.length() - 1); }
compilation error,69,add,[CE] ,,  if(str.startsWith(""")) { if(str.startsWith(""")) { str = str.substring(1, str.length() - 1); }
compilation error,69,add,[CE] ,,  if(str.startsWith(""")) { if(str.startsWith(""")) { return str; }
compilation error,44,add,[CE] unreachable statement,,  return str.substring(0, str.length() - 1);
compilation error,44,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(3, str.length()); }
increase failing tests,40,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,return null; ,return Util.stripLeadingHyphens(str);
compilation error,40,replace,[CE] cannot find symbol ArrayUtil,return null; ,return ArrayUtil.unwrapAndThrowAsHyphens(str);
compilation error,40,replace,[CE] cannot find symbol ArrayUtil,return null; ,return ArrayUtil.EMPTY_STRING_ARRAY;
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { str = str.substring(length - 1); }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { length = str.length(); }
compilation error,70,add,[CE] unclosed string literal,,  if(length > 0) { if(str.startsWith(""")) { str = str.substring(length + 1); }
compilation error,70,add,[CE] ,,  if(length > 0) { String stripLeadingAndTrailingQuotes(str); if(str.startsWith(""")) { str = str.substring(length - 1); }
increase failing tests,38,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,if (str == null) { ,if(str == null || str.charAt(0) == '-') {
increase failing tests,42,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,if (str.startsWith("--")) { ,if(str.startsWith("-1")) {
compilation error,40,replace,[CE] cannot find symbol ArrayUtil,return null; ,return ArrayUtil.stripLeadingHyphens(str);
compilation error,40,replace,[CE] cannot find symbol ArrayUtilities,return null; ,return ArrayUtilities.EMPTY_STRING_ARRAY;
compilation error,65,add,[CE] unclosed string literal,,  if(str == null) { if(str.startsWith(""")) { str = str.substring(0, str.length() - 1); }
compilation error,65,add,[CE] unclosed string literal,,  if(str == null) { if(str.startsWith(""")) { return str; }
compilation error,65,add,[CE] reached end of file while parsing,,  if(str == null) { if(str.length() > 0) { str = str.substring(0, str.length() - 1); }
compilation error,75,replace,[CE] ,return str; ,return(str == null? null : str.substring(length - 1),""");
compilation error,70,replace,[CE] unclosed string literal,if (str.endsWith("\"")) { ,if(str.startsWith(""")) {
compilation error,70,replace,[CE] ,if (str.endsWith("\"")) { ,if(str.endsWith(""")|| str.startsWith(""Q")) {
compilation error,40,add,[CE] illegal start of expression,,  if(str.length() == 0) { if(str.startsWith("-")) { return str.substring(0, str.length() - 1); }
compilation error,40,add,[CE] illegal start of expression,,  if(str.startsWith("-")) { if(str.startsWith("-")) { return str.substring(2, str.length()); }
compilation error,40,add,[CE] illegal start of expression,,  if(str.length() == 0) { if(str.startsWith("-")) { return str.substring(2, str.length()); }
compilation error,67,add,[CE] ,,  if(str.endsWith(""")) { if(str.startsWith(""+")) { return str; }
compilation error,67,add,[CE] ,,  if(str.endsWith(""")) { if(str.startsWith(""=")) { return str; }
compilation error,67,add,[CE] ,,  if(str.endsWith(""")) { throw new IllegalArgumentException(""); }
compilation error,38,add,[CE] variable str is already defined in method stripLeadingHyphens(String),,  String str = stripLeadingHyphens(getEmptyString());
compilation error,38,add,[CE] variable str is already defined in method stripLeadingHyphens(String),,  String str = stripLeadingHyphens(getWholeString());
compilation error,38,add,[CE] variable str is already defined in method stripLeadingHyphens(String),,  String str = stripLeadingHyphens(getScope(), str);
compilation error,38,add,[CE] cannot find symbol Validate,,  Validate.notNull(str);
compilation error,65,replace,[CE] unclosed string literal,if (str.startsWith("\"")) { ,if(str == null || str.startsWith(""")) {
compilation error,65,replace,[CE] ,if (str.startsWith("\"")) { ,if(str.startsWith(""")|| str.startsWith(""Zero")) {
compilation error,69,add,[CE] ,,  if(str.startsWith(""")) { if(str.endsWith(""")) { str = str.substring(0, str.length() - 1); }
compilation error,69,add,[CE] ,,  if(str.endsWith(""")) { if(str.startsWith(""+")) { str = str.substring(0, str.length() - 1); }
compilation error,69,add,[CE] ,,  if(str.startsWith(""")) { if(str.endsWith(""-1)) { str = str.substring(0, str.length() - 1); }
compilation error,69,add,[CE] ,,  if(str.startsWith(""")) { if(str.endsWith(""")) { str = str.substring(1, str.length() - 1); }
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(0, str.length() - 1); }
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(2, str.length()); }
compilation error,42,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("--")) { return str.substring(3, str.length()); }
increase failing tests,44,replace, [FE] ComparisonFailure testStripLeadingAndTrailingQuotes,return str.substring(2, str.length()); ,return str.substring(3, str.length());
compilation error,72,add,[CE] unclosed string literal,,  if(length > 0) { length = str.length(); if(str.endsWith(""")) { length = length - 1; }
compilation error,72,add,[CE] reached end of file while parsing,,  if(length > 0) { length = str.length(); if(length > 0) { length = length - 1; }
compilation error,72,add,[CE] unexpected type,,  length - 1 = str.length();
compilation error,44,add,[CE] illegal start of expression,,  if(str.startsWith("--")) { if(str.startsWith("+")) { return str.substring(1, str.length()); }
