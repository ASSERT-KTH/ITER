bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x0  =  computeObjectiveValue(x1);  break;  [CE]  not  a  statement  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeObjectiveValue(x1);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeObjectiveValue(x1);  break;	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  not  a  statement	9	None	replace
2	[BUG]  [BUGGY]  x0  =  computeRelativeValue(x0);  break;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeRelativeValue(x0);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeRelativeValue(x0);  break;	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  x0  =  computeObjectiveValue(x1,  atol);  break;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeObjectiveValue(x1,  atol);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeObjectiveValue(x1,  atol);  break;	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  x0  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeObjectiveValue(x1);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeObjectiveValue(x1);	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  fx  =  computeObjectiveValue(x0,  atol);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	fx  =  computeObjectiveValue(x0,  atol);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  fx  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  fx  =  computeFunctionValue(x0);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	fx  =  computeFunctionValue(x0);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  fx  =  computeObjectiveValue(x1);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	fx  =  computeObjectiveValue(x1);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  fx  =  computeRelativeValue(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  fx  =  computeRelativeValue(x0);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	fx  =  computeRelativeValue(x0);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  f0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  atol);  break;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  atol);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  atol);  break;	      f0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x1);  break;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x1);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x1);  break;	      f0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x0);  break;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeFunctionValue(x0);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeFunctionValue(x0);  break;	      f0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  f0  =  computeRelativeValue(x0);  break;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeRelativeValue(x0);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeRelativeValue(x0);  break;	      f0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeFunctionValue(x0,  atol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeFunctionValue(x0,  atol);	  f0    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x0,  fx);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeFunctionValue(x0,  fx);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeFunctionValue(x0,  fx);	  f0    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeFunctionValue(x0,  rtol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeFunctionValue(x0,  rtol);	  f0    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeFunctionValue(x1);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeFunctionValue(x1);	  f0    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  f0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (x1  +  x0  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  rtol,  atol);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  rtol,  atol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  rtol,  atol);	  f0    =    computeObjectiveValue(x0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(rtol,  x0);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(rtol,  x0);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(rtol,  x0);	  f0    =    computeObjectiveValue(x0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
23	[BUG]  [BUGGY]  x0  =  computeRelativeValue(x0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeRelativeValue(x0);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeRelativeValue(x0);	      x0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  x0  =  computeObjectiveValue(x1,  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeObjectiveValue(x1,  atol);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeObjectiveValue(x1,  atol);	      x0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  x0  =  computeObjectiveValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeObjectiveValue(x0,  atol);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeObjectiveValue(x0,  atol);	      x0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  atol,  rtol);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  atol,  rtol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  atol,  rtol);	  f0    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x1,  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x1,  atol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x1,  atol);	  f0    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  f0  =  computeRelativeValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeRelativeValue(x0,  atol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeRelativeValue(x0,  atol);	  f0    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  f0  =  computeRelativeValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeRelativeValue(x1);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeRelativeValue(x1);	  f0    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  f0  =  calculateRelativeValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  calculateRelativeValue(x0,  atol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  calculateRelativeValue(x0,  atol);	  f0    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  f0  =  computeRelativeValue(x0,  fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeRelativeValue(x0,  fx);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeRelativeValue(x0,  fx);	  f0    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
32	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  fx,  atol);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  fx,  atol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  fx,  atol);	  f0    =    computeObjectiveValue(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  f1,  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  f1,  atol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  f1,  atol);	  f0    =    computeObjectiveValue(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  f1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  f1);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  f1);	  f0    =    computeObjectiveValue(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  x0  =  0.5  *(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  0.5  *(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  0.5  *(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  x0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  if(x0  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  if(x0  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  if(f0!=  null)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0!=  null)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0!=  null)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(rtol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(rtol);	  f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  if(f1  ==  fx)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  ==  fx)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  ==  fx)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  if(f1  ==  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  ==  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  ==  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  if(f1  ==  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalErr  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  ==  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalErr  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  ==  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalErr	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  x0  =  computeRelativeValue(x1);  break;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeRelativeValue(x1);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeRelativeValue(x1);  break;	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  x0  =  computeRelativeValue(x1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeRelativeValue(x1);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeRelativeValue(x1);	      x0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObject  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObject  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObject	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObjectiveVal  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObjectiveVal  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  >=  fx)  {  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObjectiveVal	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  f0  =  0.5  *  (f0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (f0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (f0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  if(x0  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  if(x0  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  f0  =  computeRelativeValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeRelativeValue(x0,  rtol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeRelativeValue(x0,  rtol);	  f0    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  if(x  ==  x1)  {  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  ==  x1)  {  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  ==  x1)  {  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x1,  rtol);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x1,  rtol);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x1,  rtol);	  f0    =    computeObjectiveValue(x0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  if(f1  >=  fx)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  >=  fx)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  >=  fx)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  if(f1  >=  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  >=  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  >=  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
64	[BUG]  [BUGGY]  if(f1  >=  f1)  {  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f1  >=  f1)  {  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f1  >=  f1)  {  f0  =  0.5  *  (f1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  fx  =  computeObjectiveValue(x0,  rtol);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	fx  =  computeObjectiveValue(x0,  rtol);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  fx  =  computeFunctionObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  fx  =  computeFunctionObjectiveValue(x0);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	fx  =  computeFunctionObjectiveValue(x0);	      fx    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  f0  =  computeFunctionObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeFunctionObjectiveValue(x1);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeFunctionObjectiveValue(x1);	  f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
68	[BUG]  [BUGGY]  if(x0  ==  x1)  {  x0  =  computeObjectiveValue(x0);  break;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0  ==  x1)  {  x0  =  computeObjectiveValue(x0);  break;  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0  ==  x1)  {  x0  =  computeObjectiveValue(x0);  break;  }	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  if(x0!=  x1)  {  x0  =  computeObjectiveValue(x0);  break;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0!=  x1)  {  x0  =  computeObjectiveValue(x0);  break;  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0!=  x1)  {  x0  =  computeObjectiveValue(x0);  break;  }	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
70	[BUG]  [BUGGY]  if(x0  ==  x1)  {  x0  =  computeObjectiveValue(x0);  }  else  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0  ==  x1)  {  x0  =  computeObjectiveValue(x0);  }  else  {  break;  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0  ==  x1)  {  x0  =  computeObjectiveValue(x0);  }  else  {  break;  }	      x0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
71	[BUG]  [BUGGY]  if(x0  ==  x1)  {  x1  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0  ==  x1)  {  x1  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0  ==  x1)  {  x1  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  if(x0!=  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x0!=  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x0!=  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  x0  =  computeObjective(x1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeObjective(x1);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeObjective(x1);	      x0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  x0  =  computeIntegerValue(x0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  x0  =  computeIntegerValue(x0);  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	x0  =  computeIntegerValue(x0);	      x0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
75	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  f1,  fx);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  f1,  fx);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  f1,  fx);	  f0    =    computeObjectiveValue(x0,    fx);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
76	[BUG]  [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
78	[BUG]  [BUGGY]  if(f0!=  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0!=  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0!=  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  x0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    x0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  atol,  fx);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  atol,  fx);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  atol,  fx);	  f0    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x0,  f1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeFunctionValue(x0,  f1);  [BUGGY]    }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeFunctionValue(x0,  f1);	  f0    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
83	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  throw  new  MathInternalError();  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    throw    new    MathInternalError();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
84	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0,  fx);  break;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  computeObjectiveValue(x0,  fx);  break;  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  computeObjectiveValue(x0,  fx);  break;	      f0    =    computeObjectiveValue(x0);    break;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
85	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObjectiveValue(x0);  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  else  {  f0  =  computeObjectiveValue(x0);  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  f0  =  0.5  *(x0  +  fx  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *(x0  +  fx  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *(x0  +  fx  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    else    {    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  if(x  >=  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  >=  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  >=  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
89	[BUG]  [BUGGY]  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  ==  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
90	[BUG]  [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  <  0)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
91	[BUG]  [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(f0  ==  f1)  {  f0  =  0.5  *  (x0  +  f1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
92	[BUG]  [BUGGY]  if(x  >=  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));    [BUGGY]  if(x  >=  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  }  [BUGGY]    f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	189	189	1	replace	if(x  >=  x1)  {  f0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  }	      if(x    ==    x1)    {    f0    =    0.5    *    (x0    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
