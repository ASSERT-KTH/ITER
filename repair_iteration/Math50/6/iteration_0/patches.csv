bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  ftol  =  getRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]  final  double  ftol  =  getRelativeAccuracy();  [BUGGY]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	final  double  ftol  =  getRelativeAccuracy();	final  double  ftol  =  getFunctionValueAccuracy();  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy().doubleValue();  [BUGGY]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	final  double  ftol  =  getFunctionValueAccuracy().doubleValue();	final  double  ftol  =  getFunctionValueAccuracy();  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    [BUGGY]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	  	final  double  ftol  =  getFunctionValueAccuracy();  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]    final  double  fx  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  fx  =  getFunctionValueAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  fx  =  getFunctionValueAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
5	[BUG]  [BUGGY]    final  double  rtol  =  getRoleAccuracy();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  rtol  =  getRoleAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  rtol  =  getRoleAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
6	[BUG]  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  rtol  =  getRelativeAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  rtol  =  getRelativeAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
7	[BUG]  [BUGGY]    final  double  max  =  getMaximumValueAccuracy();  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  max  =  getMaximumValueAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  max  =  getMaximumValueAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
8	[BUG]  [BUGGY]    final  double  f1  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  f1  =  getFunctionValueAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  f1  =  getFunctionValueAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
9	[BUG]  [BUGGY]    final  double  f0  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  f0  =  getFunctionValueAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  f0  =  getFunctionValueAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
10	[BUG]  [BUGGY]    final  double  f  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  f  =  getFunctionValueAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  f  =  getFunctionValueAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
11	[BUG]  [BUGGY]    if(f1  ==  0.0)  {  return  x0;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    if(f1  ==  0.0)  {  return  x0;  }  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    if(f1  ==  0.0)  {  return  x0;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
12	[BUG]  [BUGGY]  final  double  ftol  =  getActualFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]  final  double  ftol  =  getActualFunctionValueAccuracy();  [BUGGY]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	final  double  ftol  =  getActualFunctionValueAccuracy();	final  double  ftol  =  getFunctionValueAccuracy();  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]    final  double  min  =  getMinimumValueAccuracy();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  min  =  getMinimumValueAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  min  =  getMinimumValueAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
14	[BUG]  [BUGGY]    final  double  min  =  getMinimumFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  return  x0;  }  if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);    [BUGGY]    final  double  min  =  getMinimumFunctionValueAccuracy();  [BUGGY]  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	149	149	1	replace	    final  double  min  =  getMinimumFunctionValueAccuracy();		non-compiled	[CE]  illegal  start  of  expression	12	None	add
