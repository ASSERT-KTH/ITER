bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x)/  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x)/  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x)/  1;	  final    double    f0    =    computeRelativeValue(x)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(rtol)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(rtol)+  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(rtol)+  1;	  final    double    f0    =    computeRelativeValue(x)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
3	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x)+  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x)+  2;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x)+  2;	  final    double    f0    =    computeRelativeValue(x)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
4	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(x,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunction(x,  rtol);	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunction(rtol);	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
6	[BUG]  [BUGGY]  final  double  x  =  x1  -((  f1  *  rtol  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  x1  -((  f1  *  rtol  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -((  f1  *  rtol  -  x0))  /(f1  -  f0));	  final    double    x    =    x1    -((    f1    *    (rtol    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
7	[BUG]  [BUGGY]  final  double  x  =  x1  -((  f1  *  (x2  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  x1  -((  f1  *  (x2  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -((  f1  *  (x2  -  x0))  /(f1  -  f0));	  final    double    x    =    x1    -((    f1    *    (rtol    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
8	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(x,  rtol,  inverted);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(x,  rtol  +  1);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  rtol,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(x,  rtol,  f1);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(x,  rtol,  inverted);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
12	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(x,  rtol  +  1);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
13	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(x,  rtol,  f1);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
14	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  /  rtol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  /  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy()  /  rtol);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  *  rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  *  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy()  *  rtol);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  rtol,  inverted);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  x);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  x);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  rtol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x,  rtol);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  final  double  f0  =  Math.max(x  *  relativeAccuracy,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(x  *  relativeAccuracy,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(x  *  relativeAccuracy,  inverted);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  x);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  x);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  x);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  getRelativeAccuracy(),  x);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(rtol,  getRelativeAccuracy(),  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  getRelativeAccuracy(),  x);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  rtol,  inverted);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  inverted);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  inverted);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  getRelativeAccuracy(),  inverted);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(rtol,  getRelativeAccuracy(),  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  getRelativeAccuracy(),  inverted);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  final  double  f0  =  Math.min(max,  getRelativeAccuracy(),  inverted);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(max,  getRelativeAccuracy(),  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(max,  getRelativeAccuracy(),  inverted);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    inverted);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  rtol  -((  f1  *  (x1  -  x0))/(f1  -  f0));	  final    double    fx    =    x0    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
28	[BUG]  [BUGGY]  final  double  fx  =  x0  -((  f1  *  (rtol  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x0  -((  f1  *  (rtol  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x0  -((  f1  *  (rtol  -  x0))/(f1  -  f0));	  final    double    fx    =    x0    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
29	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  (rtol  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  (rtol  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x1  -((  f1  *  (rtol  -  x0))/(f1  -  f0));	  final    double    fx    =    x0    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
30	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(rtol  -  f0));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(rtol  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x1  -((  f1  *  (x1  -  x0))/(rtol  -  f0));	  final    double    fx    =    x0    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
31	[BUG]  [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x0  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol  -((  f1  *  (x0  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  rtol  -((  f1  *  (x0  -  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    (x0    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
32	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  relativeAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  relativeAccuracy);	  final    double    f0    =    Math.min(relativeAccuracy,    x);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  x,  inverted);	  final    double    f0    =    Math.min(relativeAccuracy,    x);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  x  +  1);	  final    double    f0    =    Math.min(relativeAccuracy,    x);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  final  double  x  =  x0  -((  f1  *  rtol  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  x0  -((  f1  *  rtol  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -((  f1  *  rtol  -  x0))  /(f1  -  f0));	  final    double    x    =    x0    -((    f1    *    (rtol    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
36	[BUG]  [BUGGY]  final  double  fx  =  calculateFunctionValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunctionValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFunctionValue(x,  rtol);	  final    double    fx    =    calculateFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
37	[BUG]  [BUGGY]  final  double  fx  =  calculateFunctionValue(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunctionValue(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFunctionValue(rtol,  x);	  final    double    fx    =    calculateFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
38	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFunctionValue(x);	  final    double    fx    =    calculateFunctionValue(x);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
39	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  x);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  x);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFullValue(rtol);	  final    double    fx    =    getFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
41	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFullValue(x,  rtol);	  final    double    fx    =    getFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
42	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFullValue(rtol,  x);	  final    double    fx    =    getFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
43	[BUG]  [BUGGY]  final  double  x  =  getFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  getFullValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  getFullValue(rtol);	  final    double    fx    =    getFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
44	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFullValue(x);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
45	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFullValue(x,  rtol);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFullValue(x0,  rtol);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
47	[BUG]  [BUGGY]  final  double  fx  =  rtol.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  rtol.doubleValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  rtol.doubleValue();	  final    double    fx    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
48	[BUG]  [BUGGY]  final  double  fx  =  x.doubleValue()  *  rtol;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.doubleValue()  *  rtol;  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x.doubleValue()  *  rtol;	  final    double    fx    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
49	[BUG]  [BUGGY]  final  double  fx  =  x.doubleValue()  +  rtol;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.doubleValue()  +  rtol;  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x.doubleValue()  +  rtol;	  final    double    fx    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
50	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeRelativeValue(x,  rtol);	  final    double    fx    =    computeRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
51	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeValue(rtol);	  final    double    fx    =    computeRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
52	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateRelativeValue(x);	  final    double    fx    =    computeRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
53	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFullValue(x,  rtol,  inverted);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFullValue(rtol,  x);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFullValue(x,  rtol,  inverted);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  final  double  f0  =  calculateFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateFunctionValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  calculateFunctionValue(x);	  final    double    f0    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
57	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(rtol,  x  +  1);	  final    double    fx    =    computeObjectiveValue(x,    rtol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
58	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol  *  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol  *  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol  *  1);	  final    double    fx    =    computeObjectiveValue(x,    rtol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
59	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(x,  rtol  +  1);	  final    double    fx    =    computeObjectiveValue(x,    rtol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
60	[BUG]  [BUGGY]  final  double  f0  =  calculateFullValue(x);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateFullValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  calculateFullValue(x);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol,  inverted);	  final    double    f0    =    computeObjectiveValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(x,  rtol  +  1);	  final    double    f0    =    computeObjectiveValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  final  double  fx  =  getObjectiveValue(x);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getObjectiveValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getObjectiveValue(x);	  final    double    fx    =    getObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
64	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x0,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x0,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(x0,  rtol,  inverted);	  final    double    fx    =    computeFunctionValue(x0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
65	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(rtol,  x0);	  final    double    fx    =    computeFunctionValue(x0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
66	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x1,  rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x1,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(x1,  rtol);	  final    double    fx    =    computeFunctionValue(x0,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
67	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  inverted  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x,  inverted  +  1);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  relativeAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  relativeAccuracy  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x,  relativeAccuracy  +  1);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
69	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(rtol,  x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeRelativeValue(rtol,  x,  inverted);	  final    double    fx    =    computeRelativeValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
70	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateRelativeValue(x,  rtol);	  final    double    fx    =    computeRelativeValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
71	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeRelativeValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeRelativeValue(x0,  rtol);	  final    double    fx    =    computeRelativeValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
72	[BUG]  [BUGGY]  final  double  x  =  rtol  -((  f1  *  (x1  -  x0))/(x1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  rtol  -((  f1  *  (x1  -  x0))/(x1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  -((  f1  *  (x1  -  x0))/(x1  -  f0));	  final    double    x    =    x0    -((    f1    *    (x1    -    x0))    /(rtol    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
73	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x)/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x)/  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(x)/  1;	  final    double    f0    =    computeFunctionValue(x)-    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
74	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(rtol)-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(rtol)-  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(rtol)-  1;	  final    double    f0    =    computeFunctionValue(x)-    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
75	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  rtol)-  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(x,  rtol)-  1;	  final    double    f0    =    computeFunctionValue(x)-    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
76	[BUG]  [BUGGY]  final  double  fx  =  computeIntegerValue(x);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeIntegerValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeIntegerValue(x);	  final    double    fx    =    computeIntegerValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
77	[BUG]  [BUGGY]  final  double  fx  =  computeIntegerValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeIntegerValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeIntegerValue(x,  rtol);	  final    double    fx    =    computeIntegerValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
78	[BUG]  [BUGGY]  final  double  fx  =  computeFloatValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFloatValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFloatValue(rtol);	  final    double    fx    =    computeIntegerValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
79	[BUG]  [BUGGY]  final  double  fx  =  computeLongValue(rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeLongValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeLongValue(rtol);	  final    double    fx    =    computeIntegerValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
80	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  x);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x,  x);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
81	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
82	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeAccuracy().computeObjectiveValue(x,  rtol);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
83	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().compute(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().compute(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeAccuracy().compute(x,  rtol);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeAccuracy().computeFunctionValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeAccuracy().computeFunctionValue(x);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
85	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateRelativeValue(x0,  rtol);	  final    double    fx    =    calculateRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
86	[BUG]  [BUGGY]  final  double  x  =  rtol  *((  f1  *  (x2  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  rtol  *((  f1  *  (x2  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  *((  f1  *  (x2  -  x0))  /(f1  -  f0));	  final    double    x    =    rtol    *((    f1    *    (x1    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
87	[BUG]  [BUGGY]  final  double  x  =  x1  *((  f1  *  (x1  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  x1  *((  f1  *  (x1  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  *((  f1  *  (x1  -  x0))  /(f1  -  f0));	  final    double    x    =    rtol    *((    f1    *    (x1    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
88	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol,  x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(rtol,  x,  inverted);	  final    double    fx    =    computeObjectiveValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
89	[BUG]  [BUGGY]  final  double  fx  =  calculateObjectiveValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateObjectiveValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateObjectiveValue(x,  rtol);	  final    double    fx    =    computeObjectiveValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
90	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue(rtol,  x);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue(rtol,  x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeValue(rtol,  x);	  final    double    fx    =    getRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
91	[BUG]  [BUGGY]  final  double  x  =  getRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  getRelativeValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  getRelativeValue(rtol);	  final    double    fx    =    getRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
92	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x,  rtol,  inverted);	  final    double    f0    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x,  rtol  +  1);	  final    double    f0    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x,  rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x,  rtol,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x,  rtol,  f1);	  final    double    f0    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
95	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  inverted  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  inverted  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  inverted  +  1);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
96	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  relativeAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  relativeAccuracy  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  relativeAccuracy  +  1);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
97	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  max  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  max  +  1);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
98	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  1);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
99	[BUG]  [BUGGY]  final  double  f0  =  Math.min(rtol,  getRelativeAccuracy()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(rtol,  getRelativeAccuracy()  -  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(rtol,  getRelativeAccuracy()  -  1);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
100	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy()  +  1);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
101	[BUG]  [BUGGY]  final  double  fx  =  calculateFunctionValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunctionValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFunctionValue(x0,  rtol);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
102	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x,  inverted);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(rtol,  x,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(rtol,  x,  inverted);	  final    double    fx    =    computeFunctionValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
103	[BUG]  [BUGGY]  final  double  f0  =  computeObjective(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjective(x,  rtol,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjective(x,  rtol,  inverted);	  final    double    f0    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
104	[BUG]  [BUGGY]  final  double  f0  =  computeObjective(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjective(x,  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjective(x,  rtol  +  1);	  final    double    f0    =    computeObjective(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
105	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  inverted,  rtol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  inverted,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  inverted,  rtol);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
106	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  f0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  f0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  f0);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(x,  rtol,  inverted);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
108	[BUG]  [BUGGY]  final  double  fx  =  calculateFunctionValue(x,  rtol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFunctionValue(x,  rtol,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFunctionValue(x,  rtol,  inverted);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
109	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFunctionValue(x,  rtol);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
110	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFunctionValue(x0);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
111	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFunctionValue(x0,  rtol);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
112	[BUG]  [BUGGY]  final  double  fx  =  getFullValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFullValue();	  final    double    fx    =    getRelativeValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
113	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue().doubleValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeValue().doubleValue();	  final    double    fx    =    getRelativeValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
114	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFunctionValue();	  final    double    fx    =    getRelativeValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
115	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x  *  relativeAccuracy,  rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x  *  relativeAccuracy,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x  *  relativeAccuracy,  rtol);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  final  double  f0  =  Math.min(max,  getRelativeAccuracy()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(max,  getRelativeAccuracy()  -  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(max,  getRelativeAccuracy()  -  1);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
117	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  f1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  f1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(x,  rtol,  f1);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
118	[BUG]  [BUGGY]  final  double  f0  =  computeFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFallThrough(rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFallThrough(rtol);	  final    double    f0    =    computeFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
119	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
120	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFullValue(x,  rtol  +  1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFullValue(x,  rtol  +  1);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
121	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x)-  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  x)-  1;	  final    double    f0    =    Math.min(relativeAccuracy,    x);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
122	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
123	[BUG]  [BUGGY]  final  double  x  =  x1  -((  f1  *  (x1  -  x0))  /(f1  -  rtol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  x1  -((  f1  *  (x1  -  x0))  /(f1  -  rtol));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x1  -((  f1  *  (x1  -  x0))  /(f1  -  rtol));	  final    double    x    =    x1    -((    rtol    *    (x1    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
124	[BUG]  [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  totalAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.max(relativeAccuracy  *  x,  totalAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.max(relativeAccuracy  *  x,  totalAccuracy);	  final    double    f0    =    Math.max(relativeAccuracy    *    x,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
125	[BUG]  [BUGGY]  final  double  x  =  f0  *((  f1  *  (x1  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  f0  *((  f1  *  (x1  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  *((  f1  *  (x1  -  x0))  /(f1  -  f0));	  final    double    x    =    rtol    *((    f1    *    (x1    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
126	[BUG]  [BUGGY]  final  double  x  =  rtol  *((  f1  *  (f1  -  f0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  rtol  *((  f1  *  (f1  -  f0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  rtol  *((  f1  *  (f1  -  f0))  /(f1  -  f0));	  final    double    x    =    rtol    *((    f1    *    (x1    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
127	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  false);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  false);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  false);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
128	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  0,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  0,  inverted);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  0,  inverted);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
129	[BUG]  [BUGGY]  final  double  x  =  x0  -((  f1  *  (x2  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  x0  -((  f1  *  (x2  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  -((  f1  *  (x2  -  x0))  /(f1  -  f0));	  final    double    x    =    x0    -((    f1    *    (rtol    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
130	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x)+  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(x)+  1;	  final    double    f0    =    computeRelativeValue(x)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
131	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x)-  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x)-  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(x)-  1;	  final    double    f0    =    computeFunctionValue(x)-    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
132	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
133	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.class);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.class);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.class);	  final    double    f0    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
134	[BUG]  [BUGGY]  final  double  fx  =  getRelativeFunctionValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeFunctionValue();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeFunctionValue();	  final    double    fx    =    getRelativeValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
135	[BUG]  [BUGGY]  final  double  fx  =  x.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x.doubleValue()  +  1;  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x.doubleValue()  +  1;	  final    double    fx    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
136	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  totalAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  totalAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  totalAccuracy);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
137	[BUG]  [BUGGY]  final  double  fx  =  calculateFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFallThrough(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFallThrough(rtol);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
138	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x,  rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x,  rtol);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  x,  rtol);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
139	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  f1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  f1);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
140	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x  *  relativeAccuracy,  inverted);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x  *  relativeAccuracy,  inverted);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x  *  relativeAccuracy,  inverted);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
141	[BUG]  [BUGGY]  final  double  fx  =  getFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFallThrough(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFallThrough(rtol);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  final  double  fx  =  getFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFunctionValue(x1);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFunctionValue(x1);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
143	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  x1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  -  x1);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
144	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x  *  relativeAccuracy,  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x  *  relativeAccuracy,  max);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x  *  relativeAccuracy,  max);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    max);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
145	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  max  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  max  -  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  max  -  1);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    max);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
146	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(x  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(x  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunction(x  +  1);	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
147	[BUG]  [BUGGY]  final  double  fx  =  computeFloatValue(x);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFloatValue(x);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFloatValue(x);	  final    double    fx    =    computeIntegerValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
148	[BUG]  [BUGGY]  final  double  x  =  f0  -((  f1  *  (x1  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  f0  -((  f1  *  (x1  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  f0  -((  f1  *  (x1  -  x0))  /(f1  -  f0));	  final    double    x    =    rtol    -((    f1    *    (x1    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
149	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  getRelativeAccuracy()  +  1);	  final    double    f0    =    Math.min(relativeAccuracy,    getRelativeAccuracy());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
150	[BUG]  [BUGGY]  final  double  fx  =  getFullValue(x0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getFullValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getFullValue(x0);	  final    double    fx    =    getFullValue(x);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
151	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy  *  rtol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy  *  rtol  +  1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy  *  rtol  +  1);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
152	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  f1  *  (f1  -  f0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  f1  *  (f1  -  f0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x1  -((  f1  *  (f1  -  f0))/(f1  -  f0));	  final    double    fx    =    x0    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
153	[BUG]  [BUGGY]  final  double  fx  =  getRelativeFx();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeFx();  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeFx();	  final    double    fx    =    getRelativeValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
154	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x1,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy  *  x1,  absoluteAccuracy);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy  *  x1,  absoluteAccuracy);	  final    double    f0    =    Math.min(relativeAccuracy    *    x,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
155	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x,  Object.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x,  Object.class);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x,  Object.class);	  final    double    f0    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
156	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.DEFAULT);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.DEFAULT);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x,  ObjectiveValue.DEFAULT);	  final    double    f0    =    computeRelativeValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
157	[BUG]  [BUGGY]  final  double  rtol  =  calculateFullValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  calculateFullValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  calculateFullValue(rtol);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
158	[BUG]  [BUGGY]  final  double  fx  =  calculateFullValue(x0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateFullValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateFullValue(x0);	  final    double    fx    =    calculateFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
159	[BUG]  [BUGGY]  final  double  f0  =  computeFunction(x)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunction(x)-  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunction(x)-  1;	  final    double    f0    =    computeFunction(x);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
160	[BUG]  [BUGGY]  final  double  fx  =  x1  -((  rtol  *  (x1  -  x0))/(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  x1  -((  rtol  *  (x1  -  x0))/(f1  -  f0));  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  x1  -((  rtol  *  (x1  -  x0))/(f1  -  f0));	  final    double    fx    =    x1    -((    f1    *    (x1    -    x0))    /(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
161	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getRelativeAccuracy().computeObjectiveValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  getRelativeAccuracy().computeObjectiveValue(rtol);	  final    double    fx    =    getRelativeAccuracy().computeObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
162	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy())/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy())/  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy())/  1;	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
163	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x0,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x0,  rtol);	  final    double    fx    =    computeObjectiveValue(rtol,    x);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
164	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x,  Object.class);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFunctionValue(x,  Object.class);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFunctionValue(x,  Object.class);	  final    double    f0    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
165	[BUG]  [BUGGY]  final  double  rtol  =  getObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getObjectiveValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  getObjectiveValue(rtol);	  final    double    fx    =    getObjectiveValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
166	[BUG]  [BUGGY]  final  double  rtol  =  calculateRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  calculateRelativeValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  calculateRelativeValue(rtol);	  final    double    fx    =    calculateRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
167	[BUG]  [BUGGY]  final  double  fx  =  calculateRelativeValue(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  calculateRelativeValue(x0);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  calculateRelativeValue(x0);	  final    double    fx    =    calculateRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
168	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x)/  2.0;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  x)/  2.0;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  x)/  2.0;	  final    double    f0    =    Math.min(relativeAccuracy,    x);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
169	[BUG]  [BUGGY]  final  double  rtol  =  getFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  getFunctionValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  getFunctionValue(rtol);	  final    double    fx    =    getFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
170	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  DEFAULT_ABSOLUTE_ACCURACY);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
171	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  fx);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy(),  fx);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
172	[BUG]  [BUGGY]  final  double  rtol  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  x);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  Math.min(relativeAccuracy,  getRelativeAccuracy(),  x);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy(),    rtol);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
173	[BUG]  [BUGGY]  final  double  fx  =  getRelativeValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  getRelativeValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  getRelativeValue(x,  rtol);	  final    double    fx    =    getRelativeValue(x);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
174	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  f1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeObjectiveValue(x,  f1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeObjectiveValue(x,  f1);	  final    double    f0    =    computeObjectiveValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
175	[BUG]  [BUGGY]  final  double  rtol  =  calculateFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  calculateFunctionValue(rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  calculateFunctionValue(rtol);	  final    double    fx    =    calculateFunctionValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
176	[BUG]  [BUGGY]  final  double  f0  =  calculateRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  calculateRelativeValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  calculateRelativeValue(x);	  final    double    f0    =    computeRelativeValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
177	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  fx);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  fx);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  fx);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
178	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  inverted,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol,  inverted,  max);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol,  inverted,  max);	  final    double    fx    =    computeObjectiveValue(x,    rtol,    inverted);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
179	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  Object.class);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  Object.class);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(x,  Object.class);	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
180	[BUG]  [BUGGY]  final  double  f0  =  computeFullValue(x,  Object.valueOf(x));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeFullValue(x,  Object.valueOf(x));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeFullValue(x,  Object.valueOf(x));	  final    double    f0    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
181	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  fx  =  computeFunctionValue(x,  rtol,  fx);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(x,  rtol,  fx);	  final    double    fx    =    computeFunctionValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
182	[BUG]  [BUGGY]  final  double  f0  =  computeRelativeValue(x)-  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  computeRelativeValue(x)-  1;  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  computeRelativeValue(x)-  1;	  final    double    f0    =    computeRelativeValue(x)+    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
183	[BUG]  [BUGGY]  final  double  x  =  x0  *((  f1  *  (x1  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  x  =  x0  *((  f1  *  (x1  -  x0))  /(f1  -  f0));  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  x  =  x0  *((  f1  *  (x1  -  x0))  /(f1  -  f0));	  final    double    x    =    rtol    *((    f1    *    (x1    -    x0))/(f1    -    f0));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
184	[BUG]  [BUGGY]  final  double  f0  =  getFullValue(x);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  getFullValue(x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  getFullValue(x);	  final    double    f0    =    computeFullValue(rtol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
185	[BUG]  [BUGGY]  final  double  rtol  =  computeFullValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  rtol  =  computeFullValue(x,  rtol);  [BUGGY]          if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  rtol  =  computeFullValue(x,  rtol);	  final    double    fx    =    computeFullValue(x,    rtol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
186	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  x1);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  x1);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
187	[BUG]  [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  x);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));      [BUGGY]  final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  x);  [BUGGY]      final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  f0  =  Math.min(x,  getRelativeAccuracy()  -  x);	  final    double    f0    =    Math.min(x,    getRelativeAccuracy()    -    rtol);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
