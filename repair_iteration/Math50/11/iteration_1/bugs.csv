bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(rtol);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(rtol);	final  double  fx  =  computeObjectiveValue(x);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeFunctionValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(x);	final  double  fx  =  computeObjectiveValue(x);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  final  double  fx  =  computeFullValue(x);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeFullValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFullValue(x);	final  double  fx  =  computeObjectiveValue(x);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeFunctionValue(rtol);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeFunctionValue(rtol);	final  double  fx  =  computeObjectiveValue(x);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	  	final  double  fx  =  computeObjectiveValue(x);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]    final  double  f0  =  computeObjectiveValue(x);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  computeObjectiveValue(x);  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  computeObjectiveValue(x);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
7	[BUG]  [BUGGY]    final  double  x  =  x1  -((  f1  *  (x1  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  x  =  x1  -((  f1  *  (x1  -  x0))  /(f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  x  =  x1  -((  f1  *  (x1  -  x0))  /(f1  -  f0));		non-compiled	[CE]  illegal  start  of  expression	22	None	add
8	[BUG]  [BUGGY]    final  double  x  =  x0  -((  f1  *  (x1  -  x0))  /(f1  -  f0));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  x  =  x0  -((  f1  *  (x1  -  x0))  /(f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  x  =  x0  -((  f1  *  (x1  -  x0))  /(f1  -  f0));		non-compiled	[CE]  illegal  start  of  expression	22	None	add
9	[BUG]  [BUGGY]  final  double  fx  =  computeRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeRelativeValue(x);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeRelativeValue(x);	final  double  fx  =  computeObjectiveValue(x);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
10	[BUG]  [BUGGY]    final  double  f0  =  computeFullValue(x);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  computeFullValue(x);  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  computeFullValue(x);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
11	[BUG]  [BUGGY]    final  double  f0  =  computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  computeFunctionValue(x);  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  computeFunctionValue(x);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
12	[BUG]  [BUGGY]    final  double  f0  =  computeRelativeValue(x);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  computeRelativeValue(x);  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  computeRelativeValue(x);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
13	[BUG]  [BUGGY]    final  double  f0  =  computeObjective(x);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  computeObjective(x);  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  computeObjective(x);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
14	[BUG]  [BUGGY]    final  double  f0  =  Math.max(relativeAccuracy  *  x,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  Math.max(relativeAccuracy  *  x,  absoluteAccuracy);  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  Math.max(relativeAccuracy  *  x,  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
15	[BUG]  [BUGGY]    final  double  f0  =  Math.min(x,  getRelativeAccuracy());  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  Math.min(x,  getRelativeAccuracy());  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  Math.min(x,  getRelativeAccuracy());		non-compiled	[CE]  illegal  start  of  expression	22	None	add
16	[BUG]  [BUGGY]    final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]    final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy);  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	    final  double  f0  =  Math.min(relativeAccuracy  *  x,  absoluteAccuracy);		non-compiled	[CE]  illegal  start  of  expression	22	None	add
17	[BUG]  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x,  rtol);  [BUGGY]      if  (fx  ==  0.0)  {  return  x;  }  if  (f1  *  fx  <  0)  {  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	161	161	1	replace	final  double  fx  =  computeObjectiveValue(x,  rtol);	final  double  fx  =  computeObjectiveValue(x);  	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
