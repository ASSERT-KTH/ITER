bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ILLINOIS  =  method.getMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getMillis()  +  1;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getMillis()  +  1;	      ILLINOIS    =    method.getMillis();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy);	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  +  1;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions()  +  1;	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length);	  System.arraycopy(method,    0,    this.allowed,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.length  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.length  -  1);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.length  -  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  method.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  method.length);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method,  0,  method.length);	  System.arraycopy(method,    0,    this.allowed,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialValue()  +  1;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  +  1;	      ILLINOIS    =    method.getInitialValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialState();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialState();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialState();	      ILLINOIS    =    method.getInitialValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  method.doubleValue());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method,  0,  method.doubleValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  this.allowed.doubleValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  this.allowed.doubleValue());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method,  0,  this.allowed.doubleValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  ILLINOIS  =  method.getMean()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getMean()  +  1;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getMean()  +  1;	      ILLINOIS    =    method.getMean();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  ILLINOIS  =  method.getSecan();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getSecan();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getSecan();	      ILLINOIS    =    method.getMean();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getValue()  +  1);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getValue()  +  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getValue()  -  1);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getValue()  -  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions();	      ILLINOIS    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolver();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolver();	      ILLINOIS    =    method.getAllowSolver();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolver();	      ILLINOIS    =    method.getAllowSolver();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions().size()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions().size()  +  1;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions().size()  +  1;	      ILLINOIS    =    method.getAllowedSolutions().size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions().size()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions().size()  -  1;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions().size()  -  1;	      ILLINOIS    =    method.getAllowedSolutions().size();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSecantSolution();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingSecantSolution();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSecantSolution();	      ILLINOIS    =    method.getInitializingSolution();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSingleSolution();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingSingleSolution();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSingleSolution();	      ILLINOIS    =    method.getInitializingSolution();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask());	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask()  -  1);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask()  -  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecants();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSecants();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecants();	      ILLINOIS    =    method.getAllowSecants();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSeconds()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingSeconds()  +  1;  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSeconds()  +  1;	  ILLINOIS    =    method.getInitializingSeconds();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed);	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.doubleValue()  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.doubleValue()  -  1);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.doubleValue()  -  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.length);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.length);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.length);	  System.arraycopy(method,    0,    this.allowed,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolutions(this.allowed);	      ILLINOIS    =    method.getAllowSolutions();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
35	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed);	      ILLINOIS    =    method.getAllowSolver();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingRegularSolution();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingRegularSolution();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingRegularSolution();	      ILLINOIS    =    method.getInitializingSolution();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingReGULA();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingReGULA();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingReGULA();	      ILLINOIS    =    method.getInitializingSolution();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkNotNull(method);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  Preconditions.checkNotNull(method);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	Preconditions.checkNotNull(method);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSolutions();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingSolutions();  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSolutions();	  ILLINOIS    =    method.getInitializingSeconds();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  ILLINOIS  =  method.getSecond();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getSecond();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getSecond();	      ILLINOIS    =    method.getMean();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);	      ILLINOIS    =    method.getAllowSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  ILLINOIS  =  method.getParent();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getParent();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getParent();	      ILLINOIS    =    method.getMillis();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getMask());	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
49	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSecond();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingSecond();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSecond();	      ILLINOIS    =    method.getInitializingSolution();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSingleton();  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getInitializingSingleton();  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSingleton();	      ILLINOIS    =    method.getInitializingSolution();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue());  [BUGGY]      [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
52	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY);	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;	      ILLINOIS    =    method.getAllowedSolutions();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY);	      ILLINOIS    =    method.getAllowSolver();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY;	      ILLINOIS    =    method.getAllowSecants();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
56	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]    protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;    [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]    }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY);	      ILLINOIS    =    method.getAllowSecants();    	non-compiled	[CE]  ';'  expected	14	None	replace
