bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSecantSolution(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSecantSolution(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSecantSolution(absoluteAccuracy);	  ILLINOIS    =    method.getInitializingSecantSolution();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
2	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
3	[BUG]  [BUGGY]  ILLINOIS  =  this.allowed.getAllowSolver(method);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  this.allowed.getAllowSolver(method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  this.allowed.getAllowSolver(method);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
4	[BUG]  [BUGGY]  ILLINOIS  =  method.getMillis()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getMillis()  *  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getMillis()  *  1;	  ILLINOIS    =    method.getMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.getValue());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.getValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.getValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.getValue()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
6	[BUG]  [BUGGY]  ILLINOIS  =  method.getSecan()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getSecan()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getSecan()  +  1;	  ILLINOIS    =    method.getSecan();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecants()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecants()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecants()  +  1;	  ILLINOIS    =    method.getAllowedSecants();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(reg,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(reg,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(reg,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(reGULA_FALSI,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(reGULA_FALSI,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(reGULA_FALSI,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolutions(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
12	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolutions(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolutions(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolutions(absoluteAccuracy);	  ILLINOIS    =    method.getAllowSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
13	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecants(),    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ';'  expected	56	None	replace
14	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  absoluteAccuracy);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants(),  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecants(),    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ';'  expected	56	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  absoluteAccuracy);	  System.arraycopy(method,    0,    this.allowed,    1,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue()  +  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getValue()  +  1);	  System.arraycopy(method,    0,    this.allowed,    1,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
17	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  1;	  ILLINOIS    =    method.getAllowedSolutions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(DEFAULT_ABSOLUTE_ACCURACY,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(DEFAULT_ABSOLUTE_ACCURACY,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(DEFAULT_ABSOLUTE_ACCURACY,  0,  this.allowed,  0,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
20	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
21	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  absoluteAccuracy);	  System.arraycopy(method,    0,    this.allowed,    1,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.getMask());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.getMask());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.getMask());	  System.arraycopy(method,    0,    this.allowed,    1,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
24	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
25	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingReGULA(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingReGULA(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingReGULA(absoluteAccuracy);	  ILLINOIS    =    method.getInitializingReGULA();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
26	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingReGULA_FALSI();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingReGULA_FALSI();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingReGULA_FALSI();	  ILLINOIS    =    method.getInitializingReGULA();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
27	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSecantSolutions();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSecantSolutions();  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSecantSolutions();	  ILLINOIS    =    method.getInitializingSolutions();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
28	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
29	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(absoluteAccuracy);	  ILLINOIS    =    method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
30	[BUG]  [BUGGY]  ILLINOIS  =  method.getName();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getName();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getName();	  ILLINOIS    =    method.getParent();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
31	[BUG]  [BUGGY]  ILLINOIS  =  method.getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getNext();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getNext();	  ILLINOIS    =    method.getParent();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
32	[BUG]  [BUGGY]  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
33	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ')'  expected	41	None	replace
34	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue()  -  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue()  -  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.doubleValue()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
36	[BUG]  [BUGGY]  ILLINOIS  =  method.getSean()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getSean()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getSean()  +  1;	  ILLINOIS    =    method.getMean()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.method,  0,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.method,  0,  method.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.method,  0,  method.doubleValue());	  System.arraycopy(this.allowed,    0,    method,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.exceptions,  0,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.exceptions,  0,  method.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.exceptions,  0,  method.doubleValue());	  System.arraycopy(this.allowed,    0,    method,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue()  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue()  +  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.doubleValue()  +  1);	  System.arraycopy(this.allowed,    0,    this.allowed,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  this.allowed.doubleValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  this.allowed.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  this.allowed.doubleValue());	  System.arraycopy(this.allowed,    0,    method,    0,    this.allowed.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  this.allowed.doubleValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  this.allowed.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  1,  this.allowed.doubleValue());	  System.arraycopy(this.allowed,    0,    method,    0,    this.allowed.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
44	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
45	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSecond()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSecond()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSecond()  +  1;	  ILLINOIS    =    method.getInitializingSecond();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  method.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  method.getValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method,  0,  method.getValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.getValue()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  ILLINOIS  =  methods.getAllowedSolutions().size();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  methods.getAllowedSolutions().size();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  methods.getAllowedSolutions().size();	  ILLINOIS    =    method.getAllowedSolutions().size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
48	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;	  ILLINOIS    =    method.getAllowedSolutions()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
49	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions()  /  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getAllowedSolutions()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
50	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSecant();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSecant();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSecant();	  ILLINOIS    =    method.getInitializingSingleton();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
51	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingStatement();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingStatement();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingStatement();	  ILLINOIS    =    method.getInitializingSingleton();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  ILLINOIS  =  method.getSecond()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getSecond()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getSecond()  +  1;	  ILLINOIS    =    method.getSecond();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.method,  0,  method.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.method,  0,  method.length);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.method,  0,  method.length);	  System.arraycopy(this.allowed,    0,    method,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  this.method.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  this.method.length);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method,  0,  this.method.length);	  System.arraycopy(this.allowed,    0,    method,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.length);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.length);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.length);	  System.arraycopy(method,    0,    this.allowed,    1,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.length  -  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.length  -  1);	  System.arraycopy(method,    0,    this.allowed,    1,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length  -  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length  -  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method.length  -  1,  this.allowed);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  method.length  -  1,  this.allowed);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method.length  -  1,  this.allowed);	  System.arraycopy(method,    0,    this.allowed,    0,    method.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  1;	  ILLINOIS    =    method.getInitialValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecants()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants()  /  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getAllowSecants()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
61	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;	  ILLINOIS    =    method.getAllowSecants()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
63	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSeconds()  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSeconds()  *  1;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSeconds()  *  1;	  ILLINOIS    =    method.getInitializingSeconds()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length  +  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.length  +  1);	  System.arraycopy(this.allowed,    0,    this.allowed,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue()  -  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue()  -  1);	  System.arraycopy(this.allowed,    0,    this.allowed,    0,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue()  +  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getValue()  +  1);	  System.arraycopy(this.allowed,    0,    this.allowed,    0,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
67	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialState()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialState()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialState()  +  1;	  ILLINOIS    =    method.getInitialState();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkNotNull(this.allowed);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Preconditions.checkNotNull(this.allowed);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	Preconditions.checkNotNull(this.allowed);	  Preconditions.checkNotNull(method);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(method!=  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Preconditions.checkState(method!=  null);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	Preconditions.checkState(method!=  null);	  Preconditions.checkNotNull(method);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkNotNull(allowed);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Preconditions.checkNotNull(allowed);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	Preconditions.checkNotNull(allowed);	  Preconditions.checkNotNull(method);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask()  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask()  -  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask()  -  1);	  System.arraycopy(this.allowed,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
72	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolver(absoluteAccuracy);	  ILLINOIS    =    method.getAllowSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
73	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolver();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecantSolver();	  ILLINOIS    =    method.getAllowSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.allowed    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
75	[BUG]  [BUGGY]  final  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  final  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	final  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.allowed    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
76	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.allowed    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  1,  method.doubleValue());	  System.arraycopy(method,    0,    this.allowed,    1,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue(),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue(),  absoluteAccuracy);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue(),  absoluteAccuracy);	  System.arraycopy(method,    0,    this.allowed,    1,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
79	[BUG]  [BUGGY]  ILLINOIS  =  Method.getAllowedSolutions().size();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  Method.getAllowedSolutions().size();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  Method.getAllowedSolutions().size();	  ILLINOIS    =    method.getAllowedSolutions().size()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
80	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions()  +  1;	  ILLINOIS    =    method.getAllowedSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
81	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
82	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolver(absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
83	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
84	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  absoluteAccuracy;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
85	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy,  allowed);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy,  allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy,  allowed);	  ILLINOIS    =    method.getAllowedSolutions(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
86	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSolutions(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(allowed);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(allowed);	  ILLINOIS    =    method.getAllowedSolutions(absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
89	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingReGULASolution();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingReGULASolution();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingReGULASolution();	  ILLINOIS    =    method.getInitializingRegularSolution();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
90	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
91	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  false);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  false);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
92	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.absoluteAccuracy);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.absoluteAccuracy);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
93	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  false);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  false);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
94	[BUG]  [BUGGY]  ILLINOIS  =  method.getSecondMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getSecondMillis()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getSecondMillis()  +  1;	  ILLINOIS    =    method.getMillis()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  [0];  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  [0];  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions()  [0];	  ILLINOIS    =    method.getAllowedSolutions()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
96	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.allowed    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  ';'  expected	43	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  0,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  0,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  0,  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(regap,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(regap,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(regap,  0,  this.allowed,  0,  method.getMask(),  REGULA_FALSI);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
100	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(this.allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolver(this.allowed);	  ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
101	[BUG]  [BUGGY]  ILLINOIS  =  method.getLeastSuperclassSolver();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getLeastSuperclassSolver();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getLeastSuperclassSolver();	  ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  REGULA_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getMask(),  REGULA_FALSI);	  System.arraycopy(method,    0,    this.allowed,    1,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
103	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSolver();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSolver();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSolver();	  ILLINOIS    =    method.getInitializingSingleton();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
104	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSolleton();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSolleton();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSolleton();	  ILLINOIS    =    method.getInitializingSingleton();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.length  -  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.length  -  2);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.length  -  2);	  System.arraycopy(method,    0,    this.allowed,    0,    method.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  ILLINOIS    =    method.getAllowedSolutions()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
107	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ')'  expected	41	None	replace
108	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ')'  expected	41	None	replace
109	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    1,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  REGULA_FALSI);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.getValue(),  REGULA_FALSI);	  System.arraycopy(method,    0,    this.allowed,    1,    method.getValue());    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
112	[BUG]  [BUGGY]  ILLINOIS  =  method.getallowedSolutions().size();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getallowedSolutions().size();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getallowedSolutions().size();	  ILLINOIS    =    method.getAllowedSolutions().size()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  this.method.doubleValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  method,  0,  this.method.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method,  0,  this.method.doubleValue());	  System.arraycopy(this.allowed,    0,    method,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
114	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSolutions()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSolutions()  +  1;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSolutions()  +  1;	  ILLINOIS    =    method.getInitializingSolutions();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
115	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions().size()  *  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions().size()  *  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions().size()  *  1;	  ILLINOIS    =    method.getAllowedSolutions().size()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
116	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolutions(this.allowed,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
117	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  false);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  false);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolutions(this.allowed,  false);	  ILLINOIS    =    method.getAllowSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.doubleValue(),  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    1,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
119	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(this.allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolver(this.allowed);	  ILLINOIS    =    method.getAllowSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  absoluteAccuracy,  DEFAULT_ABSOLUTE_ACCURACY);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
121	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
122	[BUG]  [BUGGY]  Preconditions.checkState(method  ==  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Preconditions.checkState(method  ==  null);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	Preconditions.checkState(method  ==  null);	  Preconditions.checkNotNull(method);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
123	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants()  *  DEFAULT_ABSOLUTE_ACCURACY  +  1;	  ILLINOIS    =    method.getAllowSecants()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
124	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecantSolver(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecantSolver(DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSecantSolver();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
125	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions(DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
126	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecantSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecantSolutions()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getAllowedSecantSolutions();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.relativeAccuracy,  0,  method.doubleValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.relativeAccuracy,  0,  method.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.relativeAccuracy,  0,  method.doubleValue());	  System.arraycopy(this.allowed,    0,    method,    0,    method.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
128	[BUG]  [BUGGY]  ILLINOIS  =  method.getParent()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getParent()  +  1;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getParent()  +  1;	  ILLINOIS    =    method.getParent();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
129	[BUG]  [BUGGY]  this.allowed  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.allowed  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	this.allowed  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.allowed    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
130	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  /  DEFAULT_ABSOLUTE_ACCURACY;  this.allowed  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.allowed    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.method,  0,  this.allowed.doubleValue());  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.method,  0,  this.allowed.doubleValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.method,  0,  this.allowed.doubleValue());	  System.arraycopy(this.allowed,    0,    method,    0,    this.allowed.doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
132	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingSecantleton();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingSecantleton();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingSecantleton();	  ILLINOIS    =    method.getInitializingSingleton();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
133	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowSolver(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
134	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACC	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ')'  expected	41	None	replace
135	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitialValue()  *  DEFAULT_ABSOLUTE_ACCURACY;  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY,    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ')'  expected	41	None	replace
136	[BUG]  [BUGGY]  ILLINOIS  =  method.getLeastSuperclass();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getLeastSuperclass();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getLeastSuperclass();	  ILLINOIS    =    method.getInitialState();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolutions(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
138	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  this.allowed);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolutions(this.allowed,  this.allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolutions(this.allowed,  this.allowed);	  ILLINOIS    =    method.getAllowSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
139	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolver(DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSolver();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.length  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  1,  method.length  +  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  1,  method.length  +  1);	  System.arraycopy(method,    0,    this.allowed,    1,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
141	[BUG]  [BUGGY]  ILLINOIS  =  method.reset();  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.reset();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.reset();	  ILLINOIS    =    method.getSecan();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
142	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecants()  *  DEFAULT_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecants()  *  DEFAULT_ABSOLUTE_ACCURACY;  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecants()  *  DEFAULT_ABSOLUTE_ACCURACY;	  ILLINOIS    =    method.getAllowedSecants();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
143	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSecants(),  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSecants(),  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSecants(),  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSecants();    	non-compiled	[CE]  ';'  expected	27	None	replace
144	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingRegLA();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingRegLA();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingRegLA();	  ILLINOIS    =    method.getInitializingReGULA();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
145	[BUG]  [BUGGY]  ILLINOIS  =  method.getInitializingReguascal();  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getInitializingReguascal();  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getInitializingReguascal();	  ILLINOIS    =    method.getInitializingReGULA();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
146	[BUG]  [BUGGY]  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	this.method  =  method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getInitialValue()    *    DEFAULT_ABSOLUTE_ACCURACY;    this.method    =    method.getMethod(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
147	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSolver(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSolver(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowSolver(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
148	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  method,  1,  method.length);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  method,  1,  method.length);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  method,  1,  method.length);	  System.arraycopy(this.allowed,    0,    method,    0,    method.length);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
149	[BUG]  [BUGGY]  Preconditions.checkArgument(!method.isUnknownType());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Preconditions.checkArgument(!method.isUnknownType());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	Preconditions.checkArgument(!method.isUnknownType());	  Preconditions.checkNotNull(method);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
150	[BUG]  [BUGGY]  Preconditions.checkArgument(!method.isUnknownMethod());  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  Preconditions.checkArgument(!method.isUnknownMethod());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	Preconditions.checkArgument(!method.isUnknownMethod());	  Preconditions.checkNotNull(method);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
151	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY,  DEFAULT_ABSOLUTE_ACCURACY);	  ILLINOIS    =    method.getAllowedSolutions(DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  0,  method.getMask(),  1);	  System.arraycopy(method,    0,    this.allowed,    0,    method.getMask(),    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask()  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask()  +  1);  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(this.allowed,  0,  this.allowed,  0,  method.getMask()  +  1);	  System.arraycopy(this.allowed,    0,    this.allowed,    0,    method.getMask());    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(method,  0,  this.allowed,  4,  method.getValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  System.arraycopy(method,  0,  this.allowed,  4,  method.getValue());  [BUGGY]        [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	System.arraycopy(method,  0,  this.allowed,  4,  method.getValue());	  System.arraycopy(method,    0,    this.allowed,    0,    method.getValue()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
155	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.method);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.method);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.method);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
156	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.allowed);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.allowed);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowedSolutions(this.allowed,  this.allowed);	  ILLINOIS    =    method.getAllowedSolutions(this.allowed);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
157	[BUG]  [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      protected  BaseSecantSolver(final  double  absoluteAccuracy,  final  Method  method)  {  super(absoluteAccuracy);  this.allowed  =  AllowedSolution.ANY_SIDE;  this.method  =  method;      [BUGGY]  ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [BUGGY]      }  [CLASS]  BaseSecantSolver  Method  [METHOD]  <init>  [RETURN_TYPE]  BaseSecantSolver$Method)  final  double  absoluteAccuracy  Method  method  [VARIABLES]  AllowedSolution  allowed  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3333333333333333	71	71	1	replace	ILLINOIS  =  method.getAllowSecants(),  DEFAULT_ABSOLUTE_ACCURACY  +  1);	  ILLINOIS    =    method.getAllowSecants(),    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  ';'  expected	56	None	replace
