bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0),  atol,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0),  atol,  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  Math.abs(x0),  atol,  absoluteAccuracy);	  x    =    Math.min(relativeAccuracy    *    Math.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
2	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x0),  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x0),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  Math.abs(x0),  atol);	  x    =    Math.min(relativeAccuracy    *    Math.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
3	[BUG]  [BUGGY]  if  (x  <  x0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  x0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  x0)  {	  if    (x    >    x0)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x0),  atol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x0),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x0),  atol);	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
5	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol);	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
6	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  REGULA_FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  REGULA_FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  REGULA_FALSI,  atol);	  x    =    Math.max(rtol    *    PEGASUS,    atol);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
7	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  PEGASUS,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  PEGASUS,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  PEGASUS,  atol  +  1);	  x    =    Math.max(rtol    *    PEGASUS,    atol);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
8	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  DEFAULT_ABSOLUTE_ACCURACY,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  DEFAULT_ABSOLUTE_ACCURACY,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  DEFAULT_ABSOLUTE_ACCURACY,  atol  +  1);	  x    =    Math.max(rtol    *    REGULA_FALSI,    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
9	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FALSI,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  FALSI,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  FALSI,  atol  +  1);	  x    =    Math.max(rtol    *    REGULA_FALSI,    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
10	[BUG]  [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(x1  *  FastMath.abs(x1),  atol));	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
11	[BUG]  [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(x0  *  FastMath.abs(x1),  atol));	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
12	[BUG]  [BUGGY]  x  =  Math.min(x0,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  atol);	  x    =    Math.min(x0    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
13	[BUG]  [BUGGY]  x  =  Math.min(x0  *  ReGULA_FALSI,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  ReGULA_FALSI,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  ReGULA_FALSI,  atol  +  1);	  x    =    Math.min(x0    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
14	[BUG]  [BUGGY]  x0  =  Math.max(x0  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.max(x0  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.max(x0  *  FastMath.abs(x1),  atol);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
17	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  FastMath.abs(x1),  atol));	  x    =    Math.min(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
18	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x    =    Math.min(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
19	[BUG]  [BUGGY]  x  =  Math.min(x0,  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  FastMath.abs(x1),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  FastMath.abs(x1),  atol));	  x    =    Math.min(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
20	[BUG]  [BUGGY]  x  =  computeReGULAValue(f0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeReGULAValue(f0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeReGULAValue(f0);	  x    =    computeReGULAValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
21	[BUG]  [BUGGY]  x  =  computeReGULAValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeReGULAValue(rtol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeReGULAValue(rtol);	  x    =    computeReGULAValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
22	[BUG]  [BUGGY]  x  =  Math.min(x0  *  rtol,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  rtol,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  rtol,  atol);	  x    =    Math.min(x0    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
23	[BUG]  [BUGGY]  x  =  Math.min(x0  *  REGULA_FALSI,  f1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  REGULA_FALSI,  f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  REGULA_FALSI,  f1);	  x    =    Math.min(x0    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
24	[BUG]  [BUGGY]  x  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  absoluteAccuracy);	  x    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  relativeAccuracy);	  x    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);	  x    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  x  =  Math.min(max,  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(max,  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(max,  relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY);	  x    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  x  =  computeRequireValue(rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRequireValue(rtol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRequireValue(rtol);	  x    =    computeRequireValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
30	[BUG]  [BUGGY]  x  =  getRequireValue(x1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  getRequireValue(x1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  getRequireValue(x1);	  x    =    computeRequireValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
31	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x0),  atol,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x0),  atol,  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  Math.abs(x0),  atol,  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    Math.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  atol  +  1);	  x    =    Math.max(relativeAccuracy    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
33	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
34	[BUG]  [BUGGY]  x  =  computeFunctionValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFunctionValue(x0,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFunctionValue(x0,  atol);	  x    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
35	[BUG]  [BUGGY]  x  =  computeObjectiveValue(x0,  rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeObjectiveValue(x0,  rtol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeObjectiveValue(x0,  rtol);	  x    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
36	[BUG]  [BUGGY]  x  =  computeFallThrough(x0,  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFallThrough(x0,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFallThrough(x0,  atol);	  x    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
37	[BUG]  [BUGGY]  x  =  computeObjectiveValue(x0,  f1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeObjectiveValue(x0,  f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeObjectiveValue(x0,  f1);	  x    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
38	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x),  atol))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x),  atol))  {	  if    (x    <    0    ||    x    >    FastMath.max(rtol    *    FastMath.abs(x1),    atol))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
39	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1,  atol))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1,  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1,  atol))  {	  if    (x    <    0    ||    x    >    FastMath.max(rtol    *    FastMath.abs(x1),    atol))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
40	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >  FastMath.min(rtol  *  FastMath.abs(x1),  atol))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >  FastMath.min(rtol  *  FastMath.abs(x1),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >  FastMath.min(rtol  *  FastMath.abs(x1),  atol))  {	  if    (x    <    0    ||    x    >    FastMath.max(rtol    *    FastMath.abs(x1),    atol))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
41	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  2);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  2);	  x    =    Math.max(rtol    *    Math.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
42	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  3);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  3);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  3);	  x    =    Math.max(rtol    *    Math.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
43	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  5);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  5);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  Math.abs(x1),  atol  +  5);	  x    =    Math.max(rtol    *    Math.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
44	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x0),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x0),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x0),  atol));	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
45	[BUG]  [BUGGY]  x  =  computeRelativeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRelativeFunctionValue(x0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRelativeFunctionValue(x0);	  x    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  if(x0  ==  f0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x0  ==  f0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x0  ==  f0)  {	  if(x1    ==    f0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
47	[BUG]  [BUGGY]  if(f0  ==  x1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(f0  ==  x1)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(f0  ==  x1)  {	  if(x1    ==    f0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  if(x1!=  f0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1!=  f0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1!=  f0)  {	  if(x1    ==    f0)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);	  x    =    Math.max(relativeAccuracy    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
50	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  atol);	  x    =    Math.max(relativeAccuracy    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
51	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  atol  +  1);	  x    =    Math.max(relativeAccuracy    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
52	[BUG]  [BUGGY]  if(x1  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  x1  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  x1  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1  <  =  DEFAULT_ABSOLUTE_ACCURACY  ||  x1  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {	  if(x1    <    =    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
53	[BUG]  [BUGGY]  if(x1  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1  <  =  DEFAULT_ABSOLUTE_ACCURACY)  {	  if(x1    <    =    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
54	[BUG]  [BUGGY]  if(x1  <  =  REGULA_FALSI)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1  <  =  REGULA_FALSI)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1  <  =  REGULA_FALSI)  {	  if(x1    <    =    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
55	[BUG]  [BUGGY]  if(x0  <  =  x1)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x0  <  =  x1)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x0  <  =  x1)  {	  if(x1    <    =    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
56	[BUG]  [BUGGY]  if  (x0  <  x1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x0  <  x1)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x0  <  x1)  {	  if    (x0    >    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
57	[BUG]  [BUGGY]  x  =  Math.min(x0,  rtol  *  Math.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  rtol  *  Math.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  rtol  *  Math.abs(x1),  atol);	  x    =    Math.max(x0    *    Math.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
58	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  Math.abs(x1),  absoluteAccuracy);	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
59	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
60	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  Math.abs(x1),  relativeAccuracy);	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
61	[BUG]  [BUGGY]  x0  =  Math.max(x0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.max(x0  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.max(x0  *  FastMath.abs(x1),  atol));	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY  +  1);	  x    =    Math.min(relativeAccuracy    *    REGULA_FALSI    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
65	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  relativeAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  relativeAccuracy  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  relativeAccuracy  +  1);	  x    =    Math.min(relativeAccuracy    *    REGULA_FALSI    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
66	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  max  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  max  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  max  +  1);	  x    =    Math.min(relativeAccuracy    *    REGULA_FALSI    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
67	[BUG]  [BUGGY]  if  (x0  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x0  ==  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x0  ==  0)  {	  if    (x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
68	[BUG]  [BUGGY]  if(x  >  0  ||  atol!=  DEFAULT_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0  ||  atol!=  DEFAULT_ABSOLUTE_ACCURACY)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0  ||  atol!=  DEFAULT_ABSOLUTE_ACCURACY)  {	  if    (x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
69	[BUG]  [BUGGY]  if(x1!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1!=  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1!=  0)  {	  if(x1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  if(x0  ==  0.5)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x0  ==  0.5)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x0  ==  0.5)  {	  if(x1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  x  =  Math.max(f0  *  fx);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  *  fx);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  *  fx);	  x    =    Math.max(f0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
72	[BUG]  [BUGGY]  x  =  Math.min(f0  *  REGULA_FALSI,  fx);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(f0  *  REGULA_FALSI,  fx);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(f0  *  REGULA_FALSI,  fx);	  x    =    Math.max(f0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
73	[BUG]  [BUGGY]  x  =  Math.max(f0  *  fx,  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  *  fx,  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  *  fx,  REGULA_FALSI);	  x    =    Math.max(f0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
74	[BUG]  [BUGGY]  x  =  computeRelativeValue(rtol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRelativeValue(rtol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRelativeValue(rtol);	  x    =    computeRelativeValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
75	[BUG]  [BUGGY]  x  =  computeRelativeValue(relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRelativeValue(relativeAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRelativeValue(relativeAccuracy);	  x    =    computeRelativeValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
76	[BUG]  [BUGGY]  x  =  getRelativeValue(x1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  getRelativeValue(x1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  getRelativeValue(x1);	  x    =    computeRelativeValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
77	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  Math.abs(x1),  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  Math.abs(x0),  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x1,  atol),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x1,  atol),  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  Math.abs(x1,  atol),  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  x  =  Math.min(x0,  rtol  *  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  rtol  *  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  rtol  *  DEFAULT_ABSOLUTE_ACCURACY);	  x    =    Math.max(rtol    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
81	[BUG]  [BUGGY]  x  =  Math.min(x0,  f0  *  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  f0  *  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  f0  *  REGULA_FALSI);	  x    =    Math.min(x0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
82	[BUG]  [BUGGY]  x  =  Math.min(x0,  x1);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  x1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  x1);	  x    =    Math.min(x0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
83	[BUG]  [BUGGY]  x  =  Math.min(max,  x0  *  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(max,  x0  *  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(max,  x0  *  REGULA_FALSI);	  x    =    Math.min(x0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
84	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  REGULA_FALSI,  0.5);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  REGULA_FALSI,  0.5);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  REGULA_FALSI,  0.5);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
85	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  0.5);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  0.5);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  0.5);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
86	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  0,  0.5);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  ReGULA_FALSI,  0,  0.5);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
87	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  3);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  3);	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
89	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x0),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x0),  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x0),  atol  +  1);	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
90	[BUG]  [BUGGY]  x  =  computeRelativeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRelativeFunctionValue(x1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRelativeFunctionValue(x1);	  x    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
91	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0,  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0,  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  Math.abs(x0,  atol));	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1,    atol));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
92	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x1,  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  Math.abs(x1,  atol));	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1,    atol));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
93	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x1,  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  Math.abs(x1,  atol));	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1,    atol));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
94	[BUG]  [BUGGY]  if  (x0  ==  x1  ||  x0  ==  REGULA_FALSI)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x0  ==  x1  ||  x0  ==  REGULA_FALSI)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x0  ==  x1  ||  x0  ==  REGULA_FALSI)  {	  if    (x0    ==    x1    ||    x0    ==    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
95	[BUG]  [BUGGY]  if  (x1  ==  x0  ||  x0  ==  x1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x1  ==  x0  ||  x0  ==  x1)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x1  ==  x0  ||  x0  ==  x1)  {	  if    (x0    ==    x1    ||    x0    ==    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
96	[BUG]  [BUGGY]  if  (x  >  0.5)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  >  0.5)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  >  0.5)  {	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
97	[BUG]  [BUGGY]  if  (x  <  0.0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0.0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0.0)  {	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
98	[BUG]  [BUGGY]  if(x  >  0.0  ||  x  <  =  0.0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0.0  ||  x  <  =  0.0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0.0  ||  x  <  =  0.0)  {	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
99	[BUG]  [BUGGY]  x  =  computeRelativeValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRelativeValue(x0,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRelativeValue(x0,  atol);	  x    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
100	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  /  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  /  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  /  REGULA_FALSI);	  x    =    Math.max(rtol    /    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
101	[BUG]  [BUGGY]  x  =  Math.max(rtol  /  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  /  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  /  DEFAULT_ABSOLUTE_ACCURACY);	  x    =    Math.max(rtol    /    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
102	[BUG]  [BUGGY]  x  =  Math.max(rtol  /  REGULA_FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  /  REGULA_FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  /  REGULA_FALSI,  atol);	  x    =    Math.max(rtol    /    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
103	[BUG]  [BUGGY]  x  =  computeRequireValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRequireValue(x0,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRequireValue(x0,  atol);	  x    =    computeRequireValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
104	[BUG]  [BUGGY]  x  =  computeRequireValue(x0,  f1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRequireValue(x0,  f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRequireValue(x0,  f1);	  x    =    computeRequireValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
105	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  f0  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  f0  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  ReGULA_FALSI,  f0  +  1);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
106	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  ReGULA_FALSI,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  ReGULA_FALSI,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  ReGULA_FALSI,  atol  +  1);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
107	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  ReGULA_FALSI,  max);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  ReGULA_FALSI,  max);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  ReGULA_FALSI,  max);	  x    =    Math.min(rtol    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
108	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  ReGULA_FALSI,  f0);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  ReGULA_FALSI,  f0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  ReGULA_FALSI,  f0);	  x    =    Math.min(rtol    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
109	[BUG]  [BUGGY]  if(x  <  0  ||  x  >=  0.5)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  <  0  ||  x  >=  0.5)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  <  0  ||  x  >=  0.5)  {	  if(x    <    0    ||    x    >    0.5)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
110	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  1.0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  <  0  ||  x  >  1.0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  <  0  ||  x  >  1.0)  {	  if(x    <    0    ||    x    >    0.5)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
111	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  0.5  ||  x  >  0.5)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  <  0  ||  x  >  0.5  ||  x  >  0.5)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  <  0  ||  x  >  0.5  ||  x  >  0.5)  {	  if(x    <    0    ||    x    >    0.5)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
112	[BUG]  [BUGGY]  if(x0  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x0  <  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x0  <  0)  {	  if(x1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
113	[BUG]  [BUGGY]  if(x1  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1  <  =  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1  <  =  0)  {	  if(x1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
114	[BUG]  [BUGGY]  if(x1  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1  >=  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1  >=  0)  {	  if(x1    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
115	[BUG]  [BUGGY]  if  (x0  ==  REGULA_FALSI)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x0  ==  REGULA_FALSI)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x0  ==  REGULA_FALSI)  {	  if    (x0!=    REGULA_FALSI)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
116	[BUG]  [BUGGY]  if  (x0!=  REGULA_FALSI  ||  x1!=  REGULA_FALSI)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x0!=  REGULA_FALSI  ||  x1!=  REGULA_FALSI)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x0!=  REGULA_FALSI  ||  x1!=  REGULA_FALSI)  {	  if    (x0!=    REGULA_FALSI)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
117	[BUG]  [BUGGY]  if  (x0!=  REGULA_FALSI  ||  x1!=  DEFAULT_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x0!=  REGULA_FALSI  ||  x1!=  DEFAULT_ABSOLUTE_ACCURACY)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x0!=  REGULA_FALSI  ||  x1!=  DEFAULT_ABSOLUTE_ACCURACY)  {	  if    (x0!=    REGULA_FALSI)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
118	[BUG]  [BUGGY]  if(x0  ==  x1  ||  x0  ==  atol)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x0  ==  x1  ||  x0  ==  atol)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x0  ==  x1  ||  x0  ==  atol)  {	  if(x0    ==    x1    ||    x0    ==    x0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
119	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1,  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x1,  atol));	  x    =    Math.max(rtol    *    FastMath.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
120	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x0),  atol)-  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x0),  atol)-  1;  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x0),  atol)-  1;	  x    =    Math.max(rtol    *    FastMath.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
121	[BUG]  [BUGGY]  x  =  computeFallThrough(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFallThrough(x0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFallThrough(x0);	  x    =    computeFallThrough(x1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
122	[BUG]  [BUGGY]  x  =  computeFallThrough(f0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFallThrough(f0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFallThrough(f0);	  x    =    computeFallThrough(x1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
123	[BUG]  [BUGGY]  x  =  computeFallThrough(rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFallThrough(rtol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFallThrough(rtol);	  x    =    computeFallThrough(x1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
124	[BUG]  [BUGGY]  x  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol);	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
125	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  relativeAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  relativeAccuracy);	  x    =    Math.max(relativeAccuracy    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
126	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
127	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  max);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  max);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  max);	  x    =    Math.min(relativeAccuracy    *    REGULA_FALSI,    relativeAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
128	[BUG]  [BUGGY]  x0  =  0.5  *(x1  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *(x1  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *(x1  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
129	[BUG]  [BUGGY]  x0  =  0.5  *(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
130	[BUG]  [BUGGY]  x0  =  0.5  *(rtol  *  FastMath.abs(x1),  atol)  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *(rtol  *  FastMath.abs(x1),  atol)  +  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *(rtol  *  FastMath.abs(x1),  atol)  +  1;	  x0    =    0.5    *(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
131	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  inverted);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  inverted);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  REGULA_FALSI,  inverted);	  x    =    Math.min(relativeAccuracy    *    REGULA_FALSI,    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
132	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x0),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x0),  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  Math.abs(x0),  atol  +  1);	  x    =    Math.max(rtol    *    Math.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
133	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x0),  atol,  inverted);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x0),  atol,  inverted);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  Math.abs(x0),  atol,  inverted);	  x    =    Math.max(rtol    *    Math.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
134	[BUG]  [BUGGY]  x  =  Math.max(f0  *  ReGULA_FALSI,  rtol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  *  ReGULA_FALSI,  rtol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  *  ReGULA_FALSI,  rtol);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    f0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
135	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  f0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  f0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  f0);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    f0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
136	[BUG]  [BUGGY]  x  =  Math.min(x0,  rtol  *  FastMath.abs(x0),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  rtol  *  FastMath.abs(x0),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  rtol  *  FastMath.abs(x0),  atol));	  x    =    Math.max(rtol    *    FastMath.abs(x0),    atol));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
137	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x2),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  Math.abs(x2),  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  Math.abs(x2),  atol  +  1);	  x    =    Math.max(rtol    *    Math.abs(x2),    atol);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
138	[BUG]  [BUGGY]  x  =  computeReGULAValue(x0,  atol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeReGULAValue(x0,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeReGULAValue(x0,  atol);	  x    =    computeReGULAValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
139	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  Math.abs(x1),  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  Math.abs(x1),  atol  +  1);	  x    =    Math.min(rtol    *    Math.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
140	[BUG]  [BUGGY]  if(x1  >=  x0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1  >=  x0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1  >=  x0)  {	  if(x1!=    x0)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
141	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  DEFAULT_ABSOLUTE_ACCURACY,  max);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  DEFAULT_ABSOLUTE_ACCURACY,  max);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  DEFAULT_ABSOLUTE_ACCURACY,  max);	  x    =    Math.max(rtol    *    DEFAULT_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
142	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >  FastMath.min(rtol  *  FastMath.abs(x1)))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >  FastMath.min(rtol  *  FastMath.abs(x1)))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >  FastMath.min(rtol  *  FastMath.abs(x1)))  {	  if    (x    <    0    ||    x    >    FastMath.max(rtol    *    FastMath.abs(x1)))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
143	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >  1)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >  1)  {	  if    (x    <    0    ||    x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >=  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >=  0)  {	  if    (x    <    0    ||    x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
145	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *  (x0  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *  (x0  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (rtol    *    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
146	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *  (x1  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *  (x1  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (rtol    *    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
147	[BUG]  [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(x1  *  FastMath.abs(x1),  atol);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
148	[BUG]  [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  1);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
149	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
150	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  FastMath.abs(x1),  atol);	  x    =    Math.min(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
151	[BUG]  [BUGGY]  x  =  Math.min(x0,  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  FastMath.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  FastMath.abs(x1),  atol);	  x    =    Math.min(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
152	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  FALSI,  atol);	  x    =    Math.max(rtol    *    FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
153	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  PEGASUS);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  PEGASUS);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  PEGASUS);	  x    =    Math.max(rtol    *    PEGASUS);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
154	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  ReGULA_FALSI);	  x    =    Math.max(rtol    *    PEGASUS);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
155	[BUG]  [BUGGY]  x  =  Math.min(rtol  *  PEGASUS);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(rtol  *  PEGASUS);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(rtol  *  PEGASUS);	  x    =    Math.max(rtol    *    PEGASUS);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
156	[BUG]  [BUGGY]  x  =  computeObjectiveValue(x1,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeObjectiveValue(x1,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeObjectiveValue(x1,  atol);	  x    =    computeObjectiveValue(x0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
157	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI  +  1,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI  +  1,  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  REGULA_FALSI  +  1,  absoluteAccuracy);	  x    =    Math.min(relativeAccuracy    *    REGULA_FALSI    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
158	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  REGULA_FALSI  +  2);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  REGULA_FALSI  +  2);	  x    =    Math.min(relativeAccuracy    *    REGULA_FALSI    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
159	[BUG]  [BUGGY]  x  =  computeRegularValue(x0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRegularValue(x0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRegularValue(x0);	  x    =    computeFunctionValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
160	[BUG]  [BUGGY]  x  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
161	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x0),  atol)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x0),  atol)+  1;  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x0),  atol)+  1;	  x    =    Math.max(rtol    *    FastMath.abs(x0),    atol));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
162	[BUG]  [BUGGY]  x  =  computeRelativeValue(x0,  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRelativeValue(x0,  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRelativeValue(x0,  REGULA_FALSI);	  x    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
163	[BUG]  [BUGGY]  if(x  >  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {	  if    (x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
164	[BUG]  [BUGGY]  if(x  >  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1)))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1)))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1)))  {	  if    (x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
165	[BUG]  [BUGGY]  x  =  Math.max(reGULA_FALSI  *  f0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(reGULA_FALSI  *  f0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(reGULA_FALSI  *  f0);	  x    =    Math.max(f0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
166	[BUG]  [BUGGY]  x  =  Math.max(regASUS  *  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(regASUS  *  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(regASUS  *  REGULA_FALSI);	  x    =    Math.max(f0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
167	[BUG]  [BUGGY]  x  =  Math.min(f0  *  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(f0  *  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(f0  *  REGULA_FALSI);	  x    =    Math.max(f0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
168	[BUG]  [BUGGY]  x  =  Math.min(x0,  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  REGULA_FALSI);	  x    =    Math.min(x0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
169	[BUG]  [BUGGY]  x  =  Math.min(x0,  f0);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0,  f0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0,  f0);	  x    =    Math.min(x0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
170	[BUG]  [BUGGY]  x  =  Math.min(x0  *  PEGASUS,  atol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  PEGASUS,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  PEGASUS,  atol);	  x    =    Math.max(rtol    *    PEGASUS,    atol);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
171	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  PEGASUS,  atol);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  PEGASUS,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  PEGASUS,  atol);	  x    =    Math.max(rtol    *    PEGASUS,    atol);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
172	[BUG]  [BUGGY]  x  =  Math.min(x0  *  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  DEFAULT_ABSOLUTE_ACCURACY);	  x    =    Math.max(rtol    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
173	[BUG]  [BUGGY]  if(f0  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(f0  ==  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(f0  ==  0)  {	  if(x1    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
174	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
175	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
176	[BUG]  [BUGGY]  if  (x1  >  x0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x1  >  x0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x1  >  x0)  {	  if    (x0    >    x1)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
177	[BUG]  [BUGGY]  if(x  >  0.0  ||  x  <  0.5)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0.0  ||  x  <  0.5)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0.0  ||  x  <  0.5)  {	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
178	[BUG]  [BUGGY]  x0  =  0.5  *(FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *(FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *(FastMath.abs(x1),  atol));	  x0    =    0.5    *(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
179	[BUG]  [BUGGY]  x  =  computeRequireValue(f0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRequireValue(f0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRequireValue(f0);	  x    =    computeRequireValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
180	[BUG]  [BUGGY]  if  (x  <  =  0  ||  x  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  =  0  ||  x  >  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  =  0  ||  x  >  0)  {	  if    (x    <    0    ||    x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
181	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  ReGULA_FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  ReGULA_FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  ReGULA_FALSI,  atol);	  x    =    Math.max(relativeAccuracy    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
182	[BUG]  [BUGGY]  x  =  Math.max(regularAccuracy  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(regularAccuracy  *  FastMath.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(regularAccuracy  *  FastMath.abs(x1),  atol);	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
183	[BUG]  [BUGGY]  if  (x  <  =  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  =  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  =  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {	  if    (x    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
184	[BUG]  [BUGGY]  if  (x  <  =  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1)))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  =  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1)))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  =  0  ||  x  >  FastMath.max(rtol  *  FastMath.abs(x1)))  {	  if    (x    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
185	[BUG]  [BUGGY]  x  =  computeFollowValue(x1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFollowValue(x1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFollowValue(x1);	  x    =    computeFallThrough(x1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
186	[BUG]  [BUGGY]  x  =  Math.min(x0  *  FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  FALSI,  atol);	  x    =    Math.max(rtol    *    FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
187	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  FALSI,  atol);	  x    =    Math.max(rtol    *    FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
188	[BUG]  [BUGGY]  x  =  Math.min(f0  *  REGULA_FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(f0  *  REGULA_FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(f0  *  REGULA_FALSI,  atol);	  x    =    Math.min(x0    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
189	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
190	[BUG]  [BUGGY]  x  =  Math.min(x0  *  REGULA_FALSI,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  REGULA_FALSI,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  REGULA_FALSI,  atol  +  1);	  x    =    Math.max(rtol    *    REGULA_FALSI,    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
191	[BUG]  [BUGGY]  x  =  Math.max(regularAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(regularAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(regularAccuracy  *  FastMath.abs(x1),  atol));	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
192	[BUG]  [BUGGY]  x  =  computeReGULAValue(x0,  f1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeReGULAValue(x0,  f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeReGULAValue(x0,  f1);	  x    =    computeReGULAValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
193	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  2.0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  2.0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  ReGULA_FALSI,  2.0);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
194	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1,    atol));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
195	[BUG]  [BUGGY]  if(x0  ==  x1  ||  x0  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x0  ==  x1  ||  x0  ==  DEFAULT_ABSOLUTE_ACCURACY)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x0  ==  x1  ||  x0  ==  DEFAULT_ABSOLUTE_ACCURACY)  {	  if(x0    ==    x1    ||    x0    ==    x0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
196	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
197	[BUG]  [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)  +  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)  +  1;	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
198	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *  (f0  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *  (f0  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (rtol    *    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
199	[BUG]  [BUGGY]  x0  =  0.5  *  (FastMath.max(x0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *  (FastMath.max(x0  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *  (FastMath.max(x0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (rtol    *    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
200	[BUG]  [BUGGY]  x0  =  0.5  *  (len  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *  (len  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *  (len  *  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (rtol    *    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
201	[BUG]  [BUGGY]  x  =  Math.max(f0  /  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  /  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  /  REGULA_FALSI);	  x    =    Math.max(rtol    /    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
202	[BUG]  [BUGGY]  x  =  Math.min(max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(max(rtol  *  FastMath.abs(x1),  atol));	  x    =    Math.min(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
203	[BUG]  [BUGGY]  x  =  computeReGULAValue(f1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeReGULAValue(f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeReGULAValue(f1);	  x    =    computeReGULAValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
204	[BUG]  [BUGGY]  x  =  Math.min(f0  *  ReGULA_FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(f0  *  ReGULA_FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(f0  *  ReGULA_FALSI,  atol);	  x    =    Math.min(x0    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
205	[BUG]  [BUGGY]  x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  1);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
206	[BUG]  [BUGGY]  if  (f0!=  REGULA_FALSI)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (f0!=  REGULA_FALSI)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (f0!=  REGULA_FALSI)  {	  if    (x0!=    REGULA_FALSI)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
207	[BUG]  [BUGGY]  if  (x1!=  REGULA_FALSI)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x1!=  REGULA_FALSI)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x1!=  REGULA_FALSI)  {	  if    (x0!=    REGULA_FALSI)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
208	[BUG]  [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)-  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)-  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)-  1;	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
209	[BUG]  [BUGGY]  x  =  Math.min(x0  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  DEFAULT_ABSOLUTE_ACCURACY,  atol);	  x    =    Math.max(rtol    *    DEFAULT_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
210	[BUG]  [BUGGY]  x  =  Math.min(x0  *  PEGASUS);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  PEGASUS);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  PEGASUS);	  x    =    Math.max(rtol    *    PEGASUS);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
211	[BUG]  [BUGGY]  x  =  Math.max(rtol  /  PEGASUS);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  /  PEGASUS);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  /  PEGASUS);	  x    =    Math.max(rtol    *    PEGASUS);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
212	[BUG]  [BUGGY]  if(x  <  =  0  ||  x  >  0.5)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  <  =  0  ||  x  >  0.5)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  <  =  0  ||  x  >  0.5)  {	  if(x    <    0    ||    x    >    0.5)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
213	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  0.0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  <  0  ||  x  >  0.0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  <  0  ||  x  >  0.0)  {	  if(x    <    0    ||    x    >    0.5)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
214	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  Math.abs(x1,  relativeAccuracy));	  x    =    Math.min(relativeAccuracy    *    Math.abs(x1,    atol));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
215	[BUG]  [BUGGY]  x  =  Math.max(regex0  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(regex0  *  FastMath.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(regex0  *  FastMath.abs(x1),  atol);	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
216	[BUG]  [BUGGY]  x  =  Math.min(x0  *  PEGASUS,  rtol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  PEGASUS,  rtol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  PEGASUS,  rtol);	  x    =    Math.max(rtol    *    PEGASUS,    atol);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
217	[BUG]  [BUGGY]  x  =  Math.max(regex0  *  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(regex0  *  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(regex0  *  REGULA_FALSI);	  x    =    Math.max(f0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
218	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0)/  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  Math.abs(x0)/  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  Math.abs(x0)/  atol);	  x    =    Math.min(relativeAccuracy    *    Math.abs(x0),    atol);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
219	[BUG]  [BUGGY]  if(x1  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x1  >  0)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x1  >  0)  {	  if    (x    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
220	[BUG]  [BUGGY]  x0  =  Math.max(x1  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.max(x1  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.max(x1  *  FastMath.abs(x1),  atol);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
221	[BUG]  [BUGGY]  x  =  Math.min(x0  *  Math.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  Math.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  Math.abs(x1),  atol);	  x    =    Math.min(rtol    *    Math.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
222	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x2),  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x2),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  Math.abs(x2),  atol);	  x    =    Math.max(rtol    *    Math.abs(x2),    atol);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
223	[BUG]  [BUGGY]  x  =  Math.max(x0  *  Math.abs(x2),  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(x0  *  Math.abs(x2),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(x0  *  Math.abs(x2),  atol);	  x    =    Math.max(rtol    *    Math.abs(x2),    atol);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
224	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  method);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  method);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  REGULA_FALSI,  method);	  x    =    Math.max(relativeAccuracy    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
225	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
226	[BUG]  [BUGGY]  x  =  Math.max(regex0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(regex0  *  FastMath.abs(x1),  atol));  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(regex0  *  FastMath.abs(x1),  atol));	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
227	[BUG]  [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x1  =  Math.max(x0  *  FastMath.abs(x1),  atol);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
228	[BUG]  [BUGGY]  x  =  Math.max(x0  *  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(x0  *  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(x0  *  REGULA_FALSI);	  x    =    Math.min(x0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
229	[BUG]  [BUGGY]  x  =  Math.min(x0  *  fx);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  fx);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  fx);	  x    =    Math.min(x0    *    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
230	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  Math.abs(x1),  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  Math.abs(x1),  atol  +  1);	  x    =    Math.max(rtol    *    Math.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
231	[BUG]  [BUGGY]  x  =  Math.max(f0  *  REGULA_FALSI,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  *  REGULA_FALSI,  atol  +  1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  *  REGULA_FALSI,  atol  +  1);	  x    =    Math.max(rtol    *    REGULA_FALSI,    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
232	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  fx);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  *  ReGULA_FALSI,  fx);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  *  ReGULA_FALSI,  fx);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    f0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
233	[BUG]  [BUGGY]  x  =  Math.max(f0  *  FALSI,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  *  FALSI,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  *  FALSI,  atol);	  x    =    Math.max(rtol    *    FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
234	[BUG]  [BUGGY]  x  =  Math.max(rtol  /  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(rtol  /  DEFAULT_ABSOLUTE_ACCURACY,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(rtol  /  DEFAULT_ABSOLUTE_ACCURACY,  atol);	  x    =    Math.max(rtol    *    DEFAULT_ABSOLUTE_ACCURACY,    atol);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
235	[BUG]  [BUGGY]  x0  =  0.5  *(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  0.5  *(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  0.5  *(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
236	[BUG]  [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol))  {	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
237	[BUG]  [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol))  {	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
238	[BUG]  [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
239	[BUG]  [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x0),  atol))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x0),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  >  0.5  *  (x1  -  FastMath.max(rtol  *  FastMath.abs(x0),  atol))  {	  if    (x    >    0.0)    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
240	[BUG]  [BUGGY]  x  =  Math.max(f0  *  ReGULA_FALSI,  0.5);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  *  ReGULA_FALSI,  0.5);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  *  ReGULA_FALSI,  0.5);	  x    =    Math.max(rtol    *    ReGULA_FALSI,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
241	[BUG]  [BUGGY]  x0  =  Math.max(x1  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x0  =  Math.max(x1  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x0  =  Math.max(x1  *  FastMath.abs(x1),  atol));	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
242	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(relativeAccuracy  *  FastMath.abs(x1)))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(relativeAccuracy  *  FastMath.abs(x1)))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >  FastMath.max(relativeAccuracy  *  FastMath.abs(x1)))  {	  if    (x    <    0    ||    x    >    FastMath.max(rtol    *    FastMath.abs(x1)))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
243	[BUG]  [BUGGY]  x  =  computeFallThrough(f1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFallThrough(f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFallThrough(f1);	  x    =    computeFallThrough(x1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
244	[BUG]  [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  inverted);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  inverted);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(relativeAccuracy  *  DEFAULT_ABSOLUTE_ACCURACY,  inverted);	  x    =    Math.min(relativeAccuracy    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
245	[BUG]  [BUGGY]  x  =  Math.min(x0  *  ReGULA_FALSI,  f1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  ReGULA_FALSI,  f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  ReGULA_FALSI,  f1);	  x    =    Math.min(x0    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
246	[BUG]  [BUGGY]  x  =  calculateReGULAValue(x0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  calculateReGULAValue(x0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  calculateReGULAValue(x0);	  x    =    computeReGULAValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
247	[BUG]  [BUGGY]  if(x  <  0  ||  x  >  0.5  *)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x  <  0  ||  x  >  0.5  *)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x  <  0  ||  x  >  0.5  *)  {	  if(x    <    0    ||    x    >    0.5)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
248	[BUG]  [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if  (x  <  0  ||  x  >  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol))  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if  (x  <  0  ||  x  >  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol))  {	  if    (x    <    0    ||    x    >    FastMath.max(rtol    *    FastMath.abs(x1),    atol))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
249	[BUG]  [BUGGY]  x  =  Math.max(x0  /  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(x0  /  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(x0  /  REGULA_FALSI);	  x    =    Math.max(rtol    /    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
250	[BUG]  [BUGGY]  x  =  Math.min(x0  /  REGULA_FALSI);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  /  REGULA_FALSI);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  /  REGULA_FALSI);	  x    =    Math.max(rtol    /    REGULA_FALSI);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
251	[BUG]  [BUGGY]  x  =  calculateRequireValue(x0);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  calculateRequireValue(x0);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  calculateRequireValue(x0);	  x    =    computeRequireValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
252	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  method);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  method);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  method);	  x    =    Math.max(relativeAccuracy    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
253	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  relativeAccuracy);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(relativeAccuracy  *  ReGULA_FALSI,  relativeAccuracy);	  x    =    Math.max(relativeAccuracy    *    ReGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
254	[BUG]  [BUGGY]  x  =  computeRelativeValue(x0,  f1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeRelativeValue(x0,  f1);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeRelativeValue(x0,  f1);	  x    =    computeRelativeValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
255	[BUG]  [BUGGY]  x  =  Math.max(f0  *  DEFAULT_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.max(f0  *  DEFAULT_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.max(f0  *  DEFAULT_ABSOLUTE_ACCURACY);	  x    =    Math.max(rtol    *    DEFAULT_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
256	[BUG]  [BUGGY]  x  =  Math.min(x0  *  x1,  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  x1,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  x1,  atol);	  x    =    Math.min(x0    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
257	[BUG]  [BUGGY]  x  =  Math.min(x0  *  f1,  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  f1,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  f1,  atol);	  x    =    Math.min(x0    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
258	[BUG]  [BUGGY]  x  =  Math.min(x0  *  X1,  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(x0  *  X1,  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(x0  *  X1,  atol);	  x    =    Math.min(x0    *    REGULA_FALSI,    atol);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
259	[BUG]  [BUGGY]  if(x0  ==  x1  ||  x0  ==  x2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  if(x0  ==  x1  ||  x0  ==  x2)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	if(x0  ==  x1  ||  x0  ==  x2)  {	  if(x0    ==    x1    ||    x0    ==    x0)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
260	[BUG]  [BUGGY]  x  =  Math.min(max(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  Math.min(max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  Math.min(max(rtol  *  FastMath.abs(x1),  atol);	  x    =    Math.min(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
261	[BUG]  [BUGGY]  x  =  computeFunctionValue(fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  else  {  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:        [BUGGY]  x  =  computeFunctionValue(fx);  [BUGGY]      if  (x  ==  x1)  {  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	187	187	1	replace	x  =  computeFunctionValue(fx);	  x    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
