bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]  final  double  x  =  rtol  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	final  double  x  =  rtol  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));	final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  final  double  x  =  atol  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]  final  double  x  =  atol  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	final  double  x  =  atol  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));	final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	  	final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]    final  double  f0  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    final  double  f0  =  getFunctionValue();  [BUGGY]  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	    final  double  f0  =  getFunctionValue();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
5	[BUG]  [BUGGY]    final  double  f1  =  getFunctionValue();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    final  double  f1  =  getFunctionValue();  [BUGGY]  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	    final  double  f1  =  getFunctionValue();		non-compiled	[CE]  illegal  start  of  expression	20	None	add
6	[BUG]  [BUGGY]    final  double  f1  =  getFunctionValue(f1);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    final  double  f1  =  getFunctionValue(f1);  [BUGGY]  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	    final  double  f1  =  getFunctionValue(f1);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
7	[BUG]  [BUGGY]    final  double  f1  =  getFunctionValue(f0);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    final  double  f1  =  getFunctionValue(f0);  [BUGGY]  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	    final  double  f1  =  getFunctionValue(f0);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
8	[BUG]  [BUGGY]    final  double  f0  =  getFunctionValue(f1);  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    final  double  f0  =  getFunctionValue(f1);  [BUGGY]  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	    final  double  f0  =  getFunctionValue(f1);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
9	[BUG]  [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (x1  -  x0))/  (f1  -  f1));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]  final  double  x  =  f0  -  ((  f1  *  (x1  -  x0))/  (f1  -  f1));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	final  double  x  =  f0  -  ((  f1  *  (x1  -  x0))/  (f1  -  f1));	final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]  final  double  x  =  x0  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	final  double  x  =  x0  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));	final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
11	[BUG]  [BUGGY]    final  double  f0  =  computeObjectiveValue(f0);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    final  double  f0  =  computeObjectiveValue(f0);  [BUGGY]  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	    final  double  f0  =  computeObjectiveValue(f0);		non-compiled	[CE]  illegal  start  of  expression	20	None	add
12	[BUG]  [BUGGY]    final  double  f0  =((  f1  *  (x1  -  x0))  /  (f0  -  f0));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]    final  double  f0  =((  f1  *  (x1  -  x0))  /  (f0  -  f0));  [BUGGY]  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	    final  double  f0  =((  f1  *  (x1  -  x0))  /  (f0  -  f0));		non-compiled	[CE]  illegal  start  of  expression	20	None	add
13	[BUG]  [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  final  double  atol  =  getAbsoluteAccuracy();  final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {    [BUGGY]  final  double  x  =  inverted  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));  [BUGGY]  final  double  fx  =  computeObjectiveValue(x);    if  (fx  ==  0.0)  {  return  x;  }    [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	160	160	1	replace	final  double  x  =  inverted  -  ((  f1  *  (x1  -  x0))/  (f1  -  f0));	final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
