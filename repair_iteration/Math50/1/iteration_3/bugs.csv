bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
3	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);	  x1    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
4	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));	  x1    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
5	[BUG]  [BUGGY]  x0  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
6	[BUG]  [BUGGY]  x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
7	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  rtol  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  rtol  *  FastMath.abs(x),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  rtol  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(min,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
8	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(min,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(min,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(min,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(min,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
9	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(min,  f1,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(min,  f1,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(min,  f1,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(min,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
10	[BUG]  [BUGGY]  rtol  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);	  rtol    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
11	[BUG]  [BUGGY]  rtol  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);	  rtol    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
12	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.min(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.min(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.min(rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
14	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
15	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x),  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x),  atol);	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
16	[BUG]  [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x),  atol);	  rtol    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
17	[BUG]  [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));	  rtol    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
18	[BUG]  [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);	  rtol    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
19	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x),    atol));    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
20	[BUG]  [BUGGY]  f0  =  computeRelativeValue(x0);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeRelativeValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeRelativeValue(x0);	  f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeFunctionValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeFunctionValue(x0);	  f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
22	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x1,  atol);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeObjectiveValue(x1,  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeObjectiveValue(x1,  atol);	  f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  x  =  Math.min(x  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.min(x  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.min(x  *  FastMath.abs(x1),  atol));	  x    =    Math.max(x    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
24	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
25	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.min(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
26	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.min(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
27	[BUG]  [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (relativeAccuracy  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    relativeAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  relativeAccuracy));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  relativeAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  relativeAccuracy));	  x0    =    0.5    *    (x1    +    relativeAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  x  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  x  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (relativeAccuracy  +  x  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    relativeAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
30	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
31	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  x1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  x1));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  x1));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
32	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
33	[BUG]  [BUGGY]  rtol  =  Math.max(x  *  FastMath.abs(x),  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(x  *  FastMath.abs(x),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(x  *  FastMath.abs(x),  atol);	  rtol    =    Math.max(rtol    *    FastMath.abs(x),    atol);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
34	[BUG]  [BUGGY]  rtol  =  Math.max(x0  *  FastMath.abs(x),  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(x0  *  FastMath.abs(x),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(x0  *  FastMath.abs(x),  atol);	  rtol    =    Math.max(rtol    *    FastMath.abs(x),    atol);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
35	[BUG]  [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol  +  1);	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1,  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1,  atol));	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x1    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
38	[BUG]  [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)/  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)/  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol)/  1;	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
39	[BUG]  [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol)+  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x0  *  FastMath.abs(x1),  atol)+  1;	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
40	[BUG]  [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol)+  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x1  *  FastMath.abs(x1),  atol)+  1;	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
41	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x2),    atol));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
42	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f1,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f1,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f1,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
43	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  f1,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  f1,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  f1,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
44	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  atol  *  FastMath.abs(x1),  relativeAccuracy));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  atol  *  FastMath.abs(x1),  relativeAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  atol  *  FastMath.abs(x1),  relativeAccuracy));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
45	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
46	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);	  x0    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
47	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1,  atol));	  x0    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
48	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
49	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
50	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
51	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1)    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
52	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1)/  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1)/  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1)/  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1)    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
53	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1)),    atol));    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(Rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(Rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(Rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(Rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
55	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.min(max,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.min(max,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.min(max,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x    +    x1    -    FastMath.min(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.min(max,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.min(max,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.min(max,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x    +    x1    -    FastMath.min(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x0    +    absoluteAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
58	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x0    +    absoluteAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
59	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  relativeAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  relativeAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  relativeAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x0    +    absoluteAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
60	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
61	[BUG]  [BUGGY]  x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    Math.max(x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
62	[BUG]  [BUGGY]  x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    Math.max(x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
63	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    Math.max(x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
64	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    fx    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
65	[BUG]  [BUGGY]  x0  =  0.5  *  (f1  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f1  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f1  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    fx    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
66	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  -  FastMath.max(f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x1    +    fx    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
67	[BUG]  [BUGGY]  x  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
68	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
69	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x),  atol));  f0  =  computeObjectiveValue(x0);	  x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
70	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol)/  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol)/  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x1),  atol)/  1;	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
71	[BUG]  [BUGGY]  x  =  Math.max(x0  *  FastMath.abs(x1),  atol)+  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(x0  *  FastMath.abs(x1),  atol)+  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(x0  *  FastMath.abs(x1),  atol)+  1;	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
72	[BUG]  [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol)+  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(rtol  *  FastMath.abs(x1),  atol)+  2;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(rtol  *  FastMath.abs(x1),  atol)+  2;	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
73	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  rtol  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  rtol  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  rtol  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
74	[BUG]  [BUGGY]  x1  =  Math.max(Rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(Rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(Rtol  *  FastMath.abs(x1),  atol);	  x1    =    Math.max(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
75	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(min,  gTol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(min,  gTol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(min,  gTol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
76	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(min,  gTol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(min,  gTol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(min,  gTol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
77	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
78	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  /  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  /  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  /  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
79	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    f0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
80	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x1    +    f0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
81	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x1    +    f0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
82	[BUG]  [BUGGY]  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
83	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
84	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol)  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
85	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  x1));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  x1));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  x1));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
86	[BUG]  [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  2);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
87	[BUG]  [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  3);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  3);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol  +  3);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
88	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    f1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
89	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x0    +    f1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
90	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  f1  -  FastMath.max(f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x0    +    f1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
91	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(max,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(max,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(max,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(max,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
92	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f1,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f1,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f1,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(max,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
93	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	  if(x    ==    x1)    {    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
94	[BUG]  [BUGGY]  f0  =  computeRelativeValue(x1);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeRelativeValue(x1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeRelativeValue(x1);	  f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
95	[BUG]  [BUGGY]  f0  =  computeFunctionValue(x1);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeFunctionValue(x1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeFunctionValue(x1);	  f0    =    computeObjectiveValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
96	[BUG]  [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol);	  x1    =    Math.min(x1,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
97	[BUG]  [BUGGY]  x1  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol));	  x1    =    Math.min(x1,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
98	[BUG]  [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x2),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x2),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.min(x1,  rtol  *  FastMath.abs(x2),  atol));	  x1    =    Math.min(x1,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
99	[BUG]  [BUGGY]  x  =  Math.min(x  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.min(x  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.min(x  *  FastMath.abs(x1),  atol);	  x    =    Math.max(x    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
100	[BUG]  [BUGGY]  x1  =  Math.max(Rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(Rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(Rtol  *  FastMath.abs(x1),  atol));	  x1    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
101	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (f0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
102	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (f0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
103	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  max));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  max));	  x0    =    0.5    *    (f0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
104	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(min,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(min,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(min,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
105	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
106	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  /  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  /  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  /  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
107	[BUG]  [BUGGY]  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.25    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
108	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.25    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
109	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.25  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.25    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
110	[BUG]  [BUGGY]  x0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.25    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
111	[BUG]  [BUGGY]  x0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.25    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
112	[BUG]  [BUGGY]  f0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.25    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
113	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(getObjectiveValue(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
114	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.min(getObjectiveValue(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.min(getObjectiveValue(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.min(getObjectiveValue(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(getObjectiveValue(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
115	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getRelativeAccuracy(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getRelativeAccuracy(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(getRelativeAccuracy(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(getObjectiveValue(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
116	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  x1));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  x1));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  x1));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
117	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
118	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(f0  *  FastMath.abs(x),  max));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(f0  *  FastMath.abs(x),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(f0  *  FastMath.abs(x),  max));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
119	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x1    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
120	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x1    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [CE]  illegal  start  of  expression  [FE]                java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x1    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x2),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x2),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x2),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x2),    atol));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
123	[BUG]  [BUGGY]  rtol  =  Math.min(x0  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.min(x0  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.min(x0  *  FastMath.abs(x1),  atol);	  rtol    =    Math.min(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
124	[BUG]  [BUGGY]  rtol  =  Math.min(rtol  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.min(rtol  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.min(rtol  *  FastMath.abs(x1),  atol  +  1);	  rtol    =    Math.min(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
125	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
126	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
127	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  max));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x),  max));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
128	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.min(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.min(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.min(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
129	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  x1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  x1));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  x1));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
130	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
131	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  gTol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
132	[BUG]  [BUGGY]  x0  =  0.5  *  (gTol  +  FastMath.max(max,  x1  -  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (gTol  +  FastMath.max(max,  x1  -  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (gTol  +  FastMath.max(max,  x1  -  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
133	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(gTol,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(gTol,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(gTol,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
134	[BUG]  [BUGGY]  x  =  Math.max(x1  *  FastMath.abs(x1),  atol)+  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(x1  *  FastMath.abs(x1),  atol)+  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(x1  *  FastMath.abs(x1),  atol)+  1;	  x    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
135	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  relativeAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  relativeAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  relativeAccuracy));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    atol));    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
136	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x2)  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x2)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x2)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x2),    atol));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
137	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x2),    atol));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
138	[BUG]  [BUGGY]  x0  =  Math.max(x1  -  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(x1  -  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(x1  -  FastMath.abs(x1),  atol));	  x0    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
139	[BUG]  [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  FastMath.max(x0  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  FastMath.max(x0  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (relativeAccuracy  +  FastMath.max(x0  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    relativeAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
140	[BUG]  [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  FastMath.max(x1  /  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (relativeAccuracy  +  FastMath.max(x1  /  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (relativeAccuracy  +  FastMath.max(x1  /  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    relativeAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
141	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x0  -  FastMath.max(max  /  FastMath.abs(x1),  f1));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x0  -  FastMath.max(max  /  FastMath.abs(x1),  f1));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x0  -  FastMath.max(max  /  FastMath.abs(x1),  f1));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
142	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  fx));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  fx));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  fx));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
143	[BUG]  [BUGGY]  x0  =  Math.max(x1  /  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(x1  /  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(x1  /  FastMath.abs(x1),  atol);	  x0    =    Math.max(x1    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
144	[BUG]  [BUGGY]  x  =  Math.max(x  /  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(x  /  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(x  /  FastMath.abs(x1),  atol);	  x    =    Math.max(x    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
145	[BUG]  [BUGGY]  x0  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    Math.max(x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
146	[BUG]  [BUGGY]  x0  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  Math.max(x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    Math.max(x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
147	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  fx));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  fx));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  fx));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
148	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
149	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max  /  FastMath.abs(x1),  fx));  [CE]  illegal  start  of  expression  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max  /  FastMath.abs(x1),  fx));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(max  /  FastMath.abs(x1),  fx));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
150	[BUG]  [BUGGY]  x1  =  Math.max(g0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(g0  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(g0  *  FastMath.abs(x1),  atol));	  x1    =    Math.max(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
151	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
152	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
153	[BUG]  [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol)  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol)  +  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol)  +  1;	  x1    =    Math.min(x1,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
154	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  rtol  -  FastMath.max(len  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  rtol  -  FastMath.max(len  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  rtol  -  FastMath.max(len  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(len    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
155	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  FastMath.min(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  FastMath.min(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  FastMath.min(rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x    +    x1    -    FastMath.min(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
156	[BUG]  [BUGGY]  x0  =  Math.min(x0,  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0,  FastMath.max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0,  FastMath.max(rtol  *  FastMath.abs(x1),  atol);	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
157	[BUG]  [BUGGY]  x0  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol);	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
158	[BUG]  [BUGGY]  x  =  Math.max(x1  -  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(x1  -  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(x1  -  FastMath.abs(x1),  atol));	  x    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
159	[BUG]  [BUGGY]  rtol  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.min(relativeAccuracy  *  FastMath.abs(x1),  atol);	  rtol    =    Math.min(rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
160	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
161	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
162	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x2),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x2),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x2),  absoluteAccuracy));	  x0    =    0.5    *    (x0    +    absoluteAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
163	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x0    +    absoluteAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
164	[BUG]  [BUGGY]  x0  =  Math.min(x0,  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0,  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0,  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
165	[BUG]  [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol)  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol)  +  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol)  +  1;	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
166	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  x1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  x1);  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  absoluteAccuracy  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x),  x1);	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
167	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
168	[BUG]  [BUGGY]  x1  =  Math.max(x1  /  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x1  /  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x1  /  FastMath.abs(x1),  atol);	  x1    =    Math.max(x1    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
169	[BUG]  [BUGGY]  x1  =  Math.max(x1  -  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x1  -  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x1  -  FastMath.abs(x1),  atol);	  x1    =    Math.max(x1    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
170	[BUG]  [BUGGY]  f0  =  computeReGULAValue(x1);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeReGULAValue(x1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeReGULAValue(x1);	  f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
171	[BUG]  [BUGGY]  if(f0!=  null)  {  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(f0!=  null)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(f0!=  null)  {	  if(x    ==    x1)    {    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
172	[BUG]  [BUGGY]  if(f0  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(f0  ==  null)  {  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(f0  ==  null)  {	  if(x    ==    x1)    {    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
173	[BUG]  [BUGGY]  x  =  Math.max(x1  -  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(x1  -  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(x1  -  FastMath.abs(x1),  atol);	  x    =    Math.max(x1    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
174	[BUG]  [BUGGY]  x0  =  0.5  *  (f1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f1  +  f0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    f1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
175	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(max,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
176	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f1  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f1  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f1  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(max,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
177	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1),  atol);  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1),  atol);	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1)    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
178	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy);	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
179	[BUG]  [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);	  x    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
180	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  atol));  f0  =  computeObjectiveValue(x0);	  x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
181	[BUG]  [BUGGY]  x1  =  Math.max(x1  -  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x1  -  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x1  -  FastMath.abs(x1),  atol));	  x1    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
182	[BUG]  [BUGGY]  x1  =  Math.max(x1  /  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x1  /  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x1  /  FastMath.abs(x1),  atol));	  x1    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
183	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(len  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(len  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(len  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(Rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
184	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
185	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  f0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
186	[BUG]  [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol  +  1);	  rtol    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
187	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    fx    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
188	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
189	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f1  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f1  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy,  f1  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
190	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  rtol  *  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  rtol  *  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  rtol  *  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
191	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
192	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
193	[BUG]  [BUGGY]  x0  =  0.5  *  (f1  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f1  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f1  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (f1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
194	[BUG]  [BUGGY]  x0  =  0.5  *  (Factory  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (Factory  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (Factory  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (f1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
195	[BUG]  [BUGGY]  x0  =  0.5  *  (FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (f1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
196	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(getObjectiveValue(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
197	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getRelativeValue(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getRelativeValue(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(getRelativeValue(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(getObjectiveValue(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
198	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  rtol  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  rtol  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  rtol  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
199	[BUG]  [BUGGY]  x0  =  0.5  *  (f1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f1  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (f0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
200	[BUG]  [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (f0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (f0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
201	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x),  atol));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    atol));    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
202	[BUG]  [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol)+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol)+  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  atol)+  1;	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol)    +    1;    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
203	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  f1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x0    +    f1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
204	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  f1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    f1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
205	[BUG]  [BUGGY]  f0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  0.25  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.25    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
206	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
207	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
208	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(gTotal  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(gTotal  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(gTotal  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
209	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(Rtol  *  FastMath.abs  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(Rtol  *  FastMath.abs  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(Rtol  *  FastMath.abs	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(Rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
210	[BUG]  [BUGGY]  x  =  Math.max(len  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(len  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(len  *  FastMath.abs(x1),  atol));	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
211	[BUG]  [BUGGY]  x0  =  Math.min(x0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0  *  FastMath.abs(x1),  atol));	  x0    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
212	[BUG]  [BUGGY]  x0  =  Math.min(x0,  l  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0,  l  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0,  l  *  FastMath.abs(x1),  atol));	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
213	[BUG]  [BUGGY]  x1  =  Math.max(len  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(len  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(len  *  FastMath.abs(x1),  atol));	  x1    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
214	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  relativeAccuracy  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  relativeAccuracy  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  relativeAccuracy  /  FastMath.max(relativeAccuracy  *  FastMath.abs(x),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    relativeAccuracy    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
215	[BUG]  [BUGGY]  if(f0  ==  f1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(f0  ==  f1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(f0  ==  f1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x2);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
216	[BUG]  [BUGGY]  x  =  Math.max(len  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(len  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(len  *  FastMath.abs(x1),  atol);	  x    =    Math.max(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
217	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(len  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(len  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(len  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(len    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
218	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x2),    atol));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
219	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x2),    atol));    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
220	[BUG]  [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol)-  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol)-  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.min(x1,  rtol  *  FastMath.abs(x1),  atol)-  1;	  x1    =    Math.min(x1,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
221	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
222	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  f0  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  max));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    max));    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
223	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    fx    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
224	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  /  FastMath.max(f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    fx    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
225	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  -  FastMath.max(FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    fx    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
226	[BUG]  [BUGGY]  x0  =  0.5  *  (FastMath.max(x0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (FastMath.max(x0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (FastMath.max(x0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (f0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
227	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  f0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    f0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
228	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  f0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    f0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
229	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  f0  -  FastMath.max(FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  f0  -  FastMath.max(FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    f0    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
230	[BUG]  [BUGGY]  x  =  Math.max(x  /  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.max(x  /  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.max(x  /  FastMath.abs(x1),  atol));	  x    =    Math.max(x    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
231	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1)/  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1)/  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1)/  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
232	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1)  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1)  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x0  +  x1)-  FastMath.max(f0  *  FastMath.abs(x1)	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x0    +    x1)    -    FastMath.max(f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
233	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  /  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy));	  x0    =    0.5    *    (x1    +    x0    /    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
234	[BUG]  [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  }  [CE]  illegal  start  of  expression  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  }  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  }	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(getObjectiveValue(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
235	[BUG]  [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol)  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol)  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(getObjectiveValue(x1),  atol)	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(getObjectiveValue(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
236	[BUG]  [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy);	  x0    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
237	[BUG]  [BUGGY]  if(inverted)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(inverted)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(inverted)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
238	[BUG]  [BUGGY]  x0  =  0.5  *  (x  +  rtol  *  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  illegal  start  of  expression  [FE]            java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x  +  rtol  *  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x  +  rtol  *  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	  x0    =    0.5    *    (x    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
239	[BUG]  [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol)-  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol)-  1;  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.min(x0,  rtol  *  FastMath.abs(x1),  atol)-  1;	  x0    =    Math.min(x0,    rtol    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
240	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  g2,  rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  g2,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  g2,  rtol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(min,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
241	[BUG]  [BUGGY]  x1  =  Math.min(x0  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.min(x0  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.min(x0  *  FastMath.abs(x1),  atol);	  x1    =    Math.max(x0    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
242	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(gTol,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(gTol,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(gTol,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    gTol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
243	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(super.relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
244	[BUG]  [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x1  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x1  *  FastMath.abs(x1),  atol  +  1);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
245	[BUG]  [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(x0  *  FastMath.abs(x1),  atol  +  1);	  x1    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
246	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  0,  atol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  0,  atol  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy,  0,  atol  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
247	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(relativeAccuracy,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
248	[BUG]  [BUGGY]  x  =  Math.min(x0  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.min(x0  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.min(x0  *  FastMath.abs(x1),  atol);	  x    =    Math.max(x1    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
249	[BUG]  [BUGGY]  f0  =  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  not  a  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  Math.max(x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    Math.max(x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  not  a  statement	82	None	replace
250	[BUG]  [BUGGY]  x1  =  Math.max(len  *  FastMath.abs(x1),  atol);  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x1  =  Math.max(len  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x1  =  Math.max(len  *  FastMath.abs(x1),  atol);	  x1    =    Math.max(x1    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  not  a  statement	27	None	replace
251	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  gTotal  *  FastMath.abs(x1),  atol));  [CE]  not  a  statement  [FE]                      AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  gTotal  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(max,  gTotal  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.max(min,    rtol    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  not  a  statement	37	None	replace
252	[BUG]  [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(x  ==  x1)  {  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  not  a  statement	57	None	replace
253	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);	  x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  not  a  statement	52	None	replace
254	[BUG]  [BUGGY]  rtol  =  Math.max(x  *  FastMath.abs(x1),  atol);  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(x  *  FastMath.abs(x1),  atol);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(x  *  FastMath.abs(x1),  atol);	  rtol    =    Math.max(rtol    *    FastMath.abs(x),    atol);    	non-compiled	[CE]  not  a  statement	15	None	replace
255	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1,  absoluteAccuracy),  inverted));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1,  absoluteAccuracy),  inverted));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1,  absoluteAccuracy),  inverted));	  x0    =    0.5    *    (x1    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  not  a  statement	83	None	replace
256	[BUG]  [BUGGY]  f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol));  [CE]  not  a  statement  [FE]              java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  computeObjectiveValue(x0);  x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x2),  atol));	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x2),    atol));    f0    =    computeObjectiveValue(x0);    	non-compiled	[CE]  not  a  statement	41	None	replace
257	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x1  +  fx  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  fx  -  FastMath.min(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	  x0    =    0.5    *    (x1    +    x0    -    FastMath.min(relativeAccuracy    *    FastMath.abs(x1),    absoluteAccuracy));    	non-compiled	[CE]  not  a  statement	75	None	replace
258	[BUG]  [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastM  [CE]  not  a  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastM  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastM	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  not  a  statement	66	None	replace
259	[BUG]  [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	if(x  ==  x1)  {  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  x0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs	          x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    x0    =    0.5    *    (x    +    x1    -    FastMath.max(relativeAccuracy    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  not  a  statement	66	None	replace
260	[BUG]  [BUGGY]  x0  =  Math.max(x1  *  FastMath.abs(x1),  atol  +  1);  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  Math.max(x1  *  FastMath.abs(x1),  atol  +  1);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  Math.max(x1  *  FastMath.abs(x1),  atol  +  1);	  x0    =    Math.max(rtol    *    FastMath.abs(x1),    atol    +    1);    	non-compiled	[CE]  not  a  statement	77	None	replace
261	[BUG]  [BUGGY]  x  =  Math.min(x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x  =  Math.min(x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x  =  Math.min(x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  x    =    Math.max(x1    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  not  a  statement	47	None	replace
262	[BUG]  [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy);  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	rtol  =  Math.max(relativeAccuracy  *  FastMath.abs(x1),  relativeAccuracy);	  rtol    =    Math.max(relativeAccuracy    *    FastMath.abs(x1),    atol);    	non-compiled	[CE]  not  a  statement	62	None	replace
263	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  x0  =  0.5  *  (x0  +  f1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));  [BUGGY]      f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  f1  -  FastMath.max(max,  f0  *  FastMath.abs(x1),  atol));	  x0    =    0.5    *    (x0    +    x1    -    FastMath.max(max,    f0    *    FastMath.abs(x1),    atol));    	non-compiled	[CE]  not  a  statement	88	None	replace
264	[BUG]  [BUGGY]  f0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  not  a  statement  [FE]        java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));	  if(x    ==    x1)    {    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  not  a  statement	86	None	replace
265	[BUG]  [BUGGY]  f0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  not  a  statement  [FE]          java.lang.Exception:  Unexpected  exception      [CONTEXT]      switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {      [BUGGY]  f0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]      x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	f0  =  0.5  *  (x  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	  if(x    ==    x1)    {    x0    =    0.5    *    (x    +    x1    -    FastMath.max(rtol    *    FastMath.abs(x1),    atol));    f0    =    computeObjectiveValue(x0);    }    	non-compiled	[CE]  not  a  statement	86	None	replace
