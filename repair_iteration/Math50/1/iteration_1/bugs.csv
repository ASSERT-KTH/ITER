bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver  [FE]    AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	non-compiled	[CE]  relativeAccuracy  has  private  access  in  BaseAbstractUnivariateRealSolver	1	None	replace
2	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	add	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
3	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]        AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	1	1	replace
4	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  rtol  *  FastMath.abs(x1),  atol));  [CE]  cannot  find  symbol  max  [FE]          AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(max,  rtol  *  FastMath.abs(x1),  atol));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	non-compiled	[CE]  cannot  find  symbol  max	1	None	replace
5	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	add	    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	2	1	add
6	[BUG]  [BUGGY]    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [FE]  java.lang.Exception:  Unexpected  exception  [FE]    AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	2	1	add
7	[BUG]  [BUGGY]  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	add	    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	2	1	add
8	[BUG]  [BUGGY]    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [FE]  java.lang.Exception:  Unexpected  exception  [FE]      AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x0  =  0.5  *  (x  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);		compilable	  [FE]  java.lang.Exception:  Unexpected  exception  	2	1	add
9	[BUG]  [BUGGY]    x  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [CE]  cannot  assign  a  value  to  final  variable  x  [FE]        AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x  =  Math.max(rtol  *  FastMath.abs(x1),  atol);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  x	2	None	add
10	[BUG]  [BUGGY]    x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
11	[BUG]  [BUGGY]    x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x0  =  Math.max(rtol  *  FastMath.abs(x1),  atol));		non-compiled	[CE]  illegal  start  of  expression	2	None	add
12	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  atol));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(f0  *  FastMath.abs(x1),  atol));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x1  +  x0  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  atol));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x1  +  x0  -  FastMath.max(super.relativeAccuracy  *  FastMath.abs(x1),  atol));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]    x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
16	[BUG]  [BUGGY]    x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x1  =  Math.max(rtol  *  FastMath.abs(x1),  atol));		non-compiled	[CE]  illegal  start  of  expression	2	None	add
17	[BUG]  [BUGGY]    x  =  Math.max(rtol  *  FastMath.abs(x1),  atol));  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    x  =  Math.max(rtol  *  FastMath.abs(x1),  atol));  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    x  =  Math.max(rtol  *  FastMath.abs(x1),  atol));		non-compiled	[CE]  illegal  start  of  expression	2	None	add
18	[BUG]  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));  [BUGGY]  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(relativeAccuracy  *  FastMath.abs(x1),  absoluteAccuracy));	x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]    rtol  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  switch  (method)  {  case  ILLINOIS:  f0  *=  0.5;  break;  case  PEGASUS:  f0  *=  f1  /  (f1  +  fx);  break;  case  REGULA_FALSI:  if  (x  ==  x1)  {  [BUGGY]    rtol  =  Math.max(rtol  *  FastMath.abs(x1),  atol);  [BUGGY]  x0  =  0.5  *  (x0  +  x1  -  FastMath.max(rtol  *  FastMath.abs(x1),  atol));  f0  =  computeObjectiveValue(x0);  }  break;  default:  throw  new  MathInternalError();  }  }  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	1.0	188	188	1	replace	    rtol  =  Math.max(rtol  *  FastMath.abs(x1),  atol);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
