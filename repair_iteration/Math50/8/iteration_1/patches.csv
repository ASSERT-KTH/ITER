bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  computeFunctionValue(atol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  computeFunctionValue(atol);	      final    double    f0    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  computeFunctionValue(x0);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  computeFunctionValue(x0);	      final    double    f0    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(f1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  computeFunctionValue(f1);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  computeFunctionValue(f1);	      final    double    f0    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(fx);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  computeFunctionValue(fx);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  computeFunctionValue(fx);	      final    double    f0    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  final  double  rtol  =  getRangeRelativeAccuracy()  +  atol;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRangeRelativeAccuracy()  +  atol;  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRangeRelativeAccuracy()  +  atol;	  final    double    rtol    =    getRangeRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy()  +  atol;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  getFunctionValueAccuracy()  +  atol;  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFunctionValueAccuracy()  +  atol;	      final    double    f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy()  +  atol;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy()  +  atol;  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRawRelativeAccuracy()  +  atol;	  final    double    rtol    =    getRawRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  atol  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.min(f0,  atol  +  1);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  atol  +  1);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  final  double  f0  =  Math.max(f0,  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.max(f0,  atol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.max(f0,  atol);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  atol);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  atol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FunctionValueAccuracy.MIN_VALUE,  atol);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  final  double  f1  =  getFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f1  =  getFunctionValueAccuracy();  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getFunctionValueAccuracy();	      final    double    f1    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
12	[BUG]  [BUGGY]  final  double  f1  =  getRelativeAccuracy()  +  atol;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f1  =  getRelativeAccuracy()  +  atol;  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f1  =  getRelativeAccuracy()  +  atol;	      final    double    f1    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(ftol);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  computeObjectiveValue(ftol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  computeObjectiveValue(ftol);	      final    double    f0    =    computeObjectiveValue(atol);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  final  double  rtol  =  getRawAccuracy();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRawAccuracy();  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRawAccuracy();	  final    double    rtol    =    getRangeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  final  double  f0  =  getLocalFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  getLocalFunctionValueAccuracy();  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getLocalFunctionValueAccuracy();	      final    double    f0    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
16	[BUG]  [BUGGY]  final  double  f0  =  getRelativeAccuracy()  +  atol;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  getRelativeAccuracy()  +  atol;  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRelativeAccuracy()  +  atol;	      final    double    f0    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  *  atol;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  *  atol;  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRelativeAccuracy()  *  atol;	  final    double    rtol    =    getRelativeAccuracy()    +    atol;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  /  atol;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  /  atol;  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRelativeAccuracy()  /  atol;	  final    double    rtol    =    getRelativeAccuracy()    +    atol;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  final  double  rtol  =  getRangeAccuracy()  +  atol;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRangeAccuracy()  +  atol;  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRangeAccuracy()  +  atol;	  final    double    rtol    =    getRangeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  final  double  rtol  =  getRoleAccuracy()  +  atol;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRoleAccuracy()  +  atol;  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRoleAccuracy()  +  atol;	      final    double    rtol    =    getRoleAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy().doubleValue();  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRawRelativeAccuracy().doubleValue();	  final    double    rtol    =    getRawRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  final  double  rtol  =  getRangeRelativeAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRangeRelativeAccuracy().doubleValue();  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRangeRelativeAccuracy().doubleValue();	  final    double    rtol    =    getRangeRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  final  double  f0  =  computeObjectiveValue(x1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  computeObjectiveValue(x1);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  computeObjectiveValue(x1);	      final    double    f0    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  atol);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  atol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FUNctionValueAccuracy.DEFAULT_ABSOLUTE_ACCURACY,  atol);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy.MIN_VALUE,  atol);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.min(FUNctionValueAccuracy.MIN_VALUE,  atol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(FUNctionValueAccuracy.MIN_VALUE,  atol);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  final  double  f0  =  Math.min(f0,  ftol);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.min(f0,  ftol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(f0,  ftol);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  getFunctionValueAccuracy().doubleValue();  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getFunctionValueAccuracy().doubleValue();	      final    double    f0    =    getFunctionValueAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy(atol);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRawRelativeAccuracy(atol);  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRawRelativeAccuracy(atol);	  final    double    rtol    =    getRawRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  +  ftol;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRelativeAccuracy()  +  ftol;  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRelativeAccuracy()  +  ftol;	  final    double    rtol    =    getRelativeAccuracy()    +    atol;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  atol);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  atol);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  atol);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  f0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  Math.min(relativeAccuracy,  f0);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  Math.min(relativeAccuracy,  f0);	      final    double    f0    =    Math.min(f0,    atol);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  final  double  f0  =  getRelativeFunctionValueAccuracy();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  getRelativeFunctionValueAccuracy();  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  getRelativeFunctionValueAccuracy();	      final    double    f0    =    getRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  final  double  rtol  =  getRangeInitialValueAccuracy();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  rtol  =  getRangeInitialValueAccuracy();  [BUGGY]        boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  rtol  =  getRangeInitialValueAccuracy();	  final    double    rtol    =    getRangeRelativeAccuracy();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  final  double  f0  =  computeFunctionValue(x);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (f1  ==  0.0)  {  return  x1;  }  verifyBracketing(x0,  x1);  final  double  ftol  =  getFunctionValueAccuracy();  final  double  atol  =  getAbsoluteAccuracy();    [BUGGY]  final  double  f0  =  computeFunctionValue(x);  [BUGGY]    final  double  rtol  =  getRelativeAccuracy();    boolean  inverted  =  false;  while  (true)  {  final  double  x  =  x1  -  ((f1  *  (x1  -  x0))  /  (f1  -  f0));  final  double  fx  =  computeObjectiveValue(x);  [CLASS]  BaseSecantSolver  Method  [METHOD]  doSolve  [RETURN_TYPE]  double  [VARIABLES]  AllowedSolution  allowed  allowedSolution  Method  ILLINOIS  PEGASUS  REGULA_FALSI  method  boolean  inverted  double  DEFAULT_ABSOLUTE_ACCURACY  absoluteAccuracy  atol  f0  f1  ftol  functionValueAccuracy  fx  max  min  relativeAccuracy  rtol  startValue  x  x0  x1  	projects/Math50/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver.java	0.3779644730092272	151	151	1	replace	final  double  f0  =  computeFunctionValue(x);	      final    double    f0    =    computeFunctionValue(x1);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
