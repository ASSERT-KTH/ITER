bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
2	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
3	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
4	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
5	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
6	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
7	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
8	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
9	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
10	[BUG]  [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
11	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
12	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(0);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(0);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(0);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
13	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
14	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
15	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
16	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
17	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
18	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
19	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
20	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
21	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
22	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
23	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
24	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
25	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
26	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
27	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  2);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  2);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
28	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
29	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
30	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
31	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
32	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
33	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
34	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
35	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
36	[BUG]  [BUGGY]  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
37	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
38	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
39	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
40	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpars  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpars  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpars	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
41	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
42	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if(unpars  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if(unpars  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if(unpars	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
43	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseableExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseableExtra();  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseableExtra();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
44	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
45	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
46	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
47	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
48	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
49	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
50	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
51	[BUG]  [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
52	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
53	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
54	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
55	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
56	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
57	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
58	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {    [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [BUGGY]    for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
