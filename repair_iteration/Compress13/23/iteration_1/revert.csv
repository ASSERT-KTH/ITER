projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraField)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipShort,ZipExtraField>extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if(unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();if(unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=getUnparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)super.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(4);
