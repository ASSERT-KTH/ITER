bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
2	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>();	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
3	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
4	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
5	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>().clone();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>().clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>().clone();	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
6	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(0);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(0);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
7	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);	  ExtraFields    extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
8	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);	  ExtraFields    extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
9	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);	  ExtraFields    extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
10	[BUG]  [BUGGY]  Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();	  ExtraFields    extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
11	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
12	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
13	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
14	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
15	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
16	[BUG]  [BUGGY]  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra  =(UnparseableExtraFieldData)fields[i];	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
18	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields);	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
20	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
21	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
23	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
24	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(0);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(0);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
25	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
26	[BUG]  [BUGGY]  unparseableExtra  =  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra  =  getUnparseableExtra();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra  =  getUnparseableExtra();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
27	[BUG]  [BUGGY]  UnparseableExtraFieldData[]  fields  =  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData[]  fields  =  getUnparseableExtra();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData[]  fields  =  getUnparseableExtra();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseableExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseableExtra();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseableExtra();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
29	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
30	[BUG]  [BUGGY]  UnparseableExtra  =  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtra  =  getUnparseableExtra();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtra  =  getUnparseableExtra();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
31	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
32	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipExtraField>(fields);	  extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
33	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);	  extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
35	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  2);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  2);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  2);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
37	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  2);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  2);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  2);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
38	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
39	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
40	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
41	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
42	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
43	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
44	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  this);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  this);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  this);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
45	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  true);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  true);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
46	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  null);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  null);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
47	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  false);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  false);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
48	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
49	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
50	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
51	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
52	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
53	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0];	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
54	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields[0].length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields[0].length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields[0].length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1,    fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
55	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length  +  1);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1,    fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
56	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  1,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  1,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  1,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1,    fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
57	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields[0]);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields[0]);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1,    fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
58	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length  *  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length  *  2);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1,    fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
59	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
60	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
61	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.super.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.super.clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.super.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
62	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].clone();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
63	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[super.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[super.clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[super.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
64	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[1].clone();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[1].clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[1].clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
65	[BUG]  [BUGGY]  ExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
66	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  false);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
67	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length,  true);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length,  true);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
68	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  null);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  null);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  null);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
69	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  true);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  true);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
70	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.externalAttributes);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.externalAttributes);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
71	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
72	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
73	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
74	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
75	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
76	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  fields.length);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
77	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  +  1);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
78	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
79	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  -  1);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
80	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  *  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  *  2);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
81	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  +  1,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  +  1,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length  +  1,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
82	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
83	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
84	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
86	[BUG]  [BUGGY]  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
87	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
89	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
91	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
92	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  setExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  setExtra();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  setExtra();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
93	[BUG]  [BUGGY]  Set  <  ZipShort,  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  Set  <  ZipShort,  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	Set  <  ZipShort,  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>();	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
94	[BUG]  [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(fields);	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
95	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
96	[BUG]  [BUGGY]  List  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  List  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	List  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>();	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
97	[BUG]  [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(fields.length);	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
98	[BUG]  [BUGGY]  List  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  List  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	List  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
99	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  3);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  3);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  3);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
100	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
101	[BUG]  [BUGGY]  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
102	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
103	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtraFields  =(UnparseableExtraFieldData)fields[i].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
104	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields[]  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields[]  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtraFields[]  =(UnparseableExtraFieldData)fields[i].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
105	[BUG]  [BUGGY]  unparseableExtraFields[0]  =(ZipExtraFieldData)fields[0].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtraFields[0]  =(ZipExtraFieldData)fields[0].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtraFields[0]  =(ZipExtraFieldData)fields[0].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
106	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields  =(UnparseableExtraFieldData)fields[0].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields  =(UnparseableExtraFieldData)fields[0].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtraFields  =(UnparseableExtraFieldData)fields[0].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
107	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(6);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(6);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(6);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
108	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
109	[BUG]  [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields);	  extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
110	[BUG]  [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields.length);	  extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
111	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();	  extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
112	[BUG]  [BUGGY]  extraFields  =  new  TreeMap  <  ZipExtraField,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  TreeMap  <  ZipExtraField,  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  TreeMap  <  ZipExtraField,  ZipExtraField>();	  extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
113	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
114	[BUG]  [BUGGY]  unparseableExtra[0]  =  new  ZipExtraField(fields[0].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra[0]  =  new  ZipExtraField(fields[0].getHeaderId());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra[0]  =  new  ZipExtraField(fields[0].getHeaderId());	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
115	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
116	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[0].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[0].getHeaderId());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[0].getHeaderId());	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
117	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields);	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
119	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(ZipExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(ZipExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(ZipExtraFieldData)fields[i].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
120	[BUG]  [BUGGY]  unparseableExtra  =(ZipExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra  =(ZipExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra  =(ZipExtraFieldData)fields[i].getHeaderId();	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
121	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(5);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(5);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(5);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
122	[BUG]  [BUGGY]  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>(fields);	  extraFields    =    new    LinkedList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
123	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
124	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
125	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
126	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
127	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
128	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  1);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
130	[BUG]  [BUGGY]  unparseableExtra  =(ZipExtraField)fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra  =(ZipExtraField)fields[i];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra  =(ZipExtraField)fields[i];	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
131	[BUG]  [BUGGY]  UnparseableExtraField  unparseableExtra  =(UnparseableExtraField)fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraField  unparseableExtra  =(UnparseableExtraField)fields[i];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraField  unparseableExtra  =(UnparseableExtraField)fields[i];	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
132	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraField)fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraField)fields[i];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraField)fields[i];	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
133	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length,  false);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length,  false);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
134	[BUG]  [BUGGY]  ExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  true);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
135	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  null,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
136	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
137	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
138	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField,  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField,  ZipExtraField>();	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
139	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
140	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
141	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this.unparseableExtra());	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
142	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
143	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  setExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  setExtra());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  setExtra());	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
144	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra(),  fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra(),  fields);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
145	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  2);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
146	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  1,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
147	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
148	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId()  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId()  +  1);	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
149	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  +  1);	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
150	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  -  1);	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
151	[BUG]  [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  fields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  fields  =  new  ArrayList  <  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ArrayList  <  ZipShort,  ZipExtraField>  fields  =  new  ArrayList  <  ZipExtraField>(fields.length);	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
152	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  *  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  *  2);	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
153	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
154	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if(unpar  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if(unpar  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  if(unpar	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
155	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
156	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
157	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
158	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
159	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
160	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpars!=  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpars!=  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpars!=	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
161	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
162	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  ArrayList  <  ZipExtraField>();	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
163	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields.length);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
164	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
165	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
166	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2  +  1);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
167	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2  -  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2  -  1);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
168	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  4);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  4);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  4);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
169	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  /  2);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  /  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  /  2);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
170	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  3);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  3);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  3);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
171	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtraFields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtraFields);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
172	[BUG]  [BUGGY]  UnparseableExtraFieldData[]  extraFields  =  getExtraFields();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData[]  extraFields  =  getExtraFields();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData[]  extraFields  =  getExtraFields();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
173	[BUG]  [BUGGY]  UnparseableExtraFieldData[]  extraFields  =  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData[]  extraFields  =  getUnparseableExtra();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData[]  extraFields  =  getUnparseableExtra();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
174	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseibleExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseibleExtra();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  getUnparseibleExtra();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
175	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraField)fields[i];  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
176	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraField)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraField)fields[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraField)fields[i];  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
177	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraField)fields[i];  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraField)fields[i];  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraField)fields[i];  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
178	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraField(fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraField(fields[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraField(fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
179	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraField(fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraField(fields[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraField(fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraField)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
180	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra().clone());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra().clone());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra().clone());	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
181	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  internalAttributes);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  internalAttributes);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
182	[BUG]  [BUGGY]  extraFields  =  new  TreeMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  TreeMap  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  TreeMap  <  ZipExtraField>();	  extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
183	[BUG]  [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(4);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(4);	  extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
184	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra()  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra()  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra()	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
185	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra()  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra()  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra()	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
187	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
188	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
190	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
191	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparse);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparse);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparse);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
192	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
193	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(fields);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
194	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
195	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (ZipExtraFieldData)fields[i].getHeaderId();  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
196	[BUG]  [BUGGY]  if(unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
199	[BUG]  [BUGGY]  if(unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
200	[BUG]  [BUGGY]  List  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  List  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	List  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>();	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
201	[BUG]  [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>();	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
202	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =(ZipExtraFieldData)fields[i].getHeaderId();  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
203	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraFieldData(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraFieldData(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraFieldData(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =(ZipExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
204	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  -  2);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
205	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
206	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
207	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
208	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
209	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
210	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
211	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
212	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
213	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  ZipExtraFieldData(fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
214	[BUG]  [BUGGY]  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>(fields.length);	  extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
215	[BUG]  [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields.length  +  1,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1,    fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
216	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
217	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
218	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
219	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
220	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
221	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
222	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtraFields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtraFields);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
223	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
224	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
225	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
226	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
227	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();	  ExtraFields    extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
228	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
229	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
230	[BUG]  [BUGGY]  extraFields  =  new  LinkedList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedList  <  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
231	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(7);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(7);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(7);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
232	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
233	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedList  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedList  <  ZipExtraField>();	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
234	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
235	[BUG]  [BUGGY]  Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length);	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
236	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  +  2);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
237	[BUG]  [BUGGY]  ExtraField  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
238	[BUG]  [BUGGY]  UnparseableExtraFieldData[]  fields  =  new  UnparseableExtraFieldData[fields.length];  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData[]  fields  =  new  UnparseableExtraFieldData[fields.length];  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData[]  fields  =  new  UnparseableExtraFieldData[fields.length];	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
239	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i]);  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
240	[BUG]  [BUGGY]  unparseableExtra[0]  =  new  ZipExtraField(fields[0].getHeaderId()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  unparseableExtra[0]  =  new  ZipExtraField(fields[0].getHeaderId()  +  1);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	unparseableExtra[0]  =  new  ZipExtraField(fields[0].getHeaderId()  +  1);	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
241	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra());	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
242	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);	  extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
243	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  sourceName);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  sourceName);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
244	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
245	[BUG]  [BUGGY]  Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	Collection  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  ExtraFields    extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
246	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
247	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
248	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  setExtra();  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    setExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
249	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
250	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i];  if(unpar	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i];    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
251	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
252	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeader	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
253	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
254	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId()	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
255	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
256	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderI	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    UnparseableExtraFieldData    unparseableExtra    =    (UnparseableExtraFieldData)fields[i].getHeaderId();    if(unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
257	[BUG]  [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraField[]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra());	  ExtraField[]    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
258	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
259	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
260	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  fields);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  this,  fields);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
261	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
262	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2,  fields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2,  fields.length);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields.length  *  2,  fields.length);	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields.length    +    1,    fields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
263	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
264	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.fields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.fields.clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.fields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
265	[BUG]  [BUGGY]  UnparseableExtraFieldData  super  =(UnparseableExtraFieldData)super.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData  super  =(UnparseableExtraFieldData)super.clone();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData  super  =(UnparseableExtraFieldData)super.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
266	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
267	[BUG]  [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ArrayList  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  ArrayList    <    ZipShort,    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
268	[BUG]  [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtraFactory());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtraFactory());  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtraFactory());	  extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields,    unparseableExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
269	[BUG]  [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	ExtraFields  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);	  ExtraFields    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
270	[BUG]  [BUGGY]  UnparseableExtraFieldData[]  fields  =  new  UnparseableExtraFieldData[fields.length].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {      [BUGGY]  UnparseableExtraFieldData[]  fields  =  new  UnparseableExtraFieldData[fields.length].getHeaderId();  [BUGGY]      for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	UnparseableExtraFieldData[]  fields  =  new  UnparseableExtraFieldData[fields.length].getHeaderId();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra    =    getUnparseableExtra();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
