projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraField)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipShort,ZipExtraField>extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if(unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();if(unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=getUnparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)super.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>().clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newArrayList<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newArrayList<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newArrayList<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292Collection<ZipShort,ZipExtraField>extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra=(UnparseableExtraFieldData)fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getLeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getLeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=getUnparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra=getUnparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldData[]fields=getUnparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra=getUnparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtra=getUnparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipExtraField>extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+2);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+2);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newArrayList<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newArrayList<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[0];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields[0].length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields[0]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+1,fields.length*2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)this.super.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[0].clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[super.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[1].clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this.externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newArrayList<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields.length,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields.length-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields.length*2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields.length+1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<field.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[0].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292Set<ZipShort,ZipExtraField>extraFields=newHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipShort,ZipExtraField>extraFields=newArrayList<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292List<ZipShort,ZipExtraField>extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipShort,ZipExtraField>extraFields=newArrayList<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292List<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtraFields=(UnparseableExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtraFields[]=(UnparseableExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtraFields[0]=(ZipExtraFieldData)fields[0].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtraFields=(UnparseableExtraFieldData)fields[0].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newTreeMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newTreeMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newTreeMap<ZipExtraField,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra[0]=newZipExtraField(fields[0].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[0].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(ZipExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra=(ZipExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedList<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this.unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this.unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraField)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra=(ZipExtraField)fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldunparseableExtra=(UnparseableExtraField)fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraField)fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,null,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this.unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,setExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length-2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length-1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields.length-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipShort,ZipExtraField>fields=newArrayList<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields.length*2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();if
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();if(unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if(unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if(unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if(unpars!=
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*2+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*2-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length/2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldData[]extraFields=getExtraFields();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldData[]extraFields=getUnparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=getUnparseibleExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraField)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraField)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraField)fields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=newZipExtraField(fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=newZipExtraField(fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newTreeMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newTreeMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=newZipExtraFieldData(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparse);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)super.get(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(unparseableExtra!=null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(unparseableExtra!=null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292List<ZipShort,ZipExtraField>extraFields=newLinkedList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipShort,ZipExtraField>extraFields=newLinkedList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtraFields[i]=newZipExtraFieldData(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length-2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=newZipExtraFieldData(fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=newZipExtraFieldData(fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedList<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newArrayList<ZipShort,ZipExtraField>(fields.length+1,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,unparseableExtraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292Collection<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length+2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldextraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldData[]fields=newUnparseableExtraFieldData[fields.length];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=newUnparseableExtraFieldData(fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292unparseableExtra[0]=newZipExtraField(fields[0].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(fields,unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,sourceName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292Collection<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra=(UnparseableExtraFieldData)fields[i];setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];if(unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields==null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields!=null){for(inti=0;i<fields.length;i++){UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraField[]extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,this,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(extraFields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length*2,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)this.extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)this.fields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldDatasuper=(UnparseableExtraFieldData)super.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ArrayList<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtraFactory());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292ExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java292UnparseableExtraFieldData[]fields=newUnparseableExtraFieldData[fields.length].getHeaderId();
