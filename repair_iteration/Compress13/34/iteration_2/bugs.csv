bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  createExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  createExtraFields(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  true);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
2	[BUG]  [BUGGY]  createExtraFields(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  createExtraFields(local,  false,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  extra.length);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
3	[BUG]  [BUGGY]  setExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
4	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
5	[BUG]  [BUGGY]  gpb.setExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  gpb.setExtraFields(local,  false);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	gpb.setExtraFields(local,  false);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
6	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
7	[BUG]  [BUGGY]  setExtra(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtra(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
8	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
9	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
10	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
11	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
12	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
13	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
14	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
15	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
16	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
17	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
18	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
19	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
20	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
21	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
22	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
23	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
24	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
25	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
26	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
27	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  rawName);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
28	[BUG]  [BUGGY]  setExtraFields(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  extra.length);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
29	[BUG]  [BUGGY]  setExtraFields(local,  false,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  Locale.getDefault());  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  Locale.getDefault());	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
30	[BUG]  [BUGGY]  setExtraFields(extra,  false);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(extra,  false);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(extra,  false);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
31	[BUG]  [BUGGY]  setExtraFields(local,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  local.length);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
32	[BUG]  [BUGGY]  setExtraFields(local,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  null);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  null);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
33	[BUG]  [BUGGY]  setExtraFields(local,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  null);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  null);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
34	[BUG]  [BUGGY]  validateExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  true);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
35	[BUG]  [BUGGY]  validateExtraFields(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  extra.length);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
36	[BUG]  [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault());  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  Locale.getDefault());	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
37	[BUG]  [BUGGY]  validateExtraFields(local,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  null);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  null);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
38	[BUG]  [BUGGY]  validateExtraFields(local,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  local.length);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
39	[BUG]  [BUGGY]  validateExtraFields(local,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  true);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
40	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
41	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
42	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
43	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
44	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
45	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
46	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
47	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
48	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
49	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
50	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
51	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
52	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
53	[BUG]  [BUGGY]  mergeExtraFields(local,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  local.length);	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
54	[BUG]  [BUGGY]  mergeExtraFields(local,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  rawName);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  rawName);	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
55	[BUG]  [BUGGY]  mergeExtraFields(local,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  extra);	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
56	[BUG]  [BUGGY]  mergeExtraFields(local,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  gpb);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  gpb);	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
57	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap());  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap());	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
58	[BUG]  [BUGGY]  setExtra(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtra(local,  false,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  extra.length);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
59	[BUG]  [BUGGY]  unparseableExtra(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  unparseableExtra(local,  false);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	unparseableExtra(local,  false);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
60	[BUG]  [BUGGY]  setExtra(local,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtra(local,  false,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  local.length);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
61	[BUG]  [BUGGY]  setExtra(local,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtra(local,  false,  null);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  null);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
62	[BUG]  [BUGGY]  setExtra(local,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtra(local,  null);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  null);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
63	[BUG]  [BUGGY]  setExtra(local,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtra(local,  false,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  true);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
64	[BUG]  [BUGGY]  removeExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  true);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
65	[BUG]  [BUGGY]  removeExtraFields(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  extra.length);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
66	[BUG]  [BUGGY]  removeExtraFields(local,  false,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  extra);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
67	[BUG]  [BUGGY]  unparseableExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  unparseableExtraFields(local,  false);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	unparseableExtraFields(local,  false);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
68	[BUG]  [BUGGY]  removeExtraFields(local);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
69	[BUG]  [BUGGY]  removeExtraFields(extra,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(extra,  false);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(extra,  false);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
70	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
71	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
72	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
73	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
74	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
75	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.READ);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.READ);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
76	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.class);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.class);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
77	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
78	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
79	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.TYPE);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
80	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
81	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
82	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
83	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
84	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
85	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
86	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
87	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
88	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  false);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  false);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
89	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
90	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
91	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
92	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
93	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
94	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
95	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
96	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
97	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
98	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.Unparse  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.Unparse  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.Unparse	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
99	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.Unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.Unparse  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.Unparse	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
100	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  LocalUtils.Unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  LocalUtils.Unparse  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  LocalUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  local  =  LocalUtils.parse(local,  true,  LocalUtils.Unparse	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
101	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  extra.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra.length);	  mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
102	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault());  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  Locale.getDefault());	  mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
103	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  local.length);	  mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
104	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra);	  mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
105	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  true);	  mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
106	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  null);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  null);	  mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
107	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
108	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
109	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
110	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
111	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
112	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>());	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
113	[BUG]  [BUGGY]  mergeExtraFields(local,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  externalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  externalAttributes);	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
114	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>());  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>());	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
115	[BUG]  [BUGGY]  validateExtraFields(local,  false,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  extra);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
116	[BUG]  [BUGGY]  verifyExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  verifyExtraFields(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	verifyExtraFields(local,  true);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
117	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
118	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
119	[BUG]  [BUGGY]  removeExtraFields(local,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  local.length);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  local.length);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
120	[BUG]  [BUGGY]  recalculateExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  recalculateExtraFields(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	recalculateExtraFields(local,  true);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
121	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
122	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
123	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
124	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
125	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
126	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
127	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
128	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
129	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.FIELD);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
130	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
131	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
132	[BUG]  [BUGGY]  setExtra(local,  false,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtra(local,  false,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  extra);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
133	[BUG]  [BUGGY]  setExtraField(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraField(local,  true);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraField(local,  true);	  setExtra(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
134	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
135	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
136	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
137	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
138	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
139	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
140	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
141	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
142	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
143	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
144	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  getName();  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  getName();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
145	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  getName();  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  getName();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
146	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0,  size  =  local.length;  i  <  size;  ++i)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0,  size  =  local.length;  i  <  size;  ++i)  {  local[i]  =  getName();  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0,  size  =  local.length;  i  <  size;  ++i)  {  local[i]  =  getName();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
147	[BUG]  [BUGGY]  if(local!=  null)  {  createExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  createExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  createExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
148	[BUG]  [BUGGY]  if(local!=  null)  {  createExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  createExtraFields(local,  false);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  createExtraFields(local,  false);  }	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
149	[BUG]  [BUGGY]  if(local!=  null)  {  createExtraFields(local,  false);  }  else  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  createExtraFields(local,  false);  }  else  {  return;  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  createExtraFields(local,  false);  }  else  {  return;  }	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
150	[BUG]  [BUGGY]  setExtraFields(local,  false,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  extra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  extra);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
151	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  }	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
152	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
153	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.RIGHT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
154	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DELETE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DELETE);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
155	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
156	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.class);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.class);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
157	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
158	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
159	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DUP);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DUP);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DUP);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
160	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
161	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
162	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
163	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
164	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  validateExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
165	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  external);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  external);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
166	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
167	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
168	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
169	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
170	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT);	  removeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
171	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  setExtra(local[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  setExtra(local[i]);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  setExtra(local[i]);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
172	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  else  {  throw  new  RuntimeException( " ");  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
173	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
174	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i].getName());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i].getName());  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i].getName());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
175	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
176	[BUG]  [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0,  len  =  local.length;  i  <  len;  ++i)  {  local[i]  =  Locale.getDefault();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0,  len  =  local.length;  i  <  len;  ++i)  {  local[i]  =  Locale.getDefault();  }  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0,  len  =  local.length;  i  <  len;  ++i)  {  local[i]  =  Locale.getDefault();  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
177	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DUP);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DUP);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DUP);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
178	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DONE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DONE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DONE);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
179	[BUG]  [BUGGY]  mergeExtraFields(local,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  unparseableExtra);	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
180	[BUG]  [BUGGY]  mergeExtraFields(local,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  internalAttributes);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  internalAttributes);	  mergeExtraFields(local);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
181	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
182	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  external);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  external);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
183	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
184	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internal);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internal);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
185	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
186	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
187	[BUG]  [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
188	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
189	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
190	[BUG]  [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
191	[BUG]  [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
192	[BUG]  [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
193	[BUG]  [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
194	[BUG]  [BUGGY]  setExtraFields(local,  false,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  setExtraFields(local,  false,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  unparseableExtra);	  setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
195	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
196	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
197	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  createExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
198	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
199	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  external);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  external);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
200	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);    [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  unparseableExtra);  [BUGGY]    }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
