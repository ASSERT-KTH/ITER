bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
2	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
3	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
4	[BUG]  [BUGGY]  if(local!=  null  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
5	[BUG]  [BUGGY]  ||(local!=  null  &&  local.length  >  0)||(local.length  >  0))  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  ||(local!=  null  &&  local.length  >  0)||(local.length  >  0))  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	||(local!=  null  &&  local.length  >  0)||(local.length  >  0))  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
6	[BUG]  [BUGGY]  ||(local!=  null  &&  local.length  >  0)||(local.length  >  0))  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  ||(local!=  null  &&  local.length  >  0)||(local.length  >  0))  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	||(local!=  null  &&  local.length  >  0)||(local.length  >  0))  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
7	[BUG]  [BUGGY]  setExtraFields(local,  true,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  null);	  setExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
8	[BUG]  [BUGGY]  setExtraFields(local,  false,  null,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  null,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  null,  extra.length);	  setExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
9	[BUG]  [BUGGY]  setExtraFields(local,  false,  null,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  null,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  null,  extra);	  setExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
10	[BUG]  [BUGGY]  setExtraFields(local,  false,  null,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  null,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  null,  null);	  setExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
11	[BUG]  [BUGGY]  setExtraFields(local,  false,  null,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  null,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  null,  local.length);	  setExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
12	[BUG]  [BUGGY]  setExtraFields(local,  true,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  false,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  false,  null);	  setExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
13	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  local.length);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
14	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
15	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  externalAttributes);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
16	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  internalAttributes);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
17	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra.length);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
18	[BUG]  [BUGGY]  createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	195	None	replace
19	[BUG]  [BUGGY]  createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	195	None	replace
20	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  true);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	195	None	replace
21	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	195	None	replace
22	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	195	None	replace
23	[BUG]  [BUGGY]  createExtraFields(local,  false,  extra,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  extra,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  extra,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	195	None	replace
24	[BUG]  [BUGGY]  if(local!=  null)  {  createExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  createExtraFields(local,  true);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  createExtraFields(local,  true);  }	  createExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
25	[BUG]  [BUGGY]  if(local!=  null)  {  createExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  createExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  createExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }	  createExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
26	[BUG]  [BUGGY]  createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  createExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
27	[BUG]  [BUGGY]  createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  createExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
28	[BUG]  [BUGGY]  if(local!=  null)  {  createExtraFields(local,  true);  }  else  {  super.setExtra(extra);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  createExtraFields(local,  true);  }  else  {  super.setExtra(extra);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  createExtraFields(local,  true);  }  else  {  super.setExtra(extra);  }	  createExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
29	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  unparseableExtra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
30	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
31	[BUG]  [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
32	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  local.length);	  mergeExtraFields(local,    new    LinkedHashMap    <    String,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
33	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  extra);	  mergeExtraFields(local,    new    LinkedHashMap    <    String,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
34	[BUG]  [BUGGY]  mergeExtraFields(local,  new  HashMap  <  String,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  HashMap  <  String,  ZipExtraField>());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  HashMap  <  String,  ZipExtraField>());	  mergeExtraFields(local,    new    LinkedHashMap    <    String,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
35	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  internalAttributes);	  mergeExtraFields(local,    new    LinkedHashMap    <    String,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
36	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(),  local);	  mergeExtraFields(local,    new    LinkedHashMap    <    String,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
37	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(1));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(1));  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  String,  ZipExtraField>(1));	  mergeExtraFields(local,    new    LinkedHashMap    <    String,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
38	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    getName();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
39	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    getName();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
40	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length  +  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length  +  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length  +  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getName();  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    getName();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
41	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  locale.length;  ++i)  {  local[i]  =  getName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  locale.length;  ++i)  {  local[i]  =  getName();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  locale.length;  ++i)  {  local[i]  =  getName();  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    getName();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
42	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getRaw();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getRaw();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getRaw();  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    getName();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
43	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getRawName();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getRawName();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  getRawName();  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    getName();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
44	[BUG]  [BUGGY]  removeExtraFields(local,  true,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  true,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  true,  local.length);	  removeExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
45	[BUG]  [BUGGY]  removeExtraFields(local,  false,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  local.length,  extra.length);	  removeExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
46	[BUG]  [BUGGY]  removeExtraFields(local,  false,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  local.length  -  1);	  removeExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
47	[BUG]  [BUGGY]  removeExtraFields(local,  false,  local.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  local.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  local.length  +  1);	  removeExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
48	[BUG]  [BUGGY]  removeExtraFields(extra,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(extra,  false,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(extra,  false,  local.length);	  removeExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
49	[BUG]  [BUGGY]  removeExtraFields(local,  null,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  null,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  null,  local.length);	  removeExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
50	[BUG]  [BUGGY]  validateExtraFields(local,  true,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  true,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  true,  null);	  validateExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
51	[BUG]  [BUGGY]  validateExtraFields(local,  false,  null,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  null,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  null,  extra.length);	  validateExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
52	[BUG]  [BUGGY]  validateExtraFields(local,  false,  null,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  null,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  null,  null);	  validateExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
53	[BUG]  [BUGGY]  validateExtraFields(local,  false,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  unparseableExtra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  unparseableExtra);	  validateExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
54	[BUG]  [BUGGY]  validateExtraFields(local,  false,  null,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  null,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  null,  local.length);	  validateExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
55	[BUG]  [BUGGY]  validateExtraFields(local,  false,  null,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  null,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  null,  extra);	  validateExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
56	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
57	[BUG]  [BUGGY]  mergeExtraFields(rawName,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(rawName,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(rawName,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
58	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
59	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
60	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
61	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  entryName);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  entryName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
62	[BUG]  [BUGGY]  mergeExtraFields(local,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  extra.length);	  mergeExtraFields(local,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
63	[BUG]  [BUGGY]  mergeExtraFields(local,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  local.length  -  1);	  mergeExtraFields(local,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
64	[BUG]  [BUGGY]  mergeExtraFields(local,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  local.length,  extra.length);	  mergeExtraFields(local,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
65	[BUG]  [BUGGY]  mergeExtraFields(local,  local.length  -  1,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  local.length  -  1,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  local.length  -  1,  local.length);	  mergeExtraFields(local,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
66	[BUG]  [BUGGY]  mergeExtraFields(local,  local.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  local.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  local.length  +  1);	  mergeExtraFields(local,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
67	[BUG]  [BUGGY]  mergeExtraFields(local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local.length,  extra.length);	  mergeExtraFields(local,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
68	[BUG]  [BUGGY]  mergeExtraFields(local,  local.length,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  local.length,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  local.length,  extra);	  mergeExtraFields(local,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
69	[BUG]  [BUGGY]  setExtraFields(local,  true,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  extra);	  setExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
70	[BUG]  [BUGGY]  setExtraFields(local,  false,  extra,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  extra,  unparseableExtra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  extra,  unparseableExtra);	  setExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
71	[BUG]  [BUGGY]  setExtraFields(extra,  false,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(extra,  false,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(extra,  false,  local);	  setExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
72	[BUG]  [BUGGY]  setExtraFields(local,  false,  extra,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  extra,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  extra,  local.length);	  setExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
73	[BUG]  [BUGGY]  setExtraFields(local,  false,  extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  extra,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  extra,  null);	  setExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
74	[BUG]  [BUGGY]  setExtraFields(local,  null,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  null,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  null,  extra);	  setExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
75	[BUG]  [BUGGY]  setExtraFields(local,  false,  extra,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  extra,  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  extra,  Locale.getDefault());	  setExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
76	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
77	[BUG]  [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
78	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
79	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
80	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
81	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
82	[BUG]  [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
83	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  }	  if(local!=    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FALSE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
84	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
85	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  -  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
86	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
87	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
88	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  +  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
89	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  -  2);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local.length  -  2);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
90	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
91	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
92	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
93	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
94	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.class,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
95	[BUG]  [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit(gpb));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit(gpb));  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  GeneralPurposeBit(gpb));	  mergeExtraFields(local,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
96	[BUG]  [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  GeneralPurposeBit());	  mergeExtraFields(local,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
97	[BUG]  [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit(gpb),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit(gpb),  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  GeneralPurposeBit(gpb),  local);	  mergeExtraFields(local,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
98	[BUG]  [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit(gpb),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  GeneralPurposeBit(gpb),  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  GeneralPurposeBit(gpb),  extra);	  mergeExtraFields(local,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
99	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
100	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
101	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  -  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
102	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
103	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  +  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
104	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  -  1,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  -  1,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length  -  1,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
105	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
106	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
107	[BUG]  [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
108	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
109	[BUG]  [BUGGY]  if(local  ==  null)  {  createExtraFields(local,  false);  }  else  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  createExtraFields(local,  false);  }  else  {  return;  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  createExtraFields(local,  false);  }  else  {  return;  }	  if(local!=    null)    {    createExtraFields(local,    false);    }    else    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
110	[BUG]  [BUGGY]  if(local  ==  null)  {  createExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  createExtraFields(local,  false);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  createExtraFields(local,  false);  }	  if(local!=    null)    {    createExtraFields(local,    false);    }    else    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
111	[BUG]  [BUGGY]  if(local  ==  null)  {  createExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  createExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  createExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  if(local!=    null)    {    createExtraFields(local,    false);    }    else    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
112	[BUG]  [BUGGY]  if(local!=  null  ||  local.length  ==  0)  {  createExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null  ||  local.length  ==  0)  {  createExtraFields(local,  false);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null  ||  local.length  ==  0)  {  createExtraFields(local,  false);  }	  if(local!=    null)    {    createExtraFields(local,    false);    }    else    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	149	None	replace
113	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
114	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
115	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
116	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
117	[BUG]  [BUGGY]  mergeExtraFields(externalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(externalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(externalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
118	[BUG]  [BUGGY]  mergeExtraFields(local,  local.length,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  local.length,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  local.length,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  mergeExtraFields(local,    null,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
119	[BUG]  [BUGGY]  mergeExtraFields(local,  Locale.getDefault(),  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  Locale.getDefault(),  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  Locale.getDefault(),  ExtraFieldUtils.UnparseableExtraField.DELETE);	  mergeExtraFields(local,    null,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
120	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);	  mergeExtraFields(local,    null,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
121	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE,  local.length);	  mergeExtraFields(local,    null,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
122	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  extra,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  null,  extra,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  extra,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  mergeExtraFields(local,    null,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
123	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.DEFAULT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.DEFAULT);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
124	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
125	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  local.length);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
126	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  extra.length);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
127	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DEFAULT,  externalAttributes);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
128	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	183	None	replace
129	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	183	None	replace
130	[BUG]  [BUGGY]  mergeExtraFields(external,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(external,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(external,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	183	None	replace
131	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external,  rawName);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  external,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	183	None	replace
132	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
133	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
134	[BUG]  [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
135	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
136	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  rawName);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
137	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
138	[BUG]  [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
139	[BUG]  [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
140	[BUG]  [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  ||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	||  local.length  ==  0)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
141	[BUG]  [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseABLEExtraField.TYPE);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseABLEExtraField.TYPE);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local  ==  null)  {  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseABLEExtraField.TYPE);  }	  if(local    ==    null)    {    mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
142	[BUG]  [BUGGY]  SetExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  SetExtraFields(local,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	SetExtraFields(local,  false);	  setExtraFields(extra,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
143	[BUG]  [BUGGY]  setExtraFields(local.length,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local.length,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local.length,  false);	  setExtraFields(extra,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
144	[BUG]  [BUGGY]  setupExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setupExtraFields(local,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setupExtraFields(local,  false);	  setExtraFields(extra,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
145	[BUG]  [BUGGY]  validateExtraFields(local,  true,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  true,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  true,  local.length);	  validateExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
146	[BUG]  [BUGGY]  validateExtraFields(local,  false,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  local.length,  extra.length);	  validateExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
147	[BUG]  [BUGGY]  validateExtraFields(local,  false,  local.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  local.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  local.length  +  1);	  validateExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
148	[BUG]  [BUGGY]  validateExtraFields(local,  false,  local.length,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  local.length,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  local.length,  internalAttributes);	  validateExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
149	[BUG]  [BUGGY]  validateExtraFields(local,  false,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  local.length  -  1);	  validateExtraFields(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
150	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
151	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
152	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  -  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
153	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
154	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  +  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
155	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  -  1,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  -  1,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT,  local.length  -  1,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
156	[BUG]  [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.class);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  UnparseableExtraFieldData.class);	  setExtra(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
157	[BUG]  [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.UNPREFIX);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.UNPREFIX);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  UnparseableExtraFieldData.UNPREFIX);	  setExtra(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
158	[BUG]  [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.DEFAULT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  UnparseableExtraFieldData.DEFAULT);	  setExtra(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
159	[BUG]  [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.UNPRECATED);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.UNPRECATED);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  UnparseableExtraFieldData.UNPRECATED);	  setExtra(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
160	[BUG]  [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.UNSUPPORTED);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.UNSUPPORTED);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  UnparseableExtraFieldData.UNSUPPORTED);	  setExtra(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
161	[BUG]  [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.EMPTY);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  UnparseableExtraFieldData.EMPTY);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  UnparseableExtraFieldData.EMPTY);	  setExtra(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
162	[BUG]  [BUGGY]  setExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  setExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	replace
163	[BUG]  [BUGGY]  setExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  setExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	replace
164	[BUG]  [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  setExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	replace
165	[BUG]  [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  setExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	replace
166	[BUG]  [BUGGY]  setExtra(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  setExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	replace
167	[BUG]  [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);	  setExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	190	None	replace
168	[BUG]  [BUGGY]  insertExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  insertExtraFields(local,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	insertExtraFields(local,  false);	  removeExtraFields(extra,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
169	[BUG]  [BUGGY]  addExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  addExtraFields(local,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	addExtraFields(local,  false);	  removeExtraFields(extra,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
170	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    new    ZipExtraField(local[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	replace
171	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    new    ZipExtraField(local[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	replace
172	[BUG]  [BUGGY]  local  =  new  ZipExtraField(local.length);  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField(local.length);  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField(local.length);  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    new    ZipExtraField(local[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	replace
173	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    new    ZipExtraField(local[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	replace
174	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  locale.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  locale.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  locale.length;  ++i)  {  local[i]  =  new  ZipExtraField(local[i]);  }	  if(local    ==    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    ++i)    {    local[i]    =    new    ZipExtraField(local[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	replace
175	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
176	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  -  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
177	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
178	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  +  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
179	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  -  1,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  -  1,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local.length  -  1,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
180	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    i++)    {    local[i]    =    Locale.getDefault();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
181	[BUG]  [BUGGY]  Locale  locale  =  Locale.getDefault();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  Locale  locale  =  Locale.getDefault();  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	Locale  locale  =  Locale.getDefault();	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    i++)    {    local[i]    =    Locale.getDefault();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
182	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length  -  1];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    i++)    {    local[i]    =    Locale.getDefault();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
183	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length  +  1];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length  +  1];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length  +  1];  for(int  i  =  0;  i  <  local.length;  i++)  {  local[i]  =  Locale.getDefault();  }	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    for(int    i    =    0;    i    <    local.length;    i++)    {    local[i]    =    Locale.getDefault();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	143	None	replace
184	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  extra.length);	  mergeExtraFields(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
185	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra.length,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra.length,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra.length,  local.length);	  mergeExtraFields(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
186	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra.length,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra.length,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra.length,  internalAttributes);	  mergeExtraFields(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
187	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra.length,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra.length,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra.length,  externalAttributes);	  mergeExtraFields(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
188	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra.length  -  1);	  mergeExtraFields(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
189	[BUG]  [BUGGY]  mergeExtraFields(local,  null,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  null,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  null,  extra.length);	  mergeExtraFields(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
190	[BUG]  [BUGGY]  mergeExtraFields(extra,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  false,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  false,  local.length);	  mergeExtraFields(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
191	[BUG]  [BUGGY]  validateExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  validateExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
192	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  local.length);	  validateExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
193	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra);	  validateExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
194	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);	  validateExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
195	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  true);	  validateExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
196	[BUG]  [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  extra.length);	  validateExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
197	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  Locale.getDefault());	  mergeExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
198	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  Locale.getDefault(),  Locale.getDefault());	  mergeExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
199	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  Locale.getDefault(),  local.length);	  mergeExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
200	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  Locale.getDefault(),  null);	  mergeExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
201	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault(),  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  Locale.getDefault(),  true);	  mergeExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
202	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  Locale.getDefault()  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  Locale.getDefault()  +  1);	  mergeExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
203	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
204	[BUG]  [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
205	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
206	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
207	[BUG]  [BUGGY]  removeExtraFields(local,  true,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  true,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  true,  extra);	  removeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
208	[BUG]  [BUGGY]  removeExtraFields(local,  false,  extra,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  extra,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  extra,  local.length);	  removeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
209	[BUG]  [BUGGY]  removeExtraFields(local,  false,  extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  extra,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  extra,  null);	  removeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
210	[BUG]  [BUGGY]  removeExtraFields(local,  false,  extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  extra,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  extra,  internalAttributes);	  removeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
211	[BUG]  [BUGGY]  removeExtraFields(local,  false,  extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  extra,  rawName);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  extra,  rawName);	  removeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
212	[BUG]  [BUGGY]  removeExtraFields(local,  false,  extra,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  extra,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  extra,  true);	  removeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
213	[BUG]  [BUGGY]  removeExtraFields(local,  null,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  null,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  null,  extra);	  removeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
214	[BUG]  [BUGGY]  gpb.setExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  gpb.setExtraFields(local,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	gpb.setExtraFields(local,  true);	  gpb.setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
215	[BUG]  [BUGGY]  gpb.setExtraFields(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  gpb.setExtraFields(local,  false,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	gpb.setExtraFields(local,  false,  extra.length);	  gpb.setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
216	[BUG]  [BUGGY]  gpb.setExtraFields(extra,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  gpb.setExtraFields(extra,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	gpb.setExtraFields(extra,  false);	  gpb.setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
217	[BUG]  [BUGGY]  gpb.setExtraFields(local,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  gpb.setExtraFields(local,  false,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	gpb.setExtraFields(local,  false,  null);	  gpb.setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
218	[BUG]  [BUGGY]  gpb.setExtraFields(local,  false,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  gpb.setExtraFields(local,  false,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	gpb.setExtraFields(local,  false,  local.length);	  gpb.setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
219	[BUG]  [BUGGY]  gpb.setExtraFields(externalAttributes,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  gpb.setExtraFields(externalAttributes,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	gpb.setExtraFields(externalAttributes,  false);	  gpb.setExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
220	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  local.length);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
221	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  extra);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
222	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  internalAttributes);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
223	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  externalAttributes);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
224	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.TYPE,  extra.length);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
225	[BUG]  [BUGGY]  validateExtraFields(local,  true,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  true,  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  true,  Locale.getDefault());	  validateExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
226	[BUG]  [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  Locale.getDefault(),  Locale.getDefault());	  validateExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
227	[BUG]  [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  Locale.getDefault(),  local.length);	  validateExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
228	[BUG]  [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  Locale.getDefault(),  null);	  validateExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
229	[BUG]  [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault()  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  Locale.getDefault()  +  1);	  validateExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
230	[BUG]  [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  false,  Locale.getDefault(),  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  false,  Locale.getDefault(),  true);	  validateExtraFields(local,    false,    Locale.getDefault());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
231	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
232	[BUG]  [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
233	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
234	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.RIGHT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
235	[BUG]  [BUGGY]  verifyExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  verifyExtraFields(local,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	verifyExtraFields(local,  false);	  validateExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
236	[BUG]  [BUGGY]  validateExtraFields(local);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local);	  validateExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
237	[BUG]  [BUGGY]  ensureExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  ensureExtraFields(local,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	ensureExtraFields(local,  false);	  validateExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
238	[BUG]  [BUGGY]  validateExtraFields(local,  true,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  validateExtraFields(local,  true,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	validateExtraFields(local,  true,  false);	  validateExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
239	[BUG]  [BUGGY]  removeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
240	[BUG]  [BUGGY]  removeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
241	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
242	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
243	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD_NAME);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
244	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  extra.length);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
245	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  null);	  mergeExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
246	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  null,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  null,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  null,  extra.length);	  mergeExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
247	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  null,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  null,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  null,  extra);	  mergeExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
248	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  false,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  false,  null);	  mergeExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
249	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  null,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  null,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  null,  local.length);	  mergeExtraFields(local,    false,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
250	[BUG]  [BUGGY]  setExtra(local,  true,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  extra.length);	  setExtra(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
251	[BUG]  [BUGGY]  setExtra(local,  false,  extra.length,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  extra.length,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  extra.length,  local.length);	  setExtra(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
252	[BUG]  [BUGGY]  setExtra(local,  null,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  null,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  null,  extra.length);	  setExtra(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
253	[BUG]  [BUGGY]  setExtra(local,  false,  extra.length,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  extra.length,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  extra.length,  internalAttributes);	  setExtra(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
254	[BUG]  [BUGGY]  setExtra(local,  false,  extra.length,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  extra.length,  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  extra.length,  Locale.getDefault());	  setExtra(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
255	[BUG]  [BUGGY]  setExtra(local,  false,  extra.length,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  extra.length,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  extra.length,  null);	  setExtra(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
256	[BUG]  [BUGGY]  setExtra(local,  false,  extra.length,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  extra.length,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  extra.length,  true);	  setExtra(local,    false,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
257	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
258	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  true);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
259	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
260	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  false);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
261	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  false);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
262	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
263	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
264	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  true);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
265	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT,  internalAttributes);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
266	[BUG]  [BUGGY]  mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
267	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
268	[BUG]  [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(internalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
269	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
270	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  internalAttributes,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
271	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  external);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  external);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
272	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
273	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  local.length);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
274	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  extra);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
275	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  extra.length);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
276	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME,  externalAttributes);	  mergeExtraFields(local,    true,    UnparseableExtraFieldData.UnparseableExtraField.FIELD_NAME);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
277	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
278	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
279	[BUG]  [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
280	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
281	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
282	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  rawName);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra,  rawName);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
283	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  extra);	  mergeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
284	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra,  local.length);	  mergeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
285	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra,  internalAttributes);	  mergeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
286	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra,  true);	  mergeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
287	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra,  null);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra,  null);	  mergeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
288	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra,  rawName);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra,  rawName);	  mergeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
289	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  extra,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  extra,  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  extra,  Locale.getDefault());	  mergeExtraFields(local,    false,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
290	[BUG]  [BUGGY]  createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
291	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
292	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
293	[BUG]  [BUGGY]  setExtra(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
294	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
295	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
296	[BUG]  [BUGGY]  mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
297	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.FIELD);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
298	[BUG]  [BUGGY]  setExtra(local,  true,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  true,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  true,  local.length);	  setExtra(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
299	[BUG]  [BUGGY]  setExtra(local,  false,  local.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  local.length,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  local.length,  extra.length);	  setExtra(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
300	[BUG]  [BUGGY]  setExtra(local,  null,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  null,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  null,  local.length);	  setExtra(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
301	[BUG]  [BUGGY]  setExtra(local,  false,  local.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  local.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  local.length  -  1);	  setExtra(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
302	[BUG]  [BUGGY]  setExtra(local,  false,  Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  Locale.getDefault());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  Locale.getDefault());	  setExtra(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
303	[BUG]  [BUGGY]  setExtra(local,  false,  local.length,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtra(local,  false,  local.length,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtra(local,  false,  local.length,  internalAttributes);	  setExtra(local,    false,    local.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
304	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
305	[BUG]  [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  local.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
306	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length  -  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length  -  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
307	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length  +  1);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length  +  1);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
308	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  extra.length,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
309	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD,  rawName,  extra.length);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.FIELD,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
310	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	189	None	replace
311	[BUG]  [BUGGY]  mergeExtraFields(external,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(external,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(external,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	189	None	replace
312	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external,  extra);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	189	None	replace
313	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internal);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internal);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internal);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE,    external);    	non-compiled	[CE]  class,  interface,  or  enum  expected	189	None	replace
314	[BUG]  [BUGGY]  mergeExtraFields(local,  unparseableExtra,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  unparseableExtra,  gpb);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  unparseableExtra,  gpb);	  mergeExtraFields(local,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	179	None	replace
315	[BUG]  [BUGGY]  mergeExtraFields(local,  unparseableExtra,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  unparseableExtra,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  unparseableExtra,  local.length);	  mergeExtraFields(local,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	179	None	replace
316	[BUG]  [BUGGY]  mergeExtraFields(local,  unparseableExtra,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  unparseableExtra,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  unparseableExtra,  extra);	  mergeExtraFields(local,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	179	None	replace
317	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  false);	  mergeExtraFields(local,    false,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
318	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  false);	  mergeExtraFields(local,    false,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
319	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  false,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  false,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  false,  false);	  mergeExtraFields(local,    false,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
320	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  true);	  mergeExtraFields(local,    false,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
321	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.class);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.class);	  mergeExtraFields(local,    false,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
322	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  false,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  false,  true);	  mergeExtraFields(local,    false,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
323	[BUG]  [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  extra,  or  enum  expected  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  extra,  or  enum  expected  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  extra,  or  enum  expected	  if(local!=    null)    {    local    =    LocalUtils.parse(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    }    else    {    local    =    LocalUtils.parse(local,    true,    ExtraFieldUtils.Unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
324	[BUG]  [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  if(local!=    null)    {    local    =    LocalUtils.parse(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    }    else    {    local    =    LocalUtils.parse(local,    true,    ExtraFieldUtils.Unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
325	[BUG]  [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  extra,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  extra,  or  enum  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  extra,  or  enum	  if(local!=    null)    {    local    =    LocalUtils.parse(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    }    else    {    local    =    LocalUtils.parse(local,    true,    ExtraFieldUtils.Unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
326	[BUG]  [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  interface,  or  enum  expected  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  interface,  or  enum  expected  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  interface,  or  enum  expected	  if(local!=    null)    {    local    =    LocalUtils.parse(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    }    else    {    local    =    LocalUtils.parse(local,    true,    ExtraFieldUtils.Unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
327	[BUG]  [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  interface,  or  enum  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  interface,  or  enum  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	LocalUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.class,  interface,  or  enum	  if(local!=    null)    {    local    =    LocalUtils.parse(local,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    }    else    {    local    =    LocalUtils.parse(local,    true,    ExtraFieldUtils.Unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
328	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  internalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
329	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  externalAttributes);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
330	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.STRING);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.STRING);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.STRING);	  mergeExtraFields(local,    true,    ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
331	[BUG]  [BUGGY]  setExtraFields(local,  true,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  unparseableExtra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  unparseableExtra);	  setExtraFields(local,    false,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	194	None	replace
332	[BUG]  [BUGGY]  setExtraFields(local,  true,  UnparseableExtraFieldData.UNPREFIX);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  UnparseableExtraFieldData.UNPREFIX);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  UnparseableExtraFieldData.UNPREFIX);	  setExtraFields(local,    false,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	194	None	replace
333	[BUG]  [BUGGY]  setExtraFields(local,  false,  local.unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  local.unparseableExtra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  local.unparseableExtra);	  setExtraFields(local,    false,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	194	None	replace
334	[BUG]  [BUGGY]  setExtraFields(local,  true,  UnparseableExtraFieldData.UNPRECATED);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  UnparseableExtraFieldData.UNPRECATED);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  UnparseableExtraFieldData.UNPRECATED);	  setExtraFields(local,    false,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	194	None	replace
335	[BUG]  [BUGGY]  setExtraFields(local,  false,  unparseableExtra,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  false,  unparseableExtra,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  false,  unparseableExtra,  local.length);	  setExtraFields(local,    false,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	194	None	replace
336	[BUG]  [BUGGY]  setExtraFields(local,  true,  UnparseableExtraFieldData.class);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  setExtraFields(local,  true,  UnparseableExtraFieldData.class);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	setExtraFields(local,  true,  UnparseableExtraFieldData.class);	  setExtraFields(local,    false,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	194	None	replace
337	[BUG]  [BUGGY]  createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
338	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
339	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
340	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
341	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra.length);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
342	[BUG]  [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	createExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);	  createExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
343	[BUG]  [BUGGY]  mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
344	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK,  extra);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
345	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
346	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.STANDARD);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.STANDARD);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.STANDARD);	  mergeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
347	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length];  System.arraycopy(local,  0,  extra,  0,  local.length);	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    System.arraycopy(local,    0,    extra,    0,    local.length);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
348	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  System.arraycopy(local,  0,  extra,  0,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length  -  1];  System.arraycopy(local,  0,  extra,  0,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length  -  1];  System.arraycopy(local,  0,  extra,  0,  local.length);	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    System.arraycopy(local,    0,    extra,    0,    local.length);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
349	[BUG]  [BUGGY]  local  =  new  ZipExtraField[local.length  +  1];  System.arraycopy(local,  0,  extra,  0,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  local  =  new  ZipExtraField[local.length  +  1];  System.arraycopy(local,  0,  extra,  0,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	local  =  new  ZipExtraField[local.length  +  1];  System.arraycopy(local,  0,  extra,  0,  local.length);	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    System.arraycopy(local,    0,    extra,    0,    local.length);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
350	[BUG]  [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length  +  1];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  if(local!=  null)  {  local  =  new  ZipExtraField[local.length  +  1];  System.arraycopy(local,  0,  extra,  0,  local.length);  }  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	if(local!=  null)  {  local  =  new  ZipExtraField[local.length  +  1];  System.arraycopy(local,  0,  extra,  0,  local.length);  }	  if(local!=    null)    {    local    =    new    ZipExtraField[local.length];    System.arraycopy(local,    0,    extra,    0,    local.length);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
351	[BUG]  [BUGGY]  mergeExtraFields(local,  0,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  0,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  0,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);	  mergeExtraFields(local,    1,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
352	[BUG]  [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_MASK);	  mergeExtraFields(local,    1,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
353	[BUG]  [BUGGY]  mergeExtraFields(local,  2,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  2,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  2,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);	  mergeExtraFields(local,    1,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
354	[BUG]  [BUGGY]  mergeExtraFields(local,  1,  extra,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  1,  extra,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  1,  extra,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);	  mergeExtraFields(local,    1,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
355	[BUG]  [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  extra);	  mergeExtraFields(local,    1,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
356	[BUG]  [BUGGY]  mergeExtraFields(local,  0,  LocalUtils.UnparseableExtraField.SHORT_SHIFT);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  0,  LocalUtils.UnparseableExtraField.SHORT_SHIFT);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  0,  LocalUtils.UnparseableExtraField.SHORT_SHIFT);	  mergeExtraFields(local,    1,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
357	[BUG]  [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  1,  ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT,  local.length);	  mergeExtraFields(local,    1,    ExtraFieldUtils.UnparseableExtraField.SHORT_SHIFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
358	[BUG]  [BUGGY]  unparseableExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  unparseableExtraFields(local,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	unparseableExtraFields(local,  true);	  unparseableExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
359	[BUG]  [BUGGY]  unparseableExtraFields(local,  false,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  unparseableExtraFields(local,  false,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	unparseableExtraFields(local,  false,  extra.length);	  unparseableExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
360	[BUG]  [BUGGY]  unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  unparseableExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
361	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  UnparseableExtraFieldData  unparseableExtraFields(local,  false);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	UnparseableExtraFieldData  unparseableExtraFields(local,  false);	  unparseableExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
362	[BUG]  [BUGGY]  unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  unparseableExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
363	[BUG]  [BUGGY]  unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	unparseableExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  unparseableExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
364	[BUG]  [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  true,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
365	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  extra.length);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
366	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  extra);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
367	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  local.length);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
368	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  true);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  true);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
369	[BUG]  [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  false,  UnparseableExtraFieldData.UnparseableExtraField.DECEMBER,  internalAttributes);	  mergeExtraFields(local,    false,    UnparseableExtraFieldData.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
370	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  local.length);	  mergeExtraFields(local,    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
371	[BUG]  [BUGGY]  mergeExtraFields(local,  new  HashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  HashMap  <  ZipExtraField>());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  HashMap  <  ZipExtraField>());	  mergeExtraFields(local,    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
372	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  extra);	  mergeExtraFields(local,    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
373	[BUG]  [BUGGY]  mergeExtraFields(local,  new  ArrayList  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  ArrayList  <  ZipExtraField>());  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  ArrayList  <  ZipExtraField>());	  mergeExtraFields(local,    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
374	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  internalAttributes);	  mergeExtraFields(local,    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
375	[BUG]  [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  local);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  local);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	mergeExtraFields(local,  new  LinkedHashMap  <  ZipExtraField>(),  local);	  mergeExtraFields(local,    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
376	[BUG]  [BUGGY]  removeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	replace
377	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	replace
378	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  local.length);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	replace
379	[BUG]  [BUGGY]  removeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	replace
380	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	replace
381	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra.length);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra.length);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	169	None	replace
382	[BUG]  [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [timeout]  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);      [BUGGY]  removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [BUGGY]      }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	removeExtraFields(local,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);	  removeExtraFields(local,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[timeout]	169	None	replace
