bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(includeUnparseable  &&  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  &&  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
2	[BUG]  [BUGGY]  if(includeUnparseable  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  ||  unparseableExtra!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  unparseableExtra!=  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
3	[BUG]  [BUGGY]  if(includeUnparseable  &&  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  &&  unparseableExtra!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  unparseableExtra!=  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
4	[BUG]  [BUGGY]  if(unparseable  ||  includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseable  ||  includeUnparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  ||  includeUnparseableExtra  ==  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
5	[BUG]  [BUGGY]  if(this.includeUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(this.includeUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable  ||  unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
6	[BUG]  [BUGGY]  if(includeUnparsable  &&  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparsable  &&  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparsable  &&  unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
7	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
8	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
9	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
10	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  ]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
11	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
12	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
13	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra();  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
14	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields  ==  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
15	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(externalAttributes  ==  null  ||  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
16	[BUG]  [BUGGY]  if(this.extraFields  ==  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(this.extraFields  ==  null  ||  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.extraFields  ==  null  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
17	[BUG]  [BUGGY]  if(unparseable  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseable  ||  extraFields  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  ||  extraFields  ==  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
18	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  containsUnparseable)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
19	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
20	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
21	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields!=  null)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
22	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
23	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  includeUnparseable)  {	  if(extraFields    ==    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
24	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra)  {	  if(extraFields    ==    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
25	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  insertUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  insertUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  insertUnparseable)  {	  if(extraFields    ==    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
26	[BUG]  [BUGGY]  if(includeUnparseable  &&  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  &&  extraFields  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  extraFields  ==  null)  {	  if(includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
27	[BUG]  [BUGGY]  if(includeUnparseable  &&  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  &&  extraFields!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  extraFields!=  null)  {	  if(includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
28	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
29	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(unparseableExtra))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.contains(unparseableExtra))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
30	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
31	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(includeUnparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
32	[BUG]  [BUGGY]  if(extraFields  ==  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  &&  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
33	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(unparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.contains(unparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
34	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  excludeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  excludeUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  excludeUnparseable)  {	  if(extraFields    ==    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
35	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length  ==  0)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.length  ==  0)  {	  if(extraFields    ==    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
36	[BUG]  [BUGGY]  if(includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable)  {	  if(unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
37	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length  ==  0)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra.length  ==  0)  {	  if(unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
38	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  1)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
39	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  0)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()!=  0)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
40	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
41	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
42	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
43	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  2)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  2)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
44	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra!=  null  ||  extraFields  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  extraFields  ==  null)  {	  if(extraFields    ==    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
45	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra  <  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra  <  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra  <  null)  {	  if(extraFields    ==    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
46	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
47	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
48	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
49	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable);  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
50	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.length  ==  0)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra.length  ==  0)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
51	[BUG]  [BUGGY]  if(this.extraFields  ==  null  ||  containsUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(this.extraFields  ==  null  ||  containsUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.extraFields  ==  null  ||  containsUnparseable)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
52	[BUG]  [BUGGY]  if(!includeUnparseable  &&  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(!includeUnparseable  &&  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(!includeUnparseable  &&  unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
53	[BUG]  [BUGGY]  if(includeUnparseable  ||  this.unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  ||  this.unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  this.unparseableExtra  ==  null)  {	  if(unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
54	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra  ==  null)  {	  if(unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
55	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(unparseableExtra))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  extraFields.contains(unparseableExtra))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
56	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra!=  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
57	[BUG]  [BUGGY]  if(this.includeUnparseable  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(this.includeUnparseable  ||  extraFields  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable  ||  extraFields  ==  null)  {	  if(includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
58	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  ||  extraFields!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields!=  null)  {	  if(includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
59	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
60	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
61	[BUG]  [BUGGY]  if(extraFields!=  null  ||  unparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields!=  null  ||  unparseableExtra)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  unparseableExtra)  {	  if(extraFields    ==    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
62	[BUG]  [BUGGY]  if(extraFields!=  null  ||  excludeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields!=  null  ||  excludeUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  excludeUnparseable)  {	  if(extraFields    ==    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
63	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra!=  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
64	[BUG]  [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  UnparseableExtraFieldData  ==  null)  {	  if(includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
65	[BUG]  [BUGGY]  if(includeUnparseable  ||  uniqueExtraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  ||  uniqueExtraFields  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  uniqueExtraFields  ==  null)  {	  if(includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
66	[BUG]  [BUGGY]  if(extraFields!=  null  ||  containsUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields!=  null  ||  containsUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  containsUnparseable)  {	  if(extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
67	[BUG]  [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
68	[BUG]  [BUGGY]  if(includeUnparsable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(includeUnparsable  ||  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparsable  ||  unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
69	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra!=  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra!=  null)  {	  if(unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
70	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  includeUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields  ==  null  ||  includeUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  includeUnparseable  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
71	[BUG]  [BUGGY]  if(extraFields!=  null  ||  includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {    [BUGGY]  if(extraFields!=  null  ||  includeUnparseable)  {  [BUGGY]    return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  includeUnparseable)  {	  if(extraFields    ==    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
