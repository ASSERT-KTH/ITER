bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(unparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  ||  unparseableExtra  ==  null)  {	  if(unparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
2	[BUG]  [BUGGY]  if(unparseable  &&  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  &&  extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  &&  extraFields  ==  null)  {	  if(unparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
3	[BUG]  [BUGGY]  if(extraFields  ==  null  &&  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  &&  extraFields.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  &&  extraFields.contains(unparseableExtra))  {	  if(extraFields!=    null    ||    extraFields.contains(unparseableExtra))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
4	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.contains(unparseableExtra))  {	  if(extraFields!=    null    ||    extraFields.contains(unparseableExtra))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
5	[BUG]  [BUGGY]  if(includeUnparseable  &&  extraFields!=  null  ||  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  extraFields!=  null  ||  extraFields.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  extraFields!=  null  ||  extraFields.contains(unparseableExtra))  {	  if(extraFields!=    null    ||    extraFields.contains(unparseableExtra))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
6	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields.contains(unparseableExtra))  {	  if(extraFields!=    null    ||    extraFields.contains(unparseableExtra))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
7	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  ||  extraFields.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  ||  extraFields.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields  ==  null  ||  extraFields.length  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
8	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length!=  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.length!=  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
9	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.length  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
10	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields.contains(unparseable))  {	  if(unparseableExtra    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
11	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  &&  extraFields.contains(includeUnparseable))  {	  if(unparseableExtra    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
12	[BUG]  [BUGGY]  if(includeUnparseable  ==  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ==  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ==  null  ||  extraFields.contains(includeUnparseable))  {	  if(unparseableExtra    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
13	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra.length)  {	  if(unparseableExtra    ==    null    ||    insertUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
14	[BUG]  [BUGGY]  if(includeUnparseable  ||  additionalFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  additionalFields!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  additionalFields!=  null)  {	  if(includeUnparseable    &&    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
15	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable,  unparseableExtra);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(includeUnparseable,  unparseableExtra);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
16	[BUG]  [BUGGY]  (ZipExtraFieldData)this.extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)this.extraFields.get(includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)this.extraFields.get(includeUnparseable);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
17	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable  +  1);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(includeUnparseable  +  1);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
18	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(unparseableExtra);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(unparseableExtra);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
19	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable,  rawName);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(includeUnparseable,  rawName);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
20	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable,  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable,  unparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(includeUnparseable,  unparseable);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
21	[BUG]  [BUGGY]  if(includeUnparseable  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  unparseableExtra.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  unparseableExtra.length  ==  0)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
22	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length!=  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra.length!=  0)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
23	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  ||  unparseableExtra.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  unparseableExtra.length  ==  0)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
24	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length  >=  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra.length  >=  0)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
25	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.getExtraFields(includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.getExtraFields(includeUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
26	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  extraFields);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  extraFields);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
27	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  extra);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  extra);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
28	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  this);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  this);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
29	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  sourceName);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  sourceName);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
30	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  null);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  null);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
31	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  +  1]);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
32	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  -  1]);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  -  1]);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
33	[BUG]  [BUGGY]  (ZipExtraFieldData[])this.extraFields.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])this.extraFields.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])this.extraFields.toArray(new  ZipExtraField[extraFields.size()  ]);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
34	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  *  2]);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  *  2]);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  *  2]);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
35	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  +  2]);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  +  2]);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  +  2]);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
36	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  ],  includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  ],  includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  ],  includeUnparseable);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
37	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  <  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  <  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields  <  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    <    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
38	[BUG]  [BUGGY]  if(includeUnparseable  &&  unparseableExtra  <  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  unparseableExtra  <  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  unparseableExtra  <  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    <    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
39	[BUG]  [BUGGY]  if(includeUnparseable  ||  unparseableExtra  <  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  unparseableExtra  <  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  unparseableExtra  <  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    <    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
40	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length  <  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length  <  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.length  <  1)  {	  if(extraFields    ==    null    ||    unparseableExtra    <    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
41	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  this.extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  this.extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  this.extraFields  ==  null)  {	  if(this.extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
42	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  this.extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  ||  this.extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  this.extraFields  ==  null)  {	  if(this.extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
43	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  containsUnparseable  ||  extraFields  ==  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
44	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
45	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
46	[BUG]  [BUGGY]  if(unparseable  ||  containsUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  ||  containsUnparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  ||  containsUnparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
47	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  includeUnparseable  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
48	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseable  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseable  ||  extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  includeUnparseable  ||  extraFields  ==  null)  {	  if(extraFields    ==    null    ||    includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
49	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.length)  {	  if(extraFields    ==    null    ||    unparseableExtra)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
50	[BUG]  [BUGGY]  if(includeUnparseable!=  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable!=  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable!=  null  ||  extraFields.contains(includeUnparseable))  {	  if(extraFields!=    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
51	[BUG]  [BUGGY]  if(includeUnparseable  &&  this.unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  this.unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  this.unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    this.unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
52	[BUG]  [BUGGY]  if(unparseable  ||  this.unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  ||  this.unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  ||  this.unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    this.unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
53	[BUG]  [BUGGY]  if(includeUnparseable  &&  this.unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  this.unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  this.unparseableExtra!=  null)  {	  if(includeUnparseable    ||    this.unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
54	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  externalAttributes.contains(includeUnparseable))  {	  if(externalAttributes    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
55	[BUG]  [BUGGY]  if(includeUnparseable  ==  null  ||  extraFields.contains(externalAttributes))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ==  null  ||  extraFields.contains(externalAttributes))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ==  null  ||  extraFields.contains(externalAttributes))  {	  if(externalAttributes    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
56	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.contains(unparseableExtra))  {	  if(externalAttributes    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
57	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraAttributes.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraAttributes.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraAttributes.contains(includeUnparseable))  {	  if(externalAttributes    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
58	[BUG]  [BUGGY]  if(!includeUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(!includeUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(!includeUnparseable  ||  unparseableExtra  ==  null)  {	  if(!includeUnparseable    &&    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
59	[BUG]  [BUGGY]  if(!includeUnparseable  &&  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(!includeUnparseable  &&  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(!includeUnparseable  &&  unparseableExtra!=  null)  {	  if(!includeUnparseable    &&    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
60	[BUG]  [BUGGY]  if(includeUnparseable  &&  extraFields  ==  null  ||  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  extraFields  ==  null  ||  extraFields.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  extraFields  ==  null  ||  extraFields.contains(unparseableExtra))  {	  if(extraFields    ==    null    ||    extraFields.contains(unparseableExtra))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
61	[BUG]  [BUGGY]  if(includeUnparseable  &&  uniqueExtraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  uniqueExtraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  uniqueExtraFields  ==  null)  {	  if(includeUnparseable    ||    uniqueExtraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
62	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  uniqueExtraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  uniqueExtraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  uniqueExtraFields  ==  null)  {	  if(includeUnparseable    ||    uniqueExtraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
63	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  includeUnparseableExtra  ==  null)  {	  if(includeUnparseable    ||    uniqueExtraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
64	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra.size()  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
65	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
66	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
67	[BUG]  [BUGGY]  if(includeUnparseable  &&  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  extraFields  ==  null  ||  extraFields.size()  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
68	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()  ==  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.size()  ==  1)  {	  if(unparseableExtra    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
69	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  unparseableExtra  ==  null)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
70	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  unparseableExtra);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable,  unparseableExtra);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
71	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  rawName);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable,  rawName);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
72	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(unparseableExtra);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(unparseableExtra);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
73	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  internalAttributes);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable,  internalAttributes);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
74	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  unparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable,  unparseable);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
75	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  this);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable,  this);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
76	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields  ==  null  &&  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    &&    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
77	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields!=  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields!=  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields!=  null  &&  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    &&    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
78	[BUG]  [BUGGY]  if(unparseableExtra!=  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  &&  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    &&    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
79	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  externalAttributes  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  externalAttributes  ==  null)  {	  if(externalAttributes    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
80	[BUG]  [BUGGY]  if(internalAttributes  ==  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(internalAttributes  ==  null  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(internalAttributes  ==  null  ||  unparseableExtra  ==  null)  {	  if(externalAttributes    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
81	[BUG]  [BUGGY]  if(unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null)  {	  if(includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
82	[BUG]  [BUGGY]  if(includeUnparseable  ||  unparseableExtra  >=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  unparseableExtra  >=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  unparseableExtra  >=  null)  {	  if(includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
83	[BUG]  [BUGGY]  if(unparseable  ||  this.includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  ||  this.includeUnparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  ||  this.includeUnparseableExtra  ==  null)  {	  if(this.includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
84	[BUG]  [BUGGY]  if(this.includeUnparseable  &&  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.includeUnparseable  &&  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable  &&  unparseableExtra  ==  null)  {	  if(this.includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
85	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  this.includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  this.includeUnparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  this.includeUnparseableExtra  ==  null)  {	  if(this.includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
86	[BUG]  [BUGGY]  if(includeUnparseable  &&  unparseableExtra  ==  null  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  unparseableExtra  ==  null  ||  extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  unparseableExtra  ==  null  ||  extraFields  ==  null)  {	  if(unparseableExtra    ==    null    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
87	[BUG]  [BUGGY]  if(includeUnparseable  >=  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  >=  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  >=  null  ||  extraFields.contains(includeUnparseable))  {	  if(unparseableExtra!=    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
88	[BUG]  [BUGGY]  if(this.includeUnparseable  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.includeUnparseable  ||  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable  ||  unparseableExtra!=  null)  {	  if(includeUnparseable    &&    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
89	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
90	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields.clone();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
91	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
92	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)includeUnparseable.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)includeUnparseable.clone();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)includeUnparseable.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
93	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(0);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(0);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(0);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
94	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  externalAttributes!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  externalAttributes!=  null)  {	  if(extraFields!=    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
95	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >=  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()  >=  0)  {	  if(extraFields    ==    null    ||    extraFields.size()!=    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
96	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()!=  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.size()!=  0)  {	  if(extraFields    ==    null    ||    extraFields.size()!=    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
97	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()!=  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.size()!=  0)  {	  if(extraFields    ==    null    ||    extraFields.size()!=    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
98	[BUG]  [BUGGY]  if(includeUnparseable  ||  this.extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  this.extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  this.extraFields  ==  null)  {	  if(this.extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
99	[BUG]  [BUGGY]  if(this.extraFields  ==  null  ||  unparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.extraFields  ==  null  ||  unparseableExtra)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.extraFields  ==  null  ||  unparseableExtra)  {	  if(this.extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
100	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  extraFields.size()  ==  1)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
101	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()!=  1)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
102	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.size()  ==  1)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
103	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >=  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >=  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()  >=  1)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
104	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields.get(includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields.get(includeUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
105	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable  +  1);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable  +  1);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
106	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  null);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  null);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
107	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  0);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  0);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
108	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  true);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  true);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
109	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  this.includeUnparseable  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  this.includeUnparseable  ||  extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  this.includeUnparseable  ||  extraFields  ==  null)  {	  if(this.includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
110	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  this.includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  this.includeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  this.includeUnparseable)  {	  if(this.includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
111	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1  ||  extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1  ||  extraFields.size()  ==  2)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  1  ||  extraFields.size()  ==  2)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    2)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
112	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  2)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()!=  2)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    2)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
113	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  2)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  extraFields.size()  ==  2)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    2)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
114	[BUG]  [BUGGY]  if(unparseable  &&  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  &&  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  &&  unparseableExtra  ==  null)  {	  if(unparseable    ||    includeUnparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
115	[BUG]  [BUGGY]  if(unparseable  &&  includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  &&  includeUnparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  &&  includeUnparseableExtra  ==  null)  {	  if(unparseable    ||    includeUnparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
116	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
117	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields.length);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields.length);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
118	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  this.extraFields);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  this.extraFields);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
119	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  this);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  this);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
120	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields.size());  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  extraFields.size());	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
121	[BUG]  [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData.class  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData.class  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  UnparseableExtraFieldData.class  ==  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
122	[BUG]  [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  UnparseableExtraFieldData.class!=  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
123	[BUG]  [BUGGY]  if(unparseable  ||  UnparseableExtraFieldData.class  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseable  ||  UnparseableExtraFieldData.class  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseable  ||  UnparseableExtraFieldData.class  ==  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
124	[BUG]  [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData.class!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData.class!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  UnparseableExtraFieldData.class!=  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
125	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  externalAttributes.size()  ==  0)  {	  if(externalAttributes    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
126	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraAttributes.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraAttributes.size()  ==  0)  {	  if(externalAttributes    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
127	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
128	[BUG]  [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
129	[BUG]  [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
130	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields.length);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields.length);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
131	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  this);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  this);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
132	[BUG]  [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields.length);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtra  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  extraFields.length);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
133	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  includeUnparseableExtra)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  includeUnparseableExtra)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
134	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  &&  unparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  &&  unparseableExtra)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  &&  unparseableExtra)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
135	[BUG]  [BUGGY]  if(includeUnparseable  ||  additionalFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  additionalFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  additionalFields  ==  null)  {	  if(includeUnparseable    &&    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
136	[BUG]  [BUGGY]  if(includeUnparseable  ||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  externalAttributes  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  externalAttributes  ==  null)  {	  if(includeUnparseable    &&    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
137	[BUG]  [BUGGY]  if(includeUnparseable  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  extraFields.contains(includeUnparseable))  {	  if(includeUnparseable    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
138	[BUG]  [BUGGY]  if(includeUnparseable  ||  unparseableExtra.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  unparseableExtra.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  unparseableExtra.contains(includeUnparseable))  {	  if(includeUnparseable    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
139	[BUG]  [BUGGY]  if(includeUnparseable  ||  unparseableExtra.contains(extraFields))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  unparseableExtra.contains(extraFields))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  unparseableExtra.contains(extraFields))  {	  if(includeUnparseable    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
140	[BUG]  [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtra  unparseableExtra  =  getUnparseableExtra();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtra  unparseableExtra  =  getUnparseableExtra();	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
141	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(unparseableExtra  ==  null)?  getUnparseableExtra()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(unparseableExtra  ==  null)?  getUnparseableExtra()  :  null;  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(unparseableExtra  ==  null)?  getUnparseableExtra()  :  null;	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
142	[BUG]  [BUGGY]  if(includeUnparseableExtra  ==  null  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseableExtra  ==  null  ||  unparseableExtra.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseableExtra  ==  null  ||  unparseableExtra.length  ==  0)  {	  if(unparseableExtra    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
143	[BUG]  [BUGGY]  if(includeUnparseableExtra  ==  null  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseableExtra  ==  null  ||  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseableExtra  ==  null  ||  unparseableExtra!=  null)  {	  if(unparseableExtra    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
144	[BUG]  [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  UnparseableExtraFieldData  ==  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
145	[BUG]  [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  UnparseableExtraFieldData!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  UnparseableExtraFieldData!=  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
146	[BUG]  [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  UnparseableExtraFieldData!=  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
147	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.length  >  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.length  >  0)  {	  if(extraFields!=    null    ||    unparseableExtra)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
148	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  &&  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  &&  extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  &&  extraFields  ==  null)  {	  if(unparseableExtra!=    null    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
149	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  &&  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  &&  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  &&  unparseableExtra!=  null)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
150	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  extraFields.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  ||  extraFields.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  extraFields.length  ==  0)  {	  if(extraFields    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
151	[BUG]  [BUGGY]  if(includeUnparseable  &&  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  unparseableExtra.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  unparseableExtra.length  ==  0)  {	  if(extraFields    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
152	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  this);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  this);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
153	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable  +  1);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable  +  1);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
154	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  internalAttributes);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  internalAttributes);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
155	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  true);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  true);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
156	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  null);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  null);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
157	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  0);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  0);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
158	[BUG]  [BUGGY]  if(includeUnparseable  {  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  {  null  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  {  null  ||  unparseableExtra  ==  null)  {	  if(unparseableExtra    ==    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
159	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(includeUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
160	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable  +  1);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable  +  1);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
161	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  null);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  null);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
162	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  this);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  this);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
163	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  0);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  0);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
164	[BUG]  [BUGGY]  if(includeUnparsable  &&  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparsable  &&  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparsable  &&  unparseableExtra!=  null)  {	  if(includeUnparseable    ||    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
165	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    unparseableExtra.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
166	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extractFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extractFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extractFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    ||    unparseableExtra.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
167	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
168	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  containsUnparseable  ||  extraFields!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  containsUnparseable  ||  extraFields!=  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
169	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  unparseableExtra!=  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
170	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.contains(unparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(unparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
171	[BUG]  [BUGGY]  if(extraFields  ==  null  &&  extraFields.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  &&  extraFields.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  &&  extraFields.contains(unparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(unparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
172	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable  -  1);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable  -  1);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
173	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(unparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(unparseable);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
174	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  result);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  result);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable,  result);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
175	[BUG]  [BUGGY]  if(unparseableExtraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtraFields  ==  null)  {	  if(includeUnparseable    ||    uniqueExtraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
176	[BUG]  [BUGGY]  UnparseableExtraTraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraTraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraTraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
177	[BUG]  [BUGGY]  if(extraFields!=  null  &&  extraFields.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  extraFields.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  extraFields.contains(unparseableExtra))  {	  if(extraFields    ==    null    &&    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
178	[BUG]  [BUGGY]  if(extraFields!=  null  &&  extraFields.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  extraFields.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  extraFields.contains(unparseable))  {	  if(extraFields    ==    null    &&    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
179	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  includeUnparseable.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  includeUnparseable.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  includeUnparseable.contains(unparseableExtra))  {	  if(unparseableExtra    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
180	[BUG]  [BUGGY]  if(includeUnparseable  &&  this.includeUnparseable  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  &&  this.includeUnparseable  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  &&  this.includeUnparseable  ==  null)  {	  if(this.includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
181	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  ||  extraFields!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  extraFields!=  null)  {	  if(extraFields!=    null    ||    unparseableExtra)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
182	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields.size()  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
183	[BUG]  [BUGGY]  if(includeUnparseable  ||  unparseableExtra.class  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  unparseableExtra.class  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  unparseableExtra.class  ==  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
184	[BUG]  [BUGGY]  if(this.includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
185	[BUG]  [BUGGY]  if(includeUnparseableExtra  ==  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseableExtra  ==  null  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseableExtra  ==  null  ||  unparseableExtra  ==  null)  {	  if(unparseableExtra    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
186	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  outerAttributes);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  outerAttributes);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
187	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  externalAttributes);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(includeUnparseable,  externalAttributes);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
188	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtraFactory();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtraFactory();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtraFactory();	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
189	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  createUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  createUnparseableExtra();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  createUnparseableExtra();	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
190	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseibleExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseibleExtra();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseibleExtra();	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
191	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  ||  includeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  includeUnparseable)  {	  if(extraFields!=    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
192	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)externalAttributes.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)externalAttributes.clone();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)externalAttributes.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
193	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  insertUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  insertUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  insertUnparseable  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
194	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(extraFields))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(extraFields))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra.contains(extraFields))  {	  if(extraFields    ==    null    ||    extraFields.contains(unparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
195	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  rawName);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  rawName);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
196	[BUG]  [BUGGY]  if(extraFields!=  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  unparseableExtra  ==  null)  {	  if(this.extraFields    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
197	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null  ||  unparseableExtra.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  extraFields  ==  null  ||  unparseableExtra.length  ==  0)  {	  if(extraFields    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
198	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  unparseableExtra.length  ==  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  unparseableExtra.length  ==  1)  {	  if(unparseableExtra    ==    null    ||    unparseableExtra.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
199	[BUG]  [BUGGY]  if(this.unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.unparseableExtra  ==  null)  {	  if(includeUnparseable    ||    this.unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
200	[BUG]  [BUGGY]  if(this.includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.includeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable)  {	  if(includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
201	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(unparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(unparseable);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
202	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.getExtraFields(includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.getExtraFields(includeUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
203	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  outerAttributes);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable,  outerAttributes);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
204	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.length  ==  0)  {	  if(extraFields    ==    null    ||    extraFields.size()!=    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
205	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(unparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(unparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra.contains(unparseableExtra))  {	  if(extraFields    ==    null    ||    unparseableExtra.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
206	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  unparseableExtra.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  unparseableExtra.contains(unparseable))  {	  if(extraFields    ==    null    ||    unparseableExtra.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
207	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  outerAttributes);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  outerAttributes);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
208	[BUG]  [BUGGY]  if(extraFields!=  null  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  unparseableExtra.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  unparseableExtra.length  ==  0)  {	  if(unparseableExtra    ==    null    ||    extraFields.length    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
209	[BUG]  [BUGGY]  if(extraFields!=  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  extraFields.contains(includeUnparseable))  {	  if(extraFields!=    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
210	[BUG]  [BUGGY]  if(unparseableExtra.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra.contains(includeUnparseable))  {	  if(includeUnparseable    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
211	[BUG]  [BUGGY]  if(unparseableExtra!=  null  ||  containsUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra!=  null  ||  containsUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra!=  null  ||  containsUnparseable)  {	  if(extraFields!=    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
212	[BUG]  [BUGGY]  if(this.includeUnparseable  ||  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.includeUnparseable  ||  extraFields!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable  ||  extraFields!=  null)  {	  if(includeUnparseable    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
213	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  0  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  0  ]);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[extraFields.size()  0  ]);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
214	[BUG]  [BUGGY]  if(this.includeUnparseable  &&  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(this.includeUnparseable  &&  extraFields  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(this.includeUnparseable  &&  extraFields  ==  null)  {	  if(this.includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
215	[BUG]  [BUGGY]  if(includeUnparseable  ||  this.includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  this.includeUnparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  this.includeUnparseableExtra  ==  null)  {	  if(unparseable    ||    includeUnparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
216	[BUG]  [BUGGY]  if(includeUnparseable  ||  includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  includeUnparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  includeUnparseableExtra  ==  null)  {	  if(unparseable    ||    includeUnparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
217	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  externalAttributes.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  externalAttributes.size()  ==  0)  {	  if(externalAttributes    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
218	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  ==  1)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.length  ==  1)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
219	[BUG]  [BUGGY]  if(extraFields!=  null  ||  unparseableExtra.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  unparseableExtra.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  unparseableExtra.contains(includeUnparseable))  {	  if(unparseableExtra!=    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
220	[BUG]  [BUGGY]  if(includeUnparseable  >>  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  >>  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  >>  null  ||  extraFields.contains(includeUnparseable))  {	  if(unparseableExtra!=    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
221	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  containsUnparseable  ||  unparseableExtra!=  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
222	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  insertUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  insertUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  insertUnparseable)  {	  if(this.extraFields    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
223	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable?  null  :  includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable?  null  :  includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(includeUnparseable?  null  :  includeUnparseable);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
224	[BUG]  [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable?  null  :  excludeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData)extraFields.get(includeUnparseable?  null  :  excludeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData)extraFields.get(includeUnparseable?  null  :  excludeUnparseable);	  (ZipExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
225	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  this.includeUnparseable  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  this.includeUnparseable  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  this.includeUnparseable  ==  null)  {	  if(this.includeUnparseable    ||    extraFields    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
226	[BUG]  [BUGGY]  if(includeUnparseable  ||  this.externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  this.externalAttributes  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  this.externalAttributes  ==  null)  {	  if(includeUnparseable    ||    this.unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
227	[BUG]  [BUGGY]  if(includeUnparseable  ||  this.unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  this.unparseableExtra!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  this.unparseableExtra!=  null)  {	  if(includeUnparseable    ||    this.unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
228	[BUG]  [BUGGY]  if(includeUnparseable  ==  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ==  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ==  null  &&  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    &&    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
229	[BUG]  [BUGGY]  if(includeUnparseable!=  null  &&  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable!=  null  &&  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable!=  null  &&  extraFields.contains(includeUnparseable))  {	  if(extraFields    ==    null    &&    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
230	[BUG]  [BUGGY]  if(extraFields!=  null  ||  unparseableExtra  <  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  unparseableExtra  <  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  unparseableExtra  <  null)  {	  if(extraFields    ==    null    ||    unparseableExtra    <    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
231	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  2  ||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  2  ||  externalAttributes!=  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  2  ||  externalAttributes!=  null)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    2)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
232	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  2)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.size()  ==  2)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    2)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
233	[BUG]  [BUGGY]  if(extraFields!=  null  &&  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  extraFields.size()  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
234	[BUG]  [BUGGY]  if(includeUnparseable  <  =  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  <  =  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  <  =  extraFields.contains(includeUnparseable))  {	  if(includeUnparseable    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
235	[BUG]  [BUGGY]  if(includeUnparseableExtra.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseableExtra.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseableExtra.contains(unparseable))  {	  if(includeUnparseable    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
236	[BUG]  [BUGGY]  if(includeUnparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseableExtra)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseableExtra)  {	  if(includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
237	[BUG]  [BUGGY]  if(includeUnparseable  ||  super.getExtraFields()  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  super.getExtraFields()  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  super.getExtraFields()  ==  null)  {	  if(includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
238	[BUG]  [BUGGY]  if(extraFields!=  null  &&  unparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  unparseableExtra)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  unparseableExtra)  {	  if(extraFields!=    null    ||    unparseableExtra)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
239	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  unparseableExtra)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  unparseableExtra)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  unparseableExtra)  {	  if(extraFields!=    null    ||    unparseableExtra)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
240	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  rawName);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(includeUnparseable,  rawName);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
241	[BUG]  [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData  <  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData  <  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  UnparseableExtraFieldData  <  null)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
242	[BUG]  [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null  ||  extraFields.contains(includeUnparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null  ||  extraFields.contains(includeUnparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null  ||  extraFields.contains(includeUnparseable))  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
243	[BUG]  [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null  ||  unparseableExtra.length  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null  ||  unparseableExtra.length  ==  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(includeUnparseable  ||  UnparseableExtraFieldData.class  ==  null  ||  unparseableExtra.length  ==  0)  {	  if(includeUnparseable    ||    UnparseableExtraFieldData.class    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
244	[BUG]  [BUGGY]  if(extraFields!=  null  &&  containsUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  containsUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  containsUnparseable)  {	  if(extraFields!=    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
245	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  containsUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  containsUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  containsUnparseable)  {	  if(extraFields!=    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
246	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  extraFields.contains(unparseable))  {	  if(externalAttributes    ==    null    ||    extraFields.contains(includeUnparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
247	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(includeUnparseableExtra))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(includeUnparseableExtra))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.contains(includeUnparseableExtra))  {	  if(extraFields!=    null    ||    extraFields.contains(unparseableExtra))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
248	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  unparseableExtra  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields  ==  null  ||  unparseableExtra  ==  null)  {	  if(extraFields    ==    null    ||    containsUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
249	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable?  null  :  includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable?  null  :  includeUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable?  null  :  includeUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
250	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  this.extraFields);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable,  this.extraFields);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
251	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1  ||  includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1  ||  includeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  1  ||  includeUnparseable)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
252	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  sourceName);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  sourceName);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
253	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  insertUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  insertUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  getUnparseableExtra(includeUnparseable,  insertUnparseable);	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
254	[BUG]  [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  insertUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  byte[]  extraFields  =  getExtraFields(includeUnparseable,  insertUnparseable);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	byte[]  extraFields  =  getExtraFields(includeUnparseable,  insertUnparseable);	  byte[]    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
255	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(unparseable))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(unparseable))  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  extraFields.contains(unparseable))  {	  if(extraFields    ==    null    ||    extraFields.contains(unparseable))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
256	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(unparseableExtra  ==  null)?  new  ZipExtraField[0]  :  getUnparseableExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(unparseableExtra  ==  null)?  new  ZipExtraField[0]  :  getUnparseableExtra();  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =(unparseableExtra  ==  null)?  new  ZipExtraField[0]  :  getUnparseableExtra();	  UnparseableExtraFieldData    unparseableExtra    =    getUnparseableExtra();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
257	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  extraFields.size()  ==  2)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  extraFields.size()  ==  2)  {	  if(unparseableExtra    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
258	[BUG]  [BUGGY]  if(extraFields!=  null  &&  includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  includeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  includeUnparseable)  {	  if(extraFields!=    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
259	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  includeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  includeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  includeUnparseable)  {	  if(extraFields!=    null    ||    includeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
260	[BUG]  [BUGGY]  if(unparseableExtra  ==  null  ||  includesUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(unparseableExtra  ==  null  ||  includesUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(unparseableExtra  ==  null  ||  includesUnparseable)  {	  if(unparseableExtra    ==    null    ||    containsUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
261	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields  ==  null  ||  externalAttributes  ==  null)  {	  if(externalAttributes    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
262	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  externalAttributes  ==  null)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  externalAttributes  ==  null)  {	  if(externalAttributes    ==    null    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
263	[BUG]  [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[externalAttributes.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  (ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[externalAttributes.size()  ]);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	(ZipExtraFieldData[])extraFields.toArray(new  ZipExtraField[externalAttributes.size()  ]);	  (ZipExtraFieldData[])extraFields.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
264	[BUG]  [BUGGY]  if(extraFields!=  null  &&  excludeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  &&  excludeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  &&  excludeUnparseable)  {	  if(extraFields!=    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
265	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  excludeUnparseable)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(externalAttributes  ==  null  ||  excludeUnparseable)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(externalAttributes  ==  null  ||  excludeUnparseable)  {	  if(extraFields!=    null    ||    excludeUnparseable)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
266	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  sourceName);  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	UnparseableExtraFieldData  unparseableExtra  =  extraFields.get(includeUnparseable,  sourceName);	  UnparseableExtraFieldData    unparseableExtra    =    extraFields.get(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
267	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()!=  0)  {  [BUGGY]      return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	if(extraFields!=  null  ||  extraFields.size()!=  0)  {	  if(extraFields    ==    null    ||    extraFields.size()!=    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
