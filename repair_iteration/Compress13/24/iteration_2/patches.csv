bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
2	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
3	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId()	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
4	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length  -  1;  i  <  len;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  fields.length  -  1;  i  <  len;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length  -  1;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    fields.length;    i    <    len;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length  -  2;  i  <  len;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  fields.length  -  2;  i  <  len;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length  -  2;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    fields.length;    i    <    len;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len  +  1;  i++)  {	  for(int    i    =    0,    len    =    fields.length;    i    <    len;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length  +  1;  i  <  len;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  fields.length  +  1;  i  <  len;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length  +  1;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    fields.length;    i    <    len;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  >=  len;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  >=  len;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length;  i  >=  len;  i++)  {	  for(int    i    =    0,    len    =    fields.length;    i    <    len;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.externalAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.externalAttributes.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.externalAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputAttributes.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  outputAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  size;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  size;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  size;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1;  i  <  fields.length  -  2;  i++)  {	  for(int    i    =    1;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  3;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  3;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1;  i  <  fields.length  -  3;  i++)  {	  for(int    i    =    1;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  4;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  4;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1;  i  <  fields.length  -  4;  i++)  {	  for(int    i    =    1;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  fields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  2;  i  <  fields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  2;  i  <  fields.length  -  1;  i++)  {	  for(int    i    =    1;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  5;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  5;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1;  i  <  fields.length  -  5;  i++)  {	  for(int    i    =    1;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  *  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  *  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  *  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    /    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
22	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }	  if(fields!=    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
23	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }	  if(fields!=    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
24	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  if(fields!=    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
25	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>();	  if(fields    ==    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
27	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
28	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtra.length  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtra.length  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtra.length  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
29	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  field.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  field.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  size  =  field.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
30	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
31	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  fields.length;  i++)  {	  for(int    i    =    0;    i    <    extraFields.length    &&    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  >=  fields.length;  i++)  {	  for(int    i    =    0;    i    <    extraFields.length    &&    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i!=  fields.length;  i++)  {	  for(int    i    =    0;    i    <    extraFields.length    &&    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  ==  fields.length;  i++)  {	  for(int    i    =    0;    i    <    extraFields.length    &&    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i!=  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i!=  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  extraFields.length  &&  i!=  fields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i!=    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  >=  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  >=  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  extraFields.length  &&  i  >=  fields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i!=    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  =  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  =  extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  =  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i!=    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
39	[BUG]  [BUGGY]  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
41	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
42	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
43	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
44	[BUG]  [BUGGY]  unparseableExtraFields  =  new  ZipExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  unparseableExtraFields  =  new  ZipExtraField(fields[i].getHeaderId());  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	unparseableExtraFields  =  new  ZipExtraField(fields[i].getHeaderId());	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    outputFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    outputFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields[i];  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields[i];  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields[i];  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    outputFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    outputFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length()  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length()  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length()  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length()  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length()  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length()  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length()  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length()  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length()  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length()  +  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length()  +  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length()  +  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length()  *  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length()  *  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length()  *  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  fields.length();  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  1;  i  <  fields.length();  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1;  i  <  fields.length();  i++)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
56	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
57	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
58	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
59	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
61	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
62	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
63	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
64	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
65	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }	  if(fields    ==    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
66	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
68	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  ==  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  ==  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  extraFields.length  &&  i  ==  fields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    ==    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraAttributes.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    internalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.internalAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.internalAttributes.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.internalAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    internalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  3;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  3;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  3;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  4;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  4;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  4;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  5;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  5;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  5;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
76	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields[i];  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields[i];  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields[i];  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
78	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i].getHeaderId();  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i].getHeaderId();  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i].getHeaderId();  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
79	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +extraFields[i];  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +extraFields[i];  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  +extraFields[i];  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
80	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  fields[i];  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  fields[i];  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  fields[i];  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
81	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  sources[i];  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  sources[i];  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  sources[i];  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
82	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  unparseableExtraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  unparseableExtraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  unparseableExtraFields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  unparseableExtraFields.length;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  unparseableExtraFields.length;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  unparseableExtraFields.length;  i  <  fields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  0,  fieldCount;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  fieldCount;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  fieldCount;  i  <  fields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0,  fieldCount;  i  <  unparseableExtraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  fieldCount;  i  <  unparseableExtraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  fieldCount;  i  <  unparseableExtraFields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0,  fields.length;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  fields.length;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  fields.length;  i  <  fields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0,  hashCode;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  hashCode;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  hashCode;  i  <  fields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
88	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getName(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
89	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getRawId(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
90	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getExtra(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
91	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getFullName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
92	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getExtraId(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
93	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getId(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
94	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  0;  i  <  fields.length  -  1;  i++)  {	  For(int    i    =    0;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
95	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  0;  i  <  fields.length  -  2;  i++)  {	  For(int    i    =    0;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
96	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  fields.length  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  For(int  i  =  0;  i  <  fields.length  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  0;  i  <  fields.length  +  1;  i++)  {	  For(int    i    =    0;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
97	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  3;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  3;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  0;  i  <  fields.length  -  3;  i++)  {	  For(int    i    =    0;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
98	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  4;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  For(int  i  =  0;  i  <  fields.length  -  4;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  0;  i  <  fields.length  -  4;  i++)  {	  For(int    i    =    0;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
99	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getName(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getName(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
100	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getRawId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getRawId(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
101	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getFullName(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
102	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getExtra(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
103	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getId(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
104	[BUG]  [BUGGY]  extraFields.put(fields[i].getReturnType(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getReturnType(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getReturnType(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields[i].getHeaderId();  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields[i].getHeaderId();  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields[i].getHeaderId();  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  fields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  fields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  fields.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
111	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  this.extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  this.extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  >=  this.extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  this.extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  this.extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i!=  this.extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  this.extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  this.extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  ==  this.extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  externalAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  externalAttributes.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  >=  externalAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  externalAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  externalAttributes.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  ==  externalAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    externalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  inputFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  inputFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  inputFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    outputFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.outputFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.outputFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.outputFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    outputFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  outputFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  outputFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  +  outputFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    outputFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
121	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
122	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  6;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  6;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  6;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
124	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getSourceName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
125	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i],  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i],  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  externalAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  externalAttributes.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i!=  externalAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    internalAttributes.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  6;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  6;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1;  i  <  fields.length  -  6;  i++)  {	  for(int    i    =    1;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
128	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId()	  if(fields!=    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
129	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
130	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
131	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
132	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  2  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  2  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  /  2  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    /    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  3;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  3;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  /  3;  i++)  {	  for(int    i    =    0;    i    <    fields.length    /    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  4;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  4;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  /  4;  i++)  {	  for(int    i    =    0;    i    <    fields.length    /    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
135	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }	  if(fields    ==    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
136	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields.length  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields.length  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields.length  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
137	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.size();  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.size();  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.size();  i++)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length();  i  +=  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length();  i  +=  2)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length();  i  +=  2)  {	  for(int    i    =    0;    i    <    fields.length();    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
139	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i].length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i].length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i].length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
140	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i]  instanceof  ZipExtraFieldData;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i]  instanceof  ZipExtraFieldData;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i]  instanceof  ZipExtraFieldData;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
141	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
142	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId()	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
143	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  fields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length  +  1;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0,  len;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  len;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len;  i  <  fields.length;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
147	[BUG]  [BUGGY]  extraFields.putAll(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.putAll(fields[i].getHeaderId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.putAll(fields[i].getHeaderId(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
148	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtraId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getExtraId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getExtraId(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
149	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
150	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId()	  if(fields    ==    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
151	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId()	  if(fields    ==    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  +  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    +    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  field.length  &&  i  <  +  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  field.length  &&  i  <  +  extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  field.length  &&  i  <  +  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    +    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  extraFields[i].length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  extraFields[i].length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  +  extraFields[i].length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    +    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
155	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId()	  if(fields    ==    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
156	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  field.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  field.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  field.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    3;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
157	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
158	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
159	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
160	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  unparseableExtraFields  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields    ==    null)    {    for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  1;  i  >=  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  1;  i  >=  extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  +  1;  i  >=  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    >=    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  this.extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  this.extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  +  this.extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
163	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  this.extraFields[i]!=  null;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  this.extraFields[i]!=  null;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  this.extraFields[i]!=  null;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    this.extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
164	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.extraFields.put(fields[i].getRawName(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getRawName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
165	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
166	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
167	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
168	[BUG]  [BUGGY]  extraFields.put(fields[i].getShortName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  extraFields.put(fields[i].getShortName(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getShortName(),  fields[i]);	  extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
169	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
170	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
171	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
172	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    ++i)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  ||  i  <  extraFields.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  ||  i  <  extraFields.length  -  2;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  ||  i  <  extraFields.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length    -    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
174	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i],  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i],  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i],  fields[i]);  }	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
175	[BUG]  [BUGGY]  this.unparseableExtraFields.put(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  this.unparseableExtraFields.put(fields[i].getHeaderId(),  fields[i]);  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.unparseableExtraFields.put(fields[i].getHeaderId(),  fields[i]);	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
176	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	  if(fields!=    null)    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    else    {    extraFields.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
177	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
178	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  sources.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  sources.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  sources.length;  i++)  {	  for(int    i    =    0;    i    <    extraFields.length    &&    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
179	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes;  i++)  {	  for(int    i    =    0;    i    <    extraFields.length    &&    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  sourceFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  sourceFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  sourceFields.length;  i++)  {	  for(int    i    =    0;    i    <    extraFields.length    &&    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  =  +  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  =  +  extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  =  +  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    +    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  +  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    +    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  *  +  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  *  +  extraFields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  *  +  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    +    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
184	[BUG]  [BUGGY]  For(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  For(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    fields.length;    i    <    len;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  1,  len  =  fields.length;  i  <  len;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  1,  len  =  fields.length;  i  <  len;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1,  len  =  fields.length;  i  <  len;  i++)  {	  for(int    i    =    0,    len    =    fields.length;    i    <    len;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
186	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	UnparseableExtraFieldData  unparseableExtra  =  (UnparseableExtraFieldData)fields[i].getHeaderId();	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
187	[BUG]  [BUGGY]  For(int  i  =  1;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  For(int  i  =  1;  i  <  fields.length;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  1;  i  <  fields.length;  i++)  {	  For(int    i    =    0;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
188	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }	  if(fields    ==    null)    {    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    }    else    {    extraFields.put(fields[0].getHeaderId(),    fields[1].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outerFields[i];  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outerFields[i];  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  outerFields[i];  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields[i];    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();      [BUGGY]  for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length  -  1;  i++)  {  [BUGGY]      if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length  -  1;  i++)  {	  for(int    i    =    0,    unparseableExtraFields.length;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
