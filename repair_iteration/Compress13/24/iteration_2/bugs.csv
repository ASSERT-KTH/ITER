bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  extraFields.put(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  extraFields.put(fields[i].getHeaderId(),  fields[i]);  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	extraFields.put(fields[i].getHeaderId(),  fields[i]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
2	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
3	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
4	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
5	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
6	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
7	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  1;  i  <  fields.length  -  1;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  1;  i  <  fields.length  -  1;  i++)  {	  for(int    i    =    1;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {	  for(int    i    =    1;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  2;  i  <  fields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  2;  i  <  fields.length;  i++)  {	  for(int    i    =    1;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
11	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  For(int  i  =  0;  i  <  fields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	For(int  i  =  0;  i  <  fields.length;  i++)  {	  for(int    i    =    1;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  3;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  3;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  -  3;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  4;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  4;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  -  4;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  5;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  5;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  -  5;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length();  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length();  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length();  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  /  2;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  /  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    2;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  this.extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  1;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  1;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  1;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  extraFields.length  &&  i  <  fields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  outputFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  +  extraFields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  +  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  2;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields.length  -  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i];  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i];  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  extraFields[i];  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  2;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  2;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  +  2;  i++)  {	  for(int    i    =    0;    i    <    fields.length    +    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  3;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  3;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  +  3;  i++)  {	  for(int    i    =    0;    i    <    fields.length    +    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  4;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  4;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  +  4;  i++)  {	  for(int    i    =    0;    i    <    fields.length    +    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
27	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  5;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  +  5;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  +  5;  i++)  {	  for(int    i    =    0;    i    <    fields.length    +    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0,  unparseableExtraFields.length;  i  <  fields.length;  i++)  {	  for(int    i    =    1;    i    <    fields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
29	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
30	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
31	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
32	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
33	[BUG]  [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
34	[BUG]  [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  >=  extraFields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  >=  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  externalAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  ==  extraFields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  ==  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  extraFields.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i!=  extraFields.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i!=  extraFields.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  6;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  6;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  -  6;  i++)  {	  for(int    i    =    0;    i    <    fields.length    -    1;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
40	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i]);  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	this.extraFields.put(fields[i].getHeaderId(),  fields[i]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
41	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
42	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
43	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  ++i)  {  unparseableExtraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes.length;  i++)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();    [BUGGY]  for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes.length;  i++)  {  [BUGGY]    if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	for(int  i  =  0;  i  <  fields.length  &&  i  <  internalAttributes.length;  i++)  {	  for(int    i    =    0;    i    <    fields.length    &&    i    <    extraFields.length;    i++)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
