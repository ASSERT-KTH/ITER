bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
2	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  -  1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  -  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
3	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
4	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  extra.length);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
5	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  2);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
6	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Integer>();	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
7	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
8	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
9	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(2);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
10	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(4);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
11	[BUG]  [BUGGY]  this.extraFields.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(method,  entryName);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  entryName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
12	[BUG]  [BUGGY]  this.extraFields.put(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(rawName,  method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
13	[BUG]  [BUGGY]  this.extraFields.put(entryName,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(entryName,  rawName);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  rawName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
14	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method));  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method));	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
15	[BUG]  [BUGGY]  this.extraFields.put(key,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(key,  method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
16	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  rawName);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  rawName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
17	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
18	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Var>();	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
19	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
20	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(1);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
21	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(2);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
22	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(4);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
23	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  String,Object>();	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
24	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
25	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(1);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
26	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
27	[BUG]  [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  HashMap  <  String,Object>();	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
28	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(1);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
29	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(4);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
30	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>();	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
31	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(2);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
32	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(8);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
33	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
34	[BUG]  [BUGGY]  gpb.setMethod(this.method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setMethod(this.method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.method);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
35	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setMethod(this.internalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
36	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setMethod(this.internalAttributes[method]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[method]);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
37	[BUG]  [BUGGY]  gpb.setInternalAttributes(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setInternalAttributes(internalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
38	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setMethod(this.internalAttributes,  method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  method);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
39	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
40	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
41	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
42	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.internalAttributes.put(entryName,  method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(entryName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
43	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
44	[BUG]  [BUGGY]  this.internalAttributes  =  internalAttributes;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.internalAttributes  =  internalAttributes;  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  internalAttributes;	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
45	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
46	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(size);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(size);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
47	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(1);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
48	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Integer>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  String,Integer>();	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
49	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setMethod(method,  this.internalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
50	[BUG]  [BUGGY]  super.setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setMethod(method,  null);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  null);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
51	[BUG]  [BUGGY]  super.setMethod(this.method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setMethod(this.method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.method);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
52	[BUG]  [BUGGY]  super.setMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setMethod(method,  true);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  true);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
53	[BUG]  [BUGGY]  super.setMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setMethod(method,  false);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  false);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
54	[BUG]  [BUGGY]  super.setInternalMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setInternalMethod(method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalMethod(method);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
55	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,String>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  ArrayList  <  String,String>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,String>();	  this.extraFields    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
56	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
57	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
58	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(1);	  this.extraFields    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
59	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Object>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Object>();	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
60	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(1);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(1);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
61	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
62	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(2);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(2);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
63	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(4);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
64	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
65	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Annotation>();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Annotation>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Annotation>();	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
66	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(1);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
67	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
68	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(2);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
69	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
70	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  LinkedHashMap());	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
71	[BUG]  [BUGGY]  this.extraFields.put(sourceName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(sourceName,  method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(sourceName,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
72	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(8);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(8);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
73	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
74	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(8);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(8);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
75	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
76	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
77	[BUG]  [BUGGY]  gpb.setExtraFields(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setExtraFields(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(extraFields);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
78	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(4);	  this.extraFields    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
79	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(8);	  this.extraFields    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
80	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(2);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(2);	  this.extraFields    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
81	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(8);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(8);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
82	[BUG]  [BUGGY]  gpb.setInternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setInternalAttributes(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(extraFields);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
83	[BUG]  [BUGGY]  gpb.setExtraField(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setExtraField(this.internalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraField(this.internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
84	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
85	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(8);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(8);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
86	[BUG]  [BUGGY]  super.setInternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setInternalAttributes(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(extraFields);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
87	[BUG]  [BUGGY]  super.setAccessible(true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setAccessible(true);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setAccessible(true);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
88	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
89	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>();	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
90	[BUG]  [BUGGY]  this.extraFields.put(entryName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(entryName,  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  extra);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
91	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method));  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(method));	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
92	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
93	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(8);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(8);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
94	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(4);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(4);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
95	[BUG]  [BUGGY]  this.externalAttributes.put(entryName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes.put(entryName,  method);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(entryName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
96	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
97	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
98	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(size);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(size);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
99	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(4);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(4);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
100	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(4);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(4);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(4);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
101	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(8);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(8);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
102	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
103	[BUG]  [BUGGY]  gpb.setInternalAttributes(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  gpb.setInternalAttributes(extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(extra);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
104	[BUG]  [BUGGY]  super.setInternalAttributes(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  super.setInternalAttributes(internalAttributes);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(internalAttributes);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
105	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
106	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  1;  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  1;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
