bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  gpb.setExtraFields(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(externalAttributes);	  gpb.setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
2	[BUG]  [BUGGY]  gpb.setExtraFields(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(internalAttributes);	  gpb.setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
3	[BUG]  [BUGGY]  gpb.setExtraFields(extraFields,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(extraFields,  this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(extraFields,  this.internalAttributes);	  gpb.setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
4	[BUG]  [BUGGY]  gpb.setExtraFields(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(extraFields,  null);	  gpb.setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
5	[BUG]  [BUGGY]  gpb.setExtraFields(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(extraFields,  internalAttributes);	  gpb.setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
6	[BUG]  [BUGGY]  gpb.setExtraFields(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(extraFields,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(extraFields,  rawName);	  gpb.setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
7	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  TreeMap  <  String,Object>();	  this.extraFields    =    new    ArrayList    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
8	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.extraFields  =  new  LinkedHashMap  <  String,Object>();	  this.extraFields    =    new    ArrayList    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
9	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedList  <  String,Object>();	  this.extraFields    =    new    ArrayList    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
10	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
11	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
12	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
13	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  null);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
14	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
15	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields,  scope);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
16	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(outerAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
17	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(outerAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
18	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(outerAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Var>(outerAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(outerAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
19	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(outerAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
20	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(outerAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
21	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extraAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extraAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extraAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
22	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
23	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
24	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,String>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,String>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,String>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
25	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
26	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
27	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(internalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
28	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(outerAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(outerAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
29	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>(size);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>(size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  String,Object>(size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
30	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(5);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(5);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
31	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(6);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(6);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
32	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(3);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
33	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(5);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
34	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(6);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
35	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(3);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
36	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
37	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
38	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Object>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Object>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Object>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
39	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
40	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
41	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
42	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(3);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
43	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(5);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
44	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(0);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(0);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
45	[BUG]  [BUGGY]  this.externalAttributes.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(method,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(method,  entryName);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
46	[BUG]  [BUGGY]  this.externalAttributes.put(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(rawName,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(rawName,  method);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
47	[BUG]  [BUGGY]  this.internalAttributes.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(method,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(method,  entryName);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
48	[BUG]  [BUGGY]  this.externalAttributes.put(entryName,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(entryName,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(entryName,  rawName);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
49	[BUG]  [BUGGY]  this.externalAttributes.put(key,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(key,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(key,  method);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
50	[BUG]  [BUGGY]  this.extraFields.put(rawName,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  entryName);	  this.extraFields.put(entryName,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
51	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(rawName));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(rawName));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(rawName));	  this.extraFields.put(entryName,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
52	[BUG]  [BUGGY]  this.extraFields.put(entryName,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  name);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  name);	  this.extraFields.put(entryName,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
53	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry());	  this.extraFields.put(entryName,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
54	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  1);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
55	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  -  1);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
56	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  2);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
57	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  *  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  *  2);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
58	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>(extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  String,Object>(extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
59	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.size);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
60	[BUG]  [BUGGY]  super.setInternalMethod(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalMethod(method,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalMethod(method,  internalAttributes);	  super.setInternalMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
61	[BUG]  [BUGGY]  super.setInternalMethod(this.internalMethod);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalMethod(this.internalMethod);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalMethod(this.internalMethod);	  super.setInternalMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
62	[BUG]  [BUGGY]  super.setInternalMethod(method,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalMethod(method,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalMethod(method,  externalAttributes);	  super.setInternalMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
63	[BUG]  [BUGGY]  super.setInternalMethod(method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalMethod(method,  this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalMethod(method,  this.internalAttributes);	  super.setInternalMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
64	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(3);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
65	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(5);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
66	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(6);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
67	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  3);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  3);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
68	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  4);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  4);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
69	[BUG]  [BUGGY]  gpb.setInternalAttributes(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setInternalAttributes(this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(this.internalAttributes);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
70	[BUG]  [BUGGY]  gpb.setExternalAttributes(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExternalAttributes(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExternalAttributes(externalAttributes);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
71	[BUG]  [BUGGY]  gpb.setExternalAttributes(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExternalAttributes(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExternalAttributes(extra);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
72	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(6);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
73	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(internalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
74	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(outerAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(outerAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
75	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.size);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
76	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extends);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
77	[BUG]  [BUGGY]  super.setMethod(method,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this);	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
78	[BUG]  [BUGGY]  super.setMethod(method,  new  LinkedHashMap  <  ZipArchiveEntry>());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  new  LinkedHashMap  <  ZipArchiveEntry>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  new  LinkedHashMap  <  ZipArchiveEntry>());	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
79	[BUG]  [BUGGY]  super.setMethod(method,  null,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  null,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  null,  null);	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
80	[BUG]  [BUGGY]  super.setMethod(this.method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.method,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.method,  null);	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
81	[BUG]  [BUGGY]  super.setMethod(method,  new  ZipArchiveEntry());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  new  ZipArchiveEntry());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  new  ZipArchiveEntry());	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
82	[BUG]  [BUGGY]  super.setExternalAttributes(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setExternalAttributes(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setExternalAttributes(externalAttributes);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
83	[BUG]  [BUGGY]  super.setInternalAttributes(method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(method);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
84	[BUG]  [BUGGY]  super.setInternalAttributes(internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(internalAttributes,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(internalAttributes,  method);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
85	[BUG]  [BUGGY]  super.setMethod(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  internalAttributes);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
86	[BUG]  [BUGGY]  super.setInternalAttributes(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(method,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(method,  internalAttributes);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
87	[BUG]  [BUGGY]  super.setMethod(method,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  externalAttributes);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
88	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(3);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
89	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(0);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(0);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
90	[BUG]  [BUGGY]  gpb.setMethod(method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(method,  this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(method,  this.internalAttributes);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
91	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  this.method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  this.method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  this.method);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
92	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  method,  this.extra);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
93	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.base);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.base);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  method,  this.base);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
94	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  method,  null);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
95	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  String,String>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  TreeMap  <  String,String>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  TreeMap  <  String,String>();	  this.extraFields    =    new    ArrayList    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
96	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,String>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,String>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.extraFields  =  new  LinkedHashMap  <  String,String>();	  this.extraFields    =    new    ArrayList    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
97	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  String,String>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedList  <  String,String>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedList  <  String,String>();	  this.extraFields    =    new    ArrayList    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
98	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
99	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
100	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
101	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
102	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  null);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
103	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
104	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
105	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
106	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
107	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra,  null);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
108	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Object>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Object>(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Object>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
109	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipArchiveEntry>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipArchiveEntry>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  TreeMap  <  ZipArchiveEntry>();	  this.extraFields    =    new    ArrayList    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
110	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>();	  this.extraFields    =    new    ArrayList    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
111	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  ZipArchiveEntry>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedList  <  ZipArchiveEntry>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedList  <  ZipArchiveEntry>();	  this.extraFields    =    new    ArrayList    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
112	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(1);	  this.extraFields    =    new    ArrayList    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
113	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(7);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(7);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
114	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(2);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
115	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(5);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
116	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(6);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
117	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(3);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
118	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
119	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
120	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
121	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Var>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
122	[BUG]  [BUGGY]  super.setMethod(this.method,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.method,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.method,  method);	  super.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
123	[BUG]  [BUGGY]  super.setMethod(this.method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.method,  this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.method,  this.internalAttributes);	  super.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
124	[BUG]  [BUGGY]  super.setMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.internalAttributes);	  super.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
125	[BUG]  [BUGGY]  super.setInternalMethod(this.method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalMethod(this.method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalMethod(this.method);	  super.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
126	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedList  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedList  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedList  <  String,Object>();	  this.externalAttributes    =    new    ArrayList    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
127	[BUG]  [BUGGY]  this.externalAttributes  =  new  TreeMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  TreeMap  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  TreeMap  <  String,Object>();	  this.externalAttributes    =    new    ArrayList    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
128	[BUG]  [BUGGY]  This.externalAttributes  =  new  LinkedHashMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.externalAttributes  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.externalAttributes  =  new  LinkedHashMap  <  String,Object>();	  this.externalAttributes    =    new    ArrayList    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
129	[BUG]  [BUGGY]  super.setMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.internalAttributes,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.internalAttributes,  method);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
130	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  internalAttributes);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
131	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  this.extraFields);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
132	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  null);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
133	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  this.sourceName);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
134	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.platform);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.platform);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  this.platform);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
135	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  Integer>();	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
136	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(1);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
137	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(size);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(size);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
138	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(2);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
139	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(0);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(0);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
140	[BUG]  [BUGGY]  this.extraFields.put(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  rawName);	  this.extraFields.put(method,    entryName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
141	[BUG]  [BUGGY]  this.extraFields.put(key,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(key,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  entryName);	  this.extraFields.put(method,    entryName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
142	[BUG]  [BUGGY]  this.extraFields.put(0,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(0,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(0,  entryName);	  this.extraFields.put(method,    entryName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
143	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  null);	  gpb.setMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
144	[BUG]  [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(entryName));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(entryName));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  new  ZipArchiveEntry(entryName));	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
145	[BUG]  [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  new  ZipArchiveEntry(method));	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
146	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  externalAttributes);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
147	[BUG]  [BUGGY]  this.extraFields.put(key,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(key,  new  ZipArchiveEntry(method));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  new  ZipArchiveEntry(method));	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
148	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  source);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  source);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  source);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
149	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  internalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
150	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  size);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
151	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Object>(extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  String,Object>(extends);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
152	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  externalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
153	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(7);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(7);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
154	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(0);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(0);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
155	[BUG]  [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  ArrayList  <  String,Object>();	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
156	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(1);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
157	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
158	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(2);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
159	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(4);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
160	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(5);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
161	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(6);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
162	[BUG]  [BUGGY]  this.extraFields.put(rawName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  extra);	  this.extraFields.put(entryName,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
163	[BUG]  [BUGGY]  this.extraFields.put(key,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(key,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  extra);	  this.extraFields.put(entryName,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
164	[BUG]  [BUGGY]  this.extraFields.put(method,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  extra);	  this.extraFields.put(entryName,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
165	[BUG]  [BUGGY]  this.extraFields.put(sourceName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(sourceName,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(sourceName,  extra);	  this.extraFields.put(entryName,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
166	[BUG]  [BUGGY]  this.extraFields.put(extra,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(extra,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(extra,  entryName);	  this.extraFields.put(entryName,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
167	[BUG]  [BUGGY]  super.setMethod(this.method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.method,  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.method,  true);	  super.setMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
168	[BUG]  [BUGGY]  super.setMethod(null,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(null,  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(null,  true);	  super.setMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
169	[BUG]  [BUGGY]  super.setMethod(this.internalAttributes,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.internalAttributes,  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.internalAttributes,  true);	  super.setMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
170	[BUG]  [BUGGY]  super.setMethod(method,  true,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  true,  false);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  true,  false);	  super.setMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
171	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  +  1);	  this.extraFields    =    new    ArrayList    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
172	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Integer>(extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Integer>(extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedList  <  String,Integer>(extra.length);	  this.extraFields    =    new    ArrayList    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
173	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  *  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  *  2);	  this.extraFields    =    new    ArrayList    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
174	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
175	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
176	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
177	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  null);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
178	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  unparseableExtra);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
179	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra,  scope);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
180	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
181	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
182	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
183	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  null);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
184	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  scope);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
185	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
186	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
187	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(6);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
188	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(3);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
189	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
190	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
191	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
192	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  size);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
193	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  null);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
194	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  scope);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
195	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  interface);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  interface);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  interface);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
196	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  1);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
197	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  -  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  -  1);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
198	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  2);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
199	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  *  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  *  2);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
200	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  3);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  3);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
201	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes[method  +  1]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[method  +  1]);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
202	[BUG]  [BUGGY]  gpb.setMethod(method,  this.internalAttributes[method]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(method,  this.internalAttributes[method]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(method,  this.internalAttributes[method]);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
203	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method-1]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes[method-1]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[method-1]);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
204	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.platform);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.platform);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[method],  this.platform);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
205	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
206	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
207	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
208	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  unparseableExtra);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
209	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  size);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
210	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  null);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
211	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  Integer>();	  this.extraFields    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
212	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  TreeMap  <  String,Integer>();	  this.extraFields    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
213	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Integer>(1);	  this.extraFields    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
214	[BUG]  [BUGGY]  gpb.setExternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExternalAttributes(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExternalAttributes(extraFields);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
215	[BUG]  [BUGGY]  gpb.setInternalAttributes(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setInternalAttributes(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(extraFields,  internalAttributes);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
216	[BUG]  [BUGGY]  gpb.setExtraFieldData(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFieldData(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFieldData(extraFields);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
217	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(5);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(4);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
218	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  +  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
219	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  2);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  2);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
220	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  4);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  4);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
221	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  -  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  -  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
222	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  3);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  3);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
223	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
224	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(0);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(0);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(0);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
225	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(2);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
226	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(3);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
227	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  size);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
228	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  rawName);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
229	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  internalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
230	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  scope);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
231	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  null);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
232	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  method);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
233	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  sourceName);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
234	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  Integer>();	  this.externalAttributes    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
235	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  Long,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  Long,Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  Long,Integer>();	  this.externalAttributes    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
236	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Integer>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Integer>(extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  String,Integer>(extraFields.length);	  this.externalAttributes    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
237	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(6);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(6);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
238	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(5);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
239	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(7);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(7);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
240	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
241	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
242	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
243	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  16);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  16);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  16);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
244	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  null);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
245	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
246	[BUG]  [BUGGY]  this.extraFields.put(method,  new  ZipEntry(entryName));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  new  ZipEntry(entryName));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  new  ZipEntry(entryName));	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
247	[BUG]  [BUGGY]  this.extraFields.put(rawName,  new  ZipEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  new  ZipEntry(method));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  new  ZipEntry(method));	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
248	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(method),  rawName);	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
249	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(method),  externalAttributes);	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
250	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(method),  internalAttributes);	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
251	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(rawName));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(rawName));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(rawName));	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
252	[BUG]  [BUGGY]  this.extraFields.put(key,  new  ZipEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(key,  new  ZipEntry(method));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  new  ZipEntry(method));	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
253	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  -  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  -  2);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
254	[BUG]  [BUGGY]  gpb.setExtraFields(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(extra);	  gpb.setInternalAttributes(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
255	[BUG]  [BUGGY]  gpb.setExtraAttributes(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraAttributes(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraAttributes(extra);	  gpb.setInternalAttributes(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
256	[BUG]  [BUGGY]  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtra(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtra(extra);	  gpb.setInternalAttributes(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
257	[BUG]  [BUGGY]  gpb.setExtraFieldData(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFieldData(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFieldData(extra);	  gpb.setInternalAttributes(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
258	[BUG]  [BUGGY]  gpb.setInternalAttributes(rawName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setInternalAttributes(rawName,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(rawName,  extra);	  gpb.setInternalAttributes(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
259	[BUG]  [BUGGY]  gpb.setMethod(this.method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.method,  this.extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.method,  this.extra);	  gpb.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
260	[BUG]  [BUGGY]  gpb.setMethod(this.method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.method,  this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.method,  this.internalAttributes);	  gpb.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
261	[BUG]  [BUGGY]  gpb.setMethod(this.method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.method,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.method,  null);	  gpb.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
262	[BUG]  [BUGGY]  gpb.setMethod(this.method,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.method,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.method,  method);	  gpb.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
263	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(7);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(7);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
264	[BUG]  [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  entryName);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
265	[BUG]  [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(entryName),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(entryName),  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  new  ZipArchiveEntry(entryName),  rawName);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
266	[BUG]  [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(rawName),  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(rawName),  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  new  ZipArchiveEntry(rawName),  entryName);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
267	[BUG]  [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(method),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  new  ZipArchiveEntry(method),  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  new  ZipArchiveEntry(method),  rawName);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
268	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  sourceName);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
269	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  extra);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
270	[BUG]  [BUGGY]  this.extraFields.put(method,  key);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  key);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  key);	  this.extraFields.put(key,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
271	[BUG]  [BUGGY]  this.extraFields.put(method,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  method);	  this.extraFields.put(key,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
272	[BUG]  [BUGGY]  this.extraFields.put(method,  value);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  value);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  value);	  this.extraFields.put(key,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
273	[BUG]  [BUGGY]  this.extraFields.put(method,  data);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  data);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  data);	  this.extraFields.put(key,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
274	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
275	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
276	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
277	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
278	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extraAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extraAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extraAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
279	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Annotation>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Annotation>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Annotation>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
280	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  1,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  1,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  1,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
281	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  method);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
282	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  extra.length  *  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  extra.length  *  2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1,  extra.length  *  2);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
283	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
284	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  1,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  1,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  1,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
285	[BUG]  [BUGGY]  this.extraFields.put(externalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(externalAttributes,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(externalAttributes,  method);	  this.extraFields.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
286	[BUG]  [BUGGY]  this.extraFields.put(rawName,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  new  LinkedHashMap());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  new  LinkedHashMap());	  this.extraFields.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
287	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)/  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)/  1;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)/  1;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
288	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  2;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  2;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  2;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
289	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  3;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  3;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  3;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
290	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  4;  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  4;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  4;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
291	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1)+  1;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  +  1)+  1;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
292	[BUG]  [BUGGY]  this.internalAttributes.put(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(rawName,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(rawName,  method);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
293	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(entryName,  new  ZipArchiveEntry(method));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(entryName,  new  ZipArchiveEntry(method));	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
294	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(entryName,  method  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(entryName,  method  +  1);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
295	[BUG]  [BUGGY]  this.internalAttributes.put(key,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(key,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(key,  method);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
296	[BUG]  [BUGGY]  super.setExternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setExternalAttributes(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setExternalAttributes(extraFields);	  super.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
297	[BUG]  [BUGGY]  super.setExtraFields(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setExtraFields(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setExtraFields(extraFields);	  super.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
298	[BUG]  [BUGGY]  super.setInternalAttributes(method,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(method,  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(method,  extraFields);	  super.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
299	[BUG]  [BUGGY]  super.setInternalAttributes(extraFields,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(extraFields,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(extraFields,  method);	  super.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
300	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ArrayList());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ArrayList());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ArrayList());	  this.extraFields.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
301	[BUG]  [BUGGY]  this.extraFields.put(method,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  new  LinkedHashMap());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  new  LinkedHashMap());	  this.extraFields.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
302	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  HashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  HashMap());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  HashMap());	  this.extraFields.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
303	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap  <  String,Object>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  LinkedHashMap  <  String,Object>());	  this.extraFields.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
304	[BUG]  [BUGGY]  this.extraFields.put(key,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(key,  new  LinkedHashMap());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  new  LinkedHashMap());	  this.extraFields.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
305	[BUG]  [BUGGY]  this.internalAttributes  =  method;  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  method;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  method;	  this.internalAttributes    =    internalAttributes;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
306	[BUG]  [BUGGY]  this.internalAttributes  =  interface;  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  interface;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  interface;	  this.internalAttributes    =    internalAttributes;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
307	[BUG]  [BUGGY]  this.internalAttributes  =  externalAttributes;  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  externalAttributes;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  externalAttributes;	  this.internalAttributes    =    internalAttributes;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
308	[BUG]  [BUGGY]  this.internalAttributes  =  new  Long(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  Long(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  Long(internalAttributes);	  this.internalAttributes    =    internalAttributes;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
309	[BUG]  [BUGGY]  this.internalAttributes  =  new  long[size];  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  long[size];  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  long[size];	  this.internalAttributes    =    internalAttributes;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
310	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(1);	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
311	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields);	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
312	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(4);	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
313	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(size);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(size);	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
314	[BUG]  [BUGGY]  this.internalAttributes  =  new  ArrayList  <  ZipArchiveEntry>();  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  ArrayList  <  ZipArchiveEntry>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  ArrayList  <  ZipArchiveEntry>();	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
315	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(2);	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
316	[BUG]  [BUGGY]  this.externalAttributes  =  new  HashMap  <  Object,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  HashMap  <  Object,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  HashMap  <  Object,Object>();	  this.externalAttributes    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
317	[BUG]  [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  HashMap  <  String,Object>(1);	  this.externalAttributes    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
318	[BUG]  [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  HashMap  <  String,Object>(2);	  this.externalAttributes    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
319	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  size);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
320	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  width);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  width);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  width);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
321	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  scope);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
322	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  rawName);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
323	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Annotation>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Annotation>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  TreeMap  <  String,Annotation>();	  this.extraFields    =    new    ArrayList    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
324	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Annotation>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Annotation>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.extraFields  =  new  LinkedHashMap  <  String,Annotation>();	  this.extraFields    =    new    ArrayList    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
325	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Annotation>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Annotation>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedList  <  String,Annotation>();	  this.extraFields    =    new    ArrayList    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
326	[BUG]  [BUGGY]  super.setMethod(this.method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.method,  false);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.method,  false);	  super.setMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
327	[BUG]  [BUGGY]  super.setMethod(null,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(null,  false);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(null,  false);	  super.setMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
328	[BUG]  [BUGGY]  super.setMethod(method,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  false,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  false,  null);	  super.setMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
329	[BUG]  [BUGGY]  super.setMethod(method,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  false,  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  false,  true);	  super.setMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
330	[BUG]  [BUGGY]  gpb.setExtraField(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraField(this.internalAttributes,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraField(this.internalAttributes,  method);	  gpb.setExtraField(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
331	[BUG]  [BUGGY]  gpb.setExtraField(this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraField(this.externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraField(this.externalAttributes);	  gpb.setExtraField(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
332	[BUG]  [BUGGY]  gpb.setExtraField(this.internalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraField(this.internalAttributes,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraField(this.internalAttributes,  null);	  gpb.setExtraField(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
333	[BUG]  [BUGGY]  gpb.setExtraFields(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(this.internalAttributes);	  gpb.setExtraField(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
334	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
335	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
336	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  null);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
337	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
338	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra,  scope);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
339	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,String>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,String>(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,String>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
340	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(extraFields);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
341	[BUG]  [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,String>();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,String>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  ArrayList  <  String,String>();	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
342	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outputFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outputFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outputFields);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
343	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outerAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outerAttributes);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
344	[BUG]  [BUGGY]  this.extraFields.put(method,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  sourceName);	  this.extraFields.put(sourceName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
345	[BUG]  [BUGGY]  this.extraFields.put(ERROR,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(ERROR,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(ERROR,  method);	  this.extraFields.put(sourceName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
346	[BUG]  [BUGGY]  this.extraFields.put(method,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(method,  source);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(method,  source);	  this.extraFields.put(sourceName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
347	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
348	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
349	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(extends);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
350	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
351	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(size);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(size);	  this.externalAttributes    =    new    LinkedHashMap    <    Long,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
352	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(1);	  this.externalAttributes    =    new    LinkedHashMap    <    Long,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
353	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    Long,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
354	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  method);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
355	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  entryName);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
356	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
357	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
358	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
359	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  method);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
360	[BUG]  [BUGGY]  super.setAccessible(false);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setAccessible(false);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setAccessible(false);	  super.setAccessible(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
361	[BUG]  [BUGGY]  super.setAccessible(true,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setAccessible(true,  false);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setAccessible(true,  false);	  super.setAccessible(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
362	[BUG]  [BUGGY]  super.setAccessible(true,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setAccessible(true,  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setAccessible(true,  true);	  super.setAccessible(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
363	[BUG]  [BUGGY]  super.setAccessible(false,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setAccessible(false,  false);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setAccessible(false,  false);	  super.setAccessible(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
364	[BUG]  [BUGGY]  super.setAccessible(true,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setAccessible(true,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setAccessible(true,  method);	  super.setAccessible(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
365	[BUG]  [BUGGY]  super.setAccessible(false,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setAccessible(false,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setAccessible(false,  method);	  super.setAccessible(true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
366	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
367	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
368	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
369	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Integer>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
370	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
371	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Var>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  TreeMap  <  String,Var>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  TreeMap  <  String,Var>();	  this.extraFields    =    new    ArrayList    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
372	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Var>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Var>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.extraFields  =  new  LinkedHashMap  <  String,Var>();	  this.extraFields    =    new    ArrayList    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
373	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Var>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Var>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedList  <  String,Var>();	  this.extraFields    =    new    ArrayList    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
374	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  1,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  1,  extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields.length  +  1,  extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
375	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
376	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extendAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extendAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extendAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
377	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(externalAttributes,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
378	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(7);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(7);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
379	[BUG]  [BUGGY]  this.internalAttributes.put(extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(extra,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(extra,  method);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
380	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(entryName,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(entryName,  rawName);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
381	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(7);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(7);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
382	[BUG]  [BUGGY]  this.extraFields.put(rawName,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  new  LinkedHashMap  <  String,Object>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  new  LinkedHashMap  <  String,Object>());	  this.extraFields.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
383	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes[0]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[0]);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
384	[BUG]  [BUGGY]  gpb.setInternalAttributes(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setInternalAttributes(this.internalAttributes,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(this.internalAttributes,  method);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
385	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.source);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.source);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[method],  this.source);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
386	[BUG]  [BUGGY]  this.internalAttributes  =  methods;  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  methods;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  methods;	  this.internalAttributes    =    internalAttributes;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
387	[BUG]  [BUGGY]  this.extraFields.put(name,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(name,  new  LinkedHashMap());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(name,  new  LinkedHashMap());	  this.extraFields.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
388	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  +  1,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  +  1,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Integer>(extra.length  +  1,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
389	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
390	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra  +  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
391	[BUG]  [BUGGY]  super.setMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  rawName);	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
392	[BUG]  [BUGGY]  super.setMethod(method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.extraFields);	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
393	[BUG]  [BUGGY]  super.setMethod(method,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  new  LinkedHashMap  <  String,Object>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  new  LinkedHashMap  <  String,Object>());	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
394	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
395	[BUG]  [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  ArrayList  <  String,Integer>();	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
396	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(4);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
397	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
398	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
399	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
400	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  1L;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  1L;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)+  1L;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
401	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)-  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)-  1;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length)-  1;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
402	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  ZipArchiveEntry>(extraFields);	  this.extraFields    =    new    ArrayList    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
403	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(extends);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
404	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(1);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
405	[BUG]  [BUGGY]  this.extraFields.put(sourceName,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(sourceName,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(sourceName,  rawName);	  this.extraFields.put(sourceName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
406	[BUG]  [BUGGY]  this.extraFields.remove(sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.remove(sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.remove(sourceName);	  this.extraFields.put(sourceName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
407	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(8);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(8);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
408	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(7);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(7);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
409	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
410	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields).clone();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields).clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extraFields).clone();	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
411	[BUG]  [BUGGY]  this.extraFields.remove(entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.remove(entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.remove(entryName);	  this.extraFields.put(method,    entryName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
412	[BUG]  [BUGGY]  gpb.setInternalAttributes(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setInternalAttributes(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(extraFields,  externalAttributes);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
413	[BUG]  [BUGGY]  gpb.setExtraField(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraField(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraField(extraFields);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
414	[BUG]  [BUGGY]  super.setExternalMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setExternalMethod(method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setExternalMethod(method);	  super.setInternalMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
415	[BUG]  [BUGGY]  super.setInternalMethod(internalMethod);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalMethod(internalMethod);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalMethod(internalMethod);	  super.setInternalMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
416	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  externalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
417	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  internalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
418	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  16);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  16);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  16);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
419	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  sourceName);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
420	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  -  rawName.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  -  rawName.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  -  rawName.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
421	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields).clone();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields).clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields).clone();	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
422	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extra);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
423	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extent);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extent);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extent);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
424	[BUG]  [BUGGY]  gpb.setExternalAttributes(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExternalAttributes(this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExternalAttributes(this.internalAttributes);	  gpb.setMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
425	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(outerAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
426	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(outerAttributes,  internalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(outerAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
427	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  this.externalAttributes);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
428	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  externalAttributes);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
429	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(externalAttributes,  size);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
430	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(8);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(8);	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
431	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  ZipArchiveEntry>(extends);	  this.internalAttributes    =    new    LinkedHashMap    <    ZipArchiveEntry>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
432	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
433	[BUG]  [BUGGY]  super.setInternalAttributes(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(extraFields,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(extraFields,  internalAttributes);	  super.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
434	[BUG]  [BUGGY]  super.setInternalAttributes(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(extraFields,  externalAttributes);	  super.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
435	[BUG]  [BUGGY]  gpb.setExtraField(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraField(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraField(extra);	  gpb.setInternalAttributes(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
436	[BUG]  [BUGGY]  this.externalAttributes.put(extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(extra,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(extra,  method);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
437	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Var>(extraFields);	  this.extraFields    =    new    ArrayList    <    String,Var>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
438	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(7);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(7);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
439	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  ArrayList  <  String,Var>(extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  ArrayList  <  String,Var>(extra);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
440	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extra  +  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
441	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
442	[BUG]  [BUGGY]  gpb.setExtraField(this.internalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraField(this.internalAttributes,  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraField(this.internalAttributes,  internalAttributes);	  gpb.setExtraField(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
443	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length);	  this.extraFields    =    new    ArrayList    <    String,Integer>(extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
444	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(extra,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
445	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra  +  1);	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
446	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedList  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedList  <  String,Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedList  <  String,Integer>();	  this.externalAttributes    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
447	[BUG]  [BUGGY]  this.extraFields.put(key,  new  ZipArchiveEntry(method),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(key,  new  ZipArchiveEntry(method),  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  new  ZipArchiveEntry(method),  rawName);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
448	[BUG]  [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  method);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
449	[BUG]  [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(rawName,  new  ZipArchiveEntry(method),  sourceName);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
450	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  internalAttributes);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
451	[BUG]  [BUGGY]  this.extraFields.put(key,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(key,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(key,  rawName);	  this.extraFields.put(entryName,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
452	[BUG]  [BUGGY]  this.extraFields.put(name,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(name,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(name,  rawName);	  this.extraFields.put(entryName,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
453	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields).clone();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields).clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFields).clone();	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
454	[BUG]  [BUGGY]  super.setInternalAttributes(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(this.internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(this.internalAttributes);	  super.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
455	[BUG]  [BUGGY]  super.setMethod(this.method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.method,  this.extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.method,  this.extraFields);	  super.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
456	[BUG]  [BUGGY]  super.setExternalAttributes(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setExternalAttributes(internalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setExternalAttributes(internalAttributes);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
457	[BUG]  [BUGGY]  super.setInternalAttributes(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setInternalAttributes(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setInternalAttributes(externalAttributes);	  super.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
458	[BUG]  [BUGGY]  super.setMethod(this.internalAttributes,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(this.internalAttributes,  false);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(this.internalAttributes,  false);	  super.setMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
459	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra  +  1);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
460	[BUG]  [BUGGY]  this.extraFields.put(name,  new  ZipEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(name,  new  ZipEntry(method));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(name,  new  ZipEntry(method));	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
461	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extent);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extent);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extent);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
462	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Integer>(size);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  String,Integer>(size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  ArrayList  <  String,Integer>(size);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
463	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  method,  this.extraFields);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
464	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  this.extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  this.extra);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
465	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  this.extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  this.extraFields);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
466	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedList  <  String,Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedList  <  String,Integer>();	  this.extraFields    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
467	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Integer>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  String,Integer>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	This.extraFields  =  new  LinkedHashMap  <  String,Integer>();	  this.extraFields    =    new    ArrayList    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
468	[BUG]  [BUGGY]  gpb.setMethod(this.method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.method,  this.extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.method,  this.extraFields);	  gpb.setMethod(this.method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
469	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  sourceName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extraFields,  sourceName);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
470	[BUG]  [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  HashMap  <  String,Object>(extraFields);	  this.externalAttributes    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
471	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  externalAttributes);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
472	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extraFields);	  this.externalAttributes    =    new    LinkedHashMap    <    Long,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
473	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(extends);	  this.externalAttributes    =    new    LinkedHashMap    <    Long,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
474	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  rawName);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
475	[BUG]  [BUGGY]  this.extraAttributes  =  new  LinkedHashMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraAttributes  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraAttributes  =  new  LinkedHashMap  <  String,Object>();	  this.externalAttributes    =    new    ArrayList    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
476	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(externalAttributes,  rawName);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
477	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(externalAttributes);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
478	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(4);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
479	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outerFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outerFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,String>(outerFields);	  this.internalAttributes    =    new    LinkedHashMap    <    String,String>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
480	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length,  rawName,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
481	[BUG]  [BUGGY]  this.extraFields.put(externalAttributes,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(externalAttributes,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(externalAttributes,  extra);	  this.extraFields.put(entryName,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
482	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  +  3);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  +  3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  2  +  3);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    *    2);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
483	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(internalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(internalAttributes));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(internalAttributes));	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
484	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(externalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(externalAttributes));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(externalAttributes));	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
485	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipEntry(method),  extra);	  this.extraFields.put(entryName,    new    ZipEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
486	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  method,  this.externalAttributes);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
487	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes,  method,  this.extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes,  method,  this.extends);	  gpb.setMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
488	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(Arrays.asList(extraFields));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(Arrays.asList(extraFields));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(Arrays.asList(extraFields));	  this.extraFields    =    new    ArrayList    <    String,Annotation>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
489	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFile);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFile);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extraFile);	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
490	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Object>(extra));	  this.extraFields    =    new    LinkedHashMap    <    String,Object>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
491	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(externalAttributes);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
492	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extends);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
493	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  outerAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  outerAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Var>(extraFields,  outerAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Var>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
494	[BUG]  [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(size);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  HashMap  <  String,Object>(size);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  HashMap  <  String,Object>(size);	  this.externalAttributes    =    new    HashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
495	[BUG]  [BUGGY]  gpb.setInternalAttributes(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setInternalAttributes(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setInternalAttributes(externalAttributes);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
496	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(outerFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(outerFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(outerFields);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
497	[BUG]  [BUGGY]  super.setOptionalMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setOptionalMethod(method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setOptionalMethod(method);	  super.setInternalMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
498	[BUG]  [BUGGY]  this.externalAttributes.put(entryName,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(entryName,  method  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(entryName,  method  +  1);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
499	[BUG]  [BUGGY]  this.externalAttributes.put(name,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(name,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(name,  method);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
500	[BUG]  [BUGGY]  this.externalAttributes.put(entryName,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(entryName,  new  ZipArchiveEntry(method));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(entryName,  new  ZipArchiveEntry(method));	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
501	[BUG]  [BUGGY]  this.externalAttributes.put(entryName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes.put(entryName,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes.put(entryName,  extra);	  this.externalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
502	[BUG]  [BUGGY]  this.extraFields.put(entryName,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  entryName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  entryName);	  this.extraFields.put(method,    entryName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
503	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
504	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra)+  1;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra)+  1;	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
505	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(outerFields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(outerFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(outerFields);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(size);    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
506	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(entryName,  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(entryName,  extra);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
507	[BUG]  [BUGGY]  this.internalAttributes.put(name,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes.put(name,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes.put(name,  method);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
508	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields,  extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
509	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  method);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Annotation>(externalAttributes,  method);	  this.extraFields    =    new    LinkedHashMap    <    String,Annotation>(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
510	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap  <  String,String>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap  <  String,String>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  LinkedHashMap  <  String,String>());	  this.extraFields.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
511	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  this.extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  this.extraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
512	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  scope);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipArchiveEntry>(extra,  scope);	  this.extraFields    =    new    LinkedHashMap    <    ZipArchiveEntry>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
513	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields,  extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
514	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(externalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(externalAttributes));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(externalAttributes));	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
515	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(internalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(internalAttributes));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(internalAttributes));	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
516	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,String>(extra)+  1;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,String>(extra)+  1;	  this.extraFields    =    new    LinkedHashMap    <    String,String>(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
517	[BUG]  [BUGGY]  gpb.setExtraFields(extraFields,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setExtraFields(extraFields,  this);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setExtraFields(extraFields,  this);	  gpb.setExtraFields(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
518	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(4);	  this.externalAttributes    =    new    LinkedHashMap    <    Long,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
519	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(8);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  Long,Integer>(8);	  this.externalAttributes    =    new    LinkedHashMap    <    Long,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
520	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  name);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  name);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  name);	  this.extraFields.put(entryName,    new    ZipArchiveEntry(method),    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
521	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  this.extends);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
522	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.extents);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.extents);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  this.extents);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
523	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.maximumSize);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.internalAttributes,  this.maximumSize);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.internalAttributes,  this.maximumSize);	  super.setMethod(method,    this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
524	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[method],  this.extra);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
525	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  gpb.setMethod(this.internalAttributes[method],  this.extends);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	gpb.setMethod(this.internalAttributes[method],  this.extends);	  gpb.setMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
526	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Object>(extends,  unparseableExtra);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Object>(extends);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
527	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  2,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  2,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  /  2,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
528	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  4,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  4,  extra.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.extraFields  =  new  LinkedHashMap  <  String,Integer>(extra.length  *  4,  extra.length);	  this.extraFields    =    new    LinkedHashMap    <    String,Integer>(extra.length    +    1,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
529	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(8);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Integer>(8);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Integer>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
530	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  1,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  1,  extraFields.length);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  String,Integer>(extraFields.length  +  1,  extraFields.length);	  this.externalAttributes    =    new    LinkedHashMap    <    String,Integer>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
531	[BUG]  [BUGGY]  this.internalAttributes  =  new  HashMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  this.internalAttributes  =  new  HashMap  <  String,Object>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	this.internalAttributes  =  new  HashMap  <  String,Object>();	  this.internalAttributes    =    internalAttributes;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
532	[BUG]  [BUGGY]  super.setMethod(method,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  new  LinkedHashMap());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  new  LinkedHashMap());	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
533	[BUG]  [BUGGY]  super.setMethod(method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;      [BUGGY]  super.setMethod(method,  this.extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	super.setMethod(method,  this.extra);	  super.setMethod(method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
