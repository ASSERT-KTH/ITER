projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,unparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.length!=0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null||extraFields.length==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}else{extraFields.put(fields[i].getHeaderId(),extraFields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){unparseableExtra();}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.size()==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.length==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getDataId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(i);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipExtraField>());
