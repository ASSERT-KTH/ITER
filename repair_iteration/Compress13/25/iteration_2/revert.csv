projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,unparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.length!=0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null||extraFields.length==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}else{extraFields.put(fields[i].getHeaderId(),extraFields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){unparseableExtra();}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.size()==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.length==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getDataId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(i);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields,field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(fields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size()-2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size(),fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,null,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,null,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externalAttributes,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(externalAttributes,unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)super.extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)this.extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newTreeMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newTreeMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(fields),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externalAttributes,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>(fields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(this.unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,UniqueExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Collection<ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300List<ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=Sets.newHashSet(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300finalSet<ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtras(newLinkedHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newArrayList<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,unparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,UnparseableExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getBaseName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getReasonId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),fields[0]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newTreeSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Collection<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newArrayList<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=extraFields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,length=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,length=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externalAttributes,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,unparseableExtra,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newTreeMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.get(i);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(i+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(i-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)super.extraFields.get(i);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(unparseableExtra,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,unparseableExtra,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externalAttributes,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(unparseableExtra,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externalAttributes,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externals,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null||extraFields.size()==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.size()!=0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.size()>0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.size()==1){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.size()>=0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300fields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ters.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300nes.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300fields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ters.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300nes.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300fields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].getHeaderId(),fields[i]
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtras(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newArrayList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldData[]extraFields=unparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataextraFields=unparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseibleExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getRawId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getName());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getUnderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getRealId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),source);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipShort,ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,createLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipShort,ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipShort,ZipExtraField>(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipShort,ZipExtraField>(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort,ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.length>=0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null||extraFields.length<2){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=extraFields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300intsize=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i]
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i]
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=extraFields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i]
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i];}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(values!=null){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>settings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>settings=newHashSet<ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Collection<ZipShort>settings=newArrayList<ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>settings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,ZipExtraField>(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort,UnparseableExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedList<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Collection<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=setExtraFields(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFields(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,null,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,null,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,newLinkedHashMap<ZipShort,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,zipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,unparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,unparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipExtraField,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipExtraField,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField,UnparseibleExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipExtraField,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,ZipExtraField>(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRealName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>(extraFields.size()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashSet<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>(extraFields.size()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newTreeSet<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>(extraFields.size()-2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newArrayList<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300while(fields[i]instanceofZipExtraFieldData){extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300while(fields[i]!=null){extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300while(fields[i]!=null){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300while(fields[i]instanceofZipExtraFieldData){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataextraFields=(UnparseableExtraFieldData)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=externalAttributes.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=externalAttributes.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>().toArray(extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>(),extraFields.clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>().values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(this.unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){unparseableExtra();}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){unparseableExtra();}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getBaseName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getRealId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(this.unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)un
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=unparseableExtra.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)un
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(this.unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(unparseableExtra),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null||extraFields.length!=0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300intsize=fields.length;i<size;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderId();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtra.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataextraFields=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields,newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externalAttributes,newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newLinkedHashMap<ZipShort,ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(files,newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>extraFields=newHashSet<ZipShort>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>extraFields=newHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra==null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(this.unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(unparseableExtra,externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),unparseableExtraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawType(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRealId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){setExtraFields(extraFields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraField){if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraField){if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newTreeMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300newLinkedHashMap<ZipShort,ZipExtraField>());extraFields.put(fields[i].getHeaderId(),
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),fields[0]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraField){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra!=null){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>settings=newHashSet<ZipExtraField>(fields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(unparseableExtra,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,unparseableExtra,rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300This.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newArrayList<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){setExtraFields(extraFields);}else{extraFields.put(fields[i].getHeaderId(),extraFields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ters.put(fields[i].getHeaderId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newZipExtraField[fields.length];System.arraycopy(extraFields,0,extraFields,0,extraFields.length);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){setExtraFields(extraFields);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getDataId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,UnparseableExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,UnparseableExtraField>(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,UnparseableExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(unparseableExtra,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,false,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),unparseableExtraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(fields[i],unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra,fields[i]),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getId(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashSet<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(extraFields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(extraFields.length-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(extraFields.length,fields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newTreeSet<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra!=null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(UnparseableExtraFieldData.class,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(UnparseableExtraFieldData.class,unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(UnparseableExtraFieldData.class),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300while(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getRawId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getBase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,UnparseableExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,UnparseableExtraField>(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,UnparseableExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newHashMap<ZipShort,UnparseableExtraField>(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newTreeSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashSet<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(unparseableExtra,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraField){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>settings=newHashSet<ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>settings=newHashSet<ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createTreeMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields<ZipExtraField>(),newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipExtraField>extraFields=Sets.newHashMap();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=Sets.newHashMap();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=Sets.newLinkedHashMap();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i].getExtra()!=null){if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]instanceofZipExtraFieldData){if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}else{extraFields.put(fields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300List<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newConcurrentHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),extract);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)externalAttributes.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300geoFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,newLinkedHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(externalAttributes==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300while(extraFields!=null){extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300while(extraFields!=null){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getSourceName());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),values);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),array);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){setExtraFields(extraFields);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipExtraField,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(fields,unparseableExtra,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getStringId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawClass(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newLinkedHashMap<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawClass(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashMap<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Collection<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){setExtraFields(extraFields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtraFields(fields);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtraFields(fields);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtraFields(fields);}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ExternalAttributes<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(externalAttributes==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ExternalAttributes<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=extraFields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getUnderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getDataId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtra=extraFields.get(fields[i].getSourceName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraName(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceId(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newZipExtraField(extraFields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(fields,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=extraFields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=newZipExtraFieldData(extraFields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipShort,unparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getSourceName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getBase(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtra{unparseableExtra();}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300((ZipExtraFieldData)extraFields).put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.get(fields.length));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Collection<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(externalAttributes,createLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,Arrays.asList(extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ExternalAttributes<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ExternalAttributes<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>settings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>settings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>settings=newHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>settings=newHashSet<ZipShort>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ExternalAttributes<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=newZipExtraFieldData(extraFields[i].get
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<extraFields.length;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newArrayList<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),unparseableExtraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>settings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){Settingssettings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>settings=newHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>settings=newHashSet<ZipShort>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i]!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(Arrays.asList(extraFields)));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),data);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(createLinkedHashMap<ZipExtraField,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<size;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getString(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtra(fields);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtra(fields);}else{unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtra(fields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtra(fields);}else{extraFields.put(fields[i].getHeaderId(),newZipExtraField(fields[i]));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtra(fields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){setExtra(fields);}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();for(inti=0;i<fields.length;i++){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField[]{fields});
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes,newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(outerAttributes,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(externalAttributes,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i].getExtra()!=null){if(unparseableExtra!=null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=getUnparseableExtra(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields!=null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(outerFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){extraFields=newLinkedHashMap<ZipExtraField>();extraFields.put(fields[i].getHeaderId(),extraFields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),unparseableExtra;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300uneparseableExtra=extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraTratra=extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparsedExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(unparseableExtra),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(unparseableExtra),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraAttributes(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.putAll(fields[i].getExternalAttributes(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300List<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(Arrays.asList(extraFields)));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(unparseableExtraData));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),newZipExtraField(this.extra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(createLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),(UnparseableExtraFieldData)fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Arrays.asList(extraFields)){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields.put(fields[i].getHeaderId(),
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Arrays.asList(extraFields)){extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].getHea
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),extraFields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(extraFields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(externalAttributes==null){unparseableExtra();}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra==null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),extraFields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=setExtraFields(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSize(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null&&extraFields.length==0){setExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),fields[i+1]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExternalAttributes(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataextra=unparseableExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra!=null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i].getExtra()!=null){if(unparseableExtra==null){unparseableExtra();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i].getExtra()!=null){if(unparseableExtra==null){unparseableExtra();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);return;}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataextraFields=extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(Arrays.asList(extraFields)));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtraId(),newZipExtraField(UnparseableExtraFieldData.type));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newTreeMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300SetExtraFieldsextraFields=newHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>settings=newHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=extraFields.get(fields[i].getHeaderId(),values[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newTreeMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newTreeMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(internalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),newZipExtraField(UnparseableExtraFieldData.type));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getName(),extraFields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,newZipExtraField(fields,unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,unparseableExtra.clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,unparseableExtra.clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newHashMap<ZipShort,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getFullName(),newZipExtraField(UnparseableExtraFieldData.type));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getShortName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()}class,interface,orenum
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra,fields[i]),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(UnparseableExtraFieldData,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getDataId(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra,fields[i],unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipExtraField,UnparseableExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,UnparseableExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(fields[i].getExtra()==null){if(unparseableExtra){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(unparseableExtra){extraFields.put(fields[i].getName(),fields[i]);}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtraFieldDataunparseableExtra=extraFields.get(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300UnparseableExtrafield=extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),additionalFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newTreeMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newTreeMap<ZipExtraField>(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields).clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getExtra(),extraFields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(newLinkedHashMap<ZipShort,UnparseExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtraFields(extraFields,newLinkedHashMap<ZipShort,UniqueExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=extraFields.clone();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=newHashMap<ZipShort,ZipExtraField>(fields.length);extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300ExternalAttributes<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300unparseableExtraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(extraFields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>settings=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300LinkedHashMap<ZipShort,ZipExtraField>extraFields=extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipShort>settings=newHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawId(),newZipExtraField(UnparseableExtraFieldData.type));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getRawValue(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getSourceName(),extraFields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i].
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=extraFields.keySet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300Set<ZipExtraField>extraFields=extraFields.iterator().next();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(extraFields,false,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtras(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300setExtra(newLinkedHashMap<ZipExtraField>()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300this.extraFields.put(fields[i].getShortId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<extraFields.length;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields[i
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300for(inti=0,size=fields.length;i<extraFields.length;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=(ZipExtraFieldData)extraFields
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java300if(extraFields[i]instanceofZipExtraFieldData){for(inti=0,size=fields.length;i<size;i++){if(extraFields[i]instanceofZipExtraFieldData){extraFields[i]=
