projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable&&unparseableExtra!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable||unparseableExtra!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable||unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable&&unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable&&result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[result.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[result.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra&&includeUnparseable==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra==null||includeUnparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable||result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable&&result==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable||result==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra&&result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(this.includeUnparseable||unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra||unparseableExtra!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(extraField);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(includeUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(includeUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[extraFields.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.addAll(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra||unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[extraFields.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[unparseableExtra.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Result.toArray(newZipExtraField[extraFields.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(newZipExtraField[extraFields.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[outputFields.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(result.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.size()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.size()-2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.size()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(unparseableExtra.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(result);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra==null||result==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra||result==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra!=null||result==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.size()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.size()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.size()-2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.values(),unparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.values(),internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328List<ZipExtraField>result=newArrayList<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328ArrayList<ZipExtraField>result=newArrayList<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(includeUnparseable,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(includeUnparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(includeUnparseable);}else{returnnewArrayList<ZipExtraField>(extraFields.values());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(includeUnparseable);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(includeUnparseable);}else{returnnewArrayList<ZipExtraField>(extraFields.size());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)extraFields.get(result);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)result.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)this.extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)super.extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328finalLinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)extraFields.toArray(result);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.values(),unparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedHashMap<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedHashMap<ZipExtraField>(extraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=unparseableExtra.get(includeUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(includeUnparseable,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(includeUnparseable,result);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=getExtraFields().get(includeUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(rawName,includeUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra!=null||result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra==null||result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra||result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.length+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra==null||this.includeUnparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra!=null||this.includeUnparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra||this.includeUnparseable==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra==null||unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra==null||unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra!=null||unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra||includeUnparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(extraField,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(unparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.addAll(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.addAll(extraFields.toArray(newZipExtraField[extraFields.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.addAll(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.addAll(extraFields.toArray(result));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.addAll(extraFields.toArray(newZipExtraField[result.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328finalLinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328List<ZipExtraField>unparseableExtra=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(unparseableExtra);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(unparseableExtra);}else{returnnewArrayList<ZipExtraField>(extraFields.values());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(unparseableExtra);}else{returnnewArrayList<ZipExtraField>(extraFields.size());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(unparseableExtra);}else{returnnewArrayList<ZipExtraField>(extraFields.length);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra||result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(result.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.values(),result);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(result,extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra||unparseableExtra!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[extraFields.size()+1]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Result.toArray(newZipExtraField[extraFields.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(newZipExtraField[extraFields.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[extraFields.size()-1]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[unparseableExtra.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[extraFields.size()*2]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra&&unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra&&unparseableExtra!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(newZipExtraField[result.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra||result==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedList<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.toArray(newZipExtraField[extraFields.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.values()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedList<ZipExtraField>(extraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result=newArrayList<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(unparseableExtraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(this.includeUnparseable&&unparseableExtra==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[externalAttributes.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(unparseableExtra);}else{returnnewArrayList<ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(unparseableExtra);}else{result=newArrayList<ZipExtraField>(extraFields.values());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(unparseableExtra);}else{result=newArrayList<ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(extraFields!=null){result.toArray(newZipExtraField[extraFields.size()]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(extraFields!=null){result.toArray(newZipExtraField[extraFields.size()]);}else{returnnewArrayList<ZipExtraField>(extraFields.values());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(newZipExtraField[result.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){result.add(includeUnparseable);}else{returnnewArrayList<ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedList<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(unparseableExtraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra&&result!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.get(includeUnparseable));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.values(),externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra&&result==null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328ArrayList<ZipExtraField>unparseableExtra=newArrayList<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.get(result));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(includeUnparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(includeUnparseable,rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(unparseUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(includeUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>extraFields=(LinkedHashMap<ZipExtraField>)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedList<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(unparseableExtraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(unparseableExtra!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.values(),internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.values(),externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328ArrayList<ZipExtraField>unparseableExtra=newArrayList<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.addAll(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result=newLinkedHashMap<ZipExtraField>(extraFields.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[externalAttributes.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.toArray(newZipExtraField[extraFields.size()+1]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(this.includeUnparseable||unparseableExtra!=null){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result=newLinkedHashMap<ZipExtraField>(extraFields.keySet());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(extraFields.toArray(newZipExtraField[extraFields.size()]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(externalAttributes[extraFields.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=(LinkedHashMap<ZipExtraField>)extraFields.get(includeUnparseable);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable||unparseableExtra==null){result.add(unparseableExtra);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseable||unparseableExtra==null){result.add(unparseableExtra);}else{returnnewArrayList<ZipExtraField>(extraFields.values());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(includeUnparseable,sourceName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328byte[]extra=extraFields.get(includeUnparseable+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(extraFields!=null){result.addAll(extraFields);}else{returnnewArrayList<ZipExtraField>(extraFields.values());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(extraFields!=null){result.addAll(extraFields);}else{returnnewLinkedHashMap<ZipExtraField>(extraFields.values());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(extraFields!=null){result.addAll(extraFields);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(extraFields!=null){result.addAll(extraFields);}else{returnnewArrayList<ZipExtraField>();}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328if(includeUnparseableExtra){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(newZipExtraField[externalAttributes.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newArrayList<ZipExtraField>(extraFields.values()).toArray(result);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.values()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.get(0));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>result=newLinkedHashMap<ZipExtraField>(extraFields.values()).clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328Resultresult=newLinkedHashMap<ZipExtraField>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328result.add(extraFieldData);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.get(0));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields.values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java328LinkedHashMap<ZipExtraField>unparseableExtra=newLinkedHashMap<ZipExtraField>(extraFields.values()+1);
