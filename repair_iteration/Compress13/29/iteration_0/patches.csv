bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (includeUnparseable  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  [BUGGY]  if  (includeUnparseable  ||  unparseableExtra!=  null)  {  [BUGGY]  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseable  ||  unparseableExtra!=  null)  {	if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
2	[BUG]  [BUGGY]  if  (includeUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  [BUGGY]  if  (includeUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseable  ||  unparseableExtra  ==  null)  {	if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
3	[BUG]  [BUGGY]  if  (includeUnparseable  &&  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  [BUGGY]  if  (includeUnparseable  &&  unparseableExtra  ==  null)  {  [BUGGY]  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseable  &&  unparseableExtra  ==  null)  {	if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
4	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError  [CONTEXT]  public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  [BUGGY]    [BUGGY]  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	  	if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
5	[BUG]  [BUGGY]  if  (includeUnparseable  &&  result!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  [BUGGY]  if  (includeUnparseable  &&  result!=  null)  {  [BUGGY]  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseable  &&  result!=  null)  {	if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
