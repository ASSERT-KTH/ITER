bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result.add(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  result.add(unparseableExtra);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	result.add(unparseableExtra);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
2	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	result.toArray(new  ZipExtraField[result.size()  ]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
3	[BUG]  [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
4	[BUG]  [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
5	[BUG]  [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
6	[BUG]  [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	Result  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
7	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ]));  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	result.toArray(new  ZipExtraField[result.size()  ]));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
8	[BUG]  [BUGGY]  if  (unparseableExtra  &&  includeUnparseable  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (unparseableExtra  &&  includeUnparseable  ==  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (unparseableExtra  &&  includeUnparseable  ==  null)  {	  if    (includeUnparseable    &&    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
9	[BUG]  [BUGGY]  if  (unparseableExtra  ==  null  ||  includeUnparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (unparseableExtra  ==  null  ||  includeUnparseableExtra  ==  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (unparseableExtra  ==  null  ||  includeUnparseableExtra  ==  null)  {	  if    (includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
10	[BUG]  [BUGGY]  if  (includeUnparseable  ||  result!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (includeUnparseable  ||  result!=  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseable  ||  result!=  null)  {	  if    (includeUnparseable    &&    result!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
11	[BUG]  [BUGGY]  if  (includeUnparseable  &&  result  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (includeUnparseable  &&  result  ==  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseable  &&  result  ==  null)  {	  if    (includeUnparseable    &&    result!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
12	[BUG]  [BUGGY]  if  (includeUnparseable  ||  result  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (includeUnparseable  ||  result  ==  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseable  ||  result  ==  null)  {	  if    (includeUnparseable    &&    result!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
13	[BUG]  [BUGGY]  if  (unparseableExtra  &&  result!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (unparseableExtra  &&  result!=  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (unparseableExtra  &&  result!=  null)  {	  if    (includeUnparseable    &&    result!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
14	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
15	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
16	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =(LinkedHashMap  <  ZipExtraField>)extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =(LinkedHashMap  <  ZipExtraField>)extraFields.clone();  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	LinkedHashMap  <  ZipExtraField>  unparseableExtra  =(LinkedHashMap  <  ZipExtraField>)extraFields.clone();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
17	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
18	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	LinkedHashMap  <  ZipExtraField>  unparseableExtra  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
19	[BUG]  [BUGGY]  if  (this.includeUnparseable  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (this.includeUnparseable  ||  unparseableExtra  ==  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (this.includeUnparseable  ||  unparseableExtra  ==  null)  {	  if    (includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
20	[BUG]  [BUGGY]  if  (includeUnparseableExtra  ||  unparseableExtra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (includeUnparseableExtra  ||  unparseableExtra!=  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseableExtra  ||  unparseableExtra!=  null)  {	  if    (includeUnparseable    ||    unparseableExtra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
21	[BUG]  [BUGGY]  result.add(extraField);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  result.add(extraField);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	result.add(extraField);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
22	[BUG]  [BUGGY]  result.add(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  result.add(includeUnparseable);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	result.add(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
23	[BUG]  [BUGGY]  byte[]  extra  =  extraFields.get(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  byte[]  extra  =  extraFields.get(includeUnparseable);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	byte[]  extra  =  extraFields.get(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
24	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	result.toArray(new  ZipExtraField[extraFields.size()  ]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
25	[BUG]  [BUGGY]  result.addAll(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  result.addAll(extraFields);  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	result.addAll(extraFields);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
26	[BUG]  [BUGGY]  if  (includeUnparseableExtra  ||  unparseableExtra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());    [BUGGY]  if  (includeUnparseableExtra  ||  unparseableExtra  ==  null)  {  [BUGGY]    result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	if  (includeUnparseableExtra  ||  unparseableExtra  ==  null)  {	  if    (includeUnparseable    ||    unparseableExtra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
