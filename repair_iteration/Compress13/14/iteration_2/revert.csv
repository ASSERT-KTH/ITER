projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes()),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toCharArray();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=rawName;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toUpperCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(16);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(".UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toLowerCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Integer>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(".UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Collections.emptyList();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addAttributes(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,E>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")||name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(")UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newLinkedHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(outerAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(name.toLowerCase());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase(),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(name.toLowerCase());}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(")UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-16"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length()-1,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{ZipArchiveEntryentry=newZipArchiveEntry(name.substring(0,name.length()-1));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toUpperCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+'/'));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(1,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtra(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")+name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toCharArray()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8"),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase()+1,name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase(),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.trim()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(ExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(this.extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim().toLowerCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(16);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(name,internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(name+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase()),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+1),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toString()),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase()),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(0)));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(rawName,0,rawName,0,name.length()-1,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(rawName,0,name.length()-1,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet(name.substring(0,name.length()-1));setName(rawNames,newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toUpperCase(Locale.ENGLISH);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toUpperCase(Locale.getDefault());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=rawName.toUpperCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toUpperCase(Locale.US);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toUpperCase()+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newString[]{name});
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(rawName,name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();this.rawName=rawName.toLowerCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String,Object>(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String,Object>(this.internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String,Object>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase(),name.toUpperCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toUpperCase()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toUpperCase()),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toUpperCase()),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toUpperCase()),name.toCharArray());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String,Object>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newArrayList<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newArrayList<String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),null,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),newLinkedHashMap());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),null,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),null,0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newArrayList<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,String>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,String>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("US-ASCII")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-8")),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes(".UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newLinkedHashMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newLinkedHashMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name.getBytes(".UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name.getBytes());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(1),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(3));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(8));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.trim()).toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.trim()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.trim()+")");
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(1)));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.trim(),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extraFields,name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extraFields.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(outputFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,Integer>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,String>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,String>(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,String>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(10);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setFunctionName(newString(name),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),false,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),false,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(outputFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(outerAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toLowerCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toString(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(name.toLowerCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.substring(0,name.length()-2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.substring(0,name.length()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setValue(newString(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.substring(1,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98validateValue(newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()),name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addAttributes(newArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addAttributes(newLinkedHashMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addAttributes(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addAttributes(newLinkedHashMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=rawName.toLowerCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase()+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.getDefault());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newArrayList());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Integer>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(unparseableExtraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,UnparseableExtraFieldData>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,E>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setBytes(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes(".UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPaint(newString(name.getBytes("UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98LinkedHashMap<String,Object>extraFields=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newTreeMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newTreeMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(32);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newHashMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newHashMap<String,Object>(),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase(),1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase()),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+1),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()),this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8",name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8_"),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(externals);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(1,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(0,name.length()1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedList<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,E>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newArrayList<String,E>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newHashMap<String,E>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,E>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,E>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getValue()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String,Integer>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Integer>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Integer>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,Object>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newArrayList<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,Object>(Arrays.asList(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,Object>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newjava.util.ArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toCharArray()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toCharArray(),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toString()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toCharArray()),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toCharArray()),name.toCharArray());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.length()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.length()+2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.length()-2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.charAt(0)));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes(),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=rawName.trim();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length()-2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim()+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newHashMap<String,Object>(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newConcurrentHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes()+1),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes()),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98unparseableExtra(newString(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtra(newString(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase()),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+1),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98validateValue(newString(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name),this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name),0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(1),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(0));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(3));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String,String>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newArrayList<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newTreeMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98StringrawName=name.substring(0,name.length()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Preconditions.checkState(name.length()==0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Collections.EMPTY_LIST;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Lists.newArrayList();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Collections.emptyMap();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Collections.EMPTY_ARRAY;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(rawName,0,rawName,0,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()+1),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-2),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-2,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-4,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1,name.length()),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newTreeMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newTreeMap<String,Object>(),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>(1),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>(3));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>(8));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(this.internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(newLinkedHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")&&name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("US-ASCII")||name.getBytes("US-ASCII")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")||name.getBytes()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(extends,name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(extends,internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,Object>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(extends,size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(ExtraFieldData.class,name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(ExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(ExtraFieldData.class,internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(ExtraFieldData.class)+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(UnparseableExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes(".UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-8"),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-8")+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Integer>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,E>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extends,name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extends+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setFunctionName(name.toLowerCase(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toLowerCase(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toString(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")+name.getBytes()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")+name.getBytes("UTF-8")),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")+name.getString()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,Object>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,Object>(8));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8"),name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(".UTF-8")),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")),this.rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.getBytes()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setBytes(newString(name.getBytes()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.getSize()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newString(name.substring(0,name.lastIndexOf('.'),name.lastIndexOf('.'));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newbyte[name.length()];System.arraycopy(rawName,0,rawName,0,name.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newString(name.substring(0,name.lastIndexOf('.')+1,name.lastIndexOf('.')+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newbyte[name.length()];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newbyte[name.length()];System.arraycopy(rawName,0,rawName,0,name.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes(".UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8")||name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8")),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this,name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newTreeMap<String,Object>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newTreeMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newTreeMap<String,Object>()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase(),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase(),name.toUpperCase()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toLowerCase(),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase(),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(name.toLowerCase(),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(2),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()+2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newjava.util.ArrayList<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(outerAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,Object>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(Arrays.asList(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newArrayList<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedList<String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String>(ExternalAttributes.size());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(this.extraFields,name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(this.extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(this.internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(this.extraFields+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(this.externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(this.internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("Zip"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("US-ASCII"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("[.UTF-8]"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("ZipArchiveEntry.UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase()+'/'));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+'/',name.toLowerCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()/'/'));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),'/'));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+'/'),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,Var>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>(false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>(16);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedList<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(1),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(3));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(8));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(32);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(256);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(2,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(1,name.length()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),0,name.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),0L);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),0,name.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=rawName.toCharArray();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toCharArray()+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>setName(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Preconditions.checkState(name!=null);setName(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.substring(0,name.length()-2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.substring(0,name.length()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.substring(1,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPaint(newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toString(),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase(),name.toLowerCase()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toLowerCase(),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes()),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.toLowerCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this.rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),gpb);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name,newString(name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this.sourceName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase()+1,name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toUpperCase()+1,name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase()+1,name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toString()+1,name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toLowerCase()+1,name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98unparseableExtra(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtra(newArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes(".UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8")+name.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8")+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-16")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-16_"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-16"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes("UTF-16"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newTreeMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newHashSet<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98List<String>extraFields=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newHashSet<String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98ArrayList<String>extraFields=newArrayList<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.US);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH)+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH,0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH,1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=rawName.toLowerCase(Locale.ENGLISH);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim().toLowerCase(Locale.ENGLISH);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim().toLowerCase()+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim().toUpperCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim().toLowerCase(Locale.getDefault());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim().toLowerCase(Locale.US);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=rawName.trim().toLowerCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(outerFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(outerAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newArrayList<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newTreeMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(this.internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(this.externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toLowerCase()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toLowerCase()),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toString(),name.toLowerCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase(),name.toLowerCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("Zip")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("[.UTF-8]")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("[.UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(externalAttributes),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newLinkedHashMap<String,String>(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(externalAttributes,name));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String,String>(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(size));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newLinkedHashMap<String,Integer>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newLinkedHashMap<String,Array>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newArrayList<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(name.toLowerCase()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setBytes(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes(".UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes("UTF-8")),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPaint(newString(name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(0,name.length()-2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(0,name.length()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(1,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(0,name.length()+2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(1,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(2),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(8));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()));}else{ZipArchiveEntryentry=newZipArchiveEntry(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1));}else{ZipArchiveEntryentry=newZipArchiveEntry(name.substring(0,name.length()-1));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1));}else{ZipArchiveEntryentry=newZipArchiveEntry(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>setName(newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>setName(newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(2),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Object>(5));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length())+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newlong[]{name});
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLong(externalAttributes.length));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(externalAttributes.length);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLong(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLong(externalAttributes.size()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(5));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setString(newString(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length()-3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(1)));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>(externs);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("/.UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newName(name.toLowerCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(name.toUpperCase());}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(rawName,0,rawName,0,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addValue(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length()-1,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(rawName,0,rawName,0,name.length()-1,name.length()-1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98System.arraycopy(name,0,rawName,0,name.length()-1,name.length()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length()-1,name.length()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraField(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98LinkedHashMapextraFields=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),false));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()-1),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newStringMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.getBytes(),name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(ExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(newLinkedHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String,Object>extraFields=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),gpb);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extenderAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExternalAttributes(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setSize(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extenderFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extentAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(outerFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.toCharArray()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=name.substring(0,name.length()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setPath(newString(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(name.toLowerCase(),name.toUpperCase());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(".UTF-16"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(")UTF-16"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH).toLowerCase(Locale.US);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newLinkedHashMap<String,E>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newTreeMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExternalAttributes(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addExtraFields(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.toLowerCase(),name.toLowerCase()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toLowerCase()),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes(")UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes("UTF-8")||name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extraFields).toArray(newString[extraFields.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String,String>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newLinkedHashMap<String,Object>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(this.extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(this.extraFields+name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes())));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(newArrayList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setString(newString(name.getBytes(")UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Long>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newlong[ArrayList<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes()/1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name,false));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(name.toLowerCase(),name.toLowerCase());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Lists.newLinkedHashMap();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Collections.unmodifiableList();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name.getBytes(")UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name.getBytes("UTF-16"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name==null?null:name.toCharArray();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name!=null?null:name.toCharArray();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newlong[ArrayList<String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setValue(newString(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setValue(newString(name.substring(0,name.length()));}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>extraFields=newLinkedHashMap<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newString[name.length()];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=NameUtils.getRawName(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=NameUtil.getRawName(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=NameUtil.getSourceName(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newbyte[size()];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extends).toArray(newString[extends.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extends)+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes(")UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()-1));}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(ExtraFieldData.class,externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(newLinkedHashMap<String,E>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraAttributes(newLinkedHashMap());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")+name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toUpperCase()),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.toLowerCase(),name.toUpperCase()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name.toUpperCase()),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("/.UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("[.UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=setName(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,Object>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,Object>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(5));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()));}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()));}else{System.arraycopy(name,0,rawName,0,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()1));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedList<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.trim()),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=newHashSet<String>(name.length());setName(newString(rawNames.substring(0,rawName.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name==null?null:name.toLowerCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name!=null?null:name.toLowerCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-8")||name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes(")UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")||name.getBytes("UTF-8")),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase()+1,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()-1),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(extends));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExternalAttributes(newLinkedHashMap<String,String>(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,String>(externalAttributes),internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addValue(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addValues(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes(")UTF-8"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-16"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8"),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedList<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this,0);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length()).trim();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+'/',name.toUpperCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newTreeMap<Object,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name==null?null:name.toUpperCase();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this.externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(extends+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),null,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name!=null){setName(newString(name.substring(0,name.length()));}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")||name.getBytes(".UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(".UTF-8")||name.getBytes(".UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")||name.getBytes("UTF-16")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(extenderFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>(extends);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Var>(extenderFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toCharArray()+")");
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length())));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(null,internalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFields(newLinkedHashMap<String,Object>(5));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")+name.getBytes(".UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")+name.getBytes("UTF-16")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()));}else{System.arraycopy(name,0,rawName,0,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name.getBytes("UTF-8"),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()));}else{ZipArchiveEntryentry=newZipArchiveEntry(name.substring(1,name.length()));}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase()+1,name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toLowerCase(Locale.ENGLISH).trim();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>(16);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externAttributes=newLinkedHashMap<String,Object>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,ZipArchiveEntry>(Arrays.asList(extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(name.toLowerCase(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase()+1,false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newlong[ArrayList<String,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(1,name.length()),name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes("UTF-8")+name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(newString(name.substring(2,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toCharArray(),name.toCharArray()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,Object>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(".UTF-8"),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setCircularAttributes(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtra(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newLinkedHashMap<String,Long>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(externalAttributes+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>(Arrays.asList(extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>(ExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externs=newLinkedHashMap<String,Object>(Arrays.asList(this.extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newTreeMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Object>(6));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase());}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.length()),name.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(),name.trim()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.getBytes("UTF-8")+name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,String>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newHashMap<String,String>(8));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newHashMap<String,Object>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(this.extraFields)+1;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtra(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldData(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(outerFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,Object>(ExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addAttributes(newLinkedHashMap<String,Object>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("ISO-8859-1"));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newString(name.substring(0,name.length()-1,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newbyte[strategy.getRawClass().getName());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newString(name.substring(0,name.length()-3),name.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")),name.getBytes("UTF-8")));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.substring(2,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.substring(1,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newArrayList<String,String>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Collections.unmodifiableList(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=Collections.binarySearch(this.extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name.trim()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),newLinkedHashMap());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),this.externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(newString(name),this.extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98This.externalAttributes=newLinkedHashMap<String,Object>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase(),name.toUpperCase()+1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes()).toString());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()-1));}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()));}else{thrownewIllegalArgumentException("");}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(newString(name.substring(0,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extendFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(newHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newHashMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes("UTF-8")),this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toExternalForm();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.toString();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.toLowerCase()+1,name.toLowerCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newHashSet<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()).trim());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(name.substring(0,name.length()2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExternalAttributes(newTreeMap<String,Object>(2));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet(name);setName(newString(rawNames.substring(0,rawName.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toUpperCase(),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.toLowerCase(),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(ExtraFieldData.class,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String,Object>(size);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newTreeMap<String,Object>(ExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(2,name.length()-1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=newString(name.substring(0,name.length()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.trim()),name);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setImpl(newString(name),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setRaw(newString(name.getBytes());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(name.toLowerCase(),name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExterns(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(name.toLowerCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(name.toLowerCase(),false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98Set<String>rawNames=Sets.newHashSet();setName(rawName.toLowerCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setPath(name.toLowerCase(),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newArrayList<String>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.substring(0,name.lastIndexOf('.'));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.rawName=name.trim().replace('','/');
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extraFields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.externalAttributes=newLinkedHashMap<String,String>(extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.trim()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.toUpperCase()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setValue(newString(name.toString()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(Arrays.asList(extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,String>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldName(name.toUpperCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtra(newTreeMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes(0));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.getBytes());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldSize(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldAttributes(newLinkedHashMap());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()),name.length());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setExtraFieldData(newLinkedHashMap<String,Object>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name)&&false);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()-1));}else{System.arraycopy(name,0,rawName,0,name.length()-1,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98if(name.length()==0){setName(newString(name.substring(0,name.length()));}else{System.arraycopy(name,0,rawName,0,name.length()-1,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name.substring(0,name.length()));}else{System.arraycopy(name,0,rawName,0,name.length()-1,name.length());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setAttributes(newLinkedHashMap<String,Integer>(4));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),name.toLowerCase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),this.extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98setName(newString(name),name.toCharArray());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(ExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98this.extraFields=newLinkedHashMap<String,ZipArchiveEntry>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.addExtraFields(newLinkedHashMap<String,String>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java98gpb.setExtraFields(newTreeMap<String,String>());
