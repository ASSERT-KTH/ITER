bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  method)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
2	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  extraFields.length)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
3	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.length  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.length  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.length  >  method)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
4	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraAttributes  <  0  ||  method  >  extraFields.length)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
5	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  methods.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  methods.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  methods.length)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
6	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  extraFields.length  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  extraFields.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields  ==  null  ||  extraFields.length  >  0)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
7	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  <  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  externalAttributes  <  0  ||  method  >  extraFields.length)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
8	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  internalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  internalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  internalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
9	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
10	[BUG]  [BUGGY]  if(internalAttributes  <  0  ||  super.setMethod(method)||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(internalAttributes  <  0  ||  super.setMethod(method)||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(internalAttributes  <  0  ||  super.setMethod(method)||  method  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
11	[BUG]  [BUGGY]  if(method  <  0  ||  internalAttributes  ==  null  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  internalAttributes  ==  null  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  internalAttributes  ==  null  ||  super.setMethod(method)||  internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
12	[BUG]  [BUGGY]  if(extra  <  0  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  ==  null)  {	  if(method    <    0    ||    extra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
13	[BUG]  [BUGGY]  if(method  <  0  ||  extra  >=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  >=  null)  {	  if(method    <    0    ||    extra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
14	[BUG]  [BUGGY]  if(method  <  =  0  ||  extra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extra  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extra  ==  null)  {	  if(method    <    0    ||    extra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
15	[BUG]  [BUGGY]  if(method  <  0  ||  extra  ==  null  ||  rawName.length()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  ==  null  ||  rawName.length()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  ==  null  ||  rawName.length()  ==  0)  {	  if(method    <    0    ||    extra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
16	[BUG]  [BUGGY]  if(method  <  0  ||  extra  >>  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  >>  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  >>  null)  {	  if(method    <    0    ||    extra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
17	[BUG]  [BUGGY]  this.internalAttributes.put(method,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  extra);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  extra);	  this.internalAttributes.put(extra,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
18	[BUG]  [BUGGY]  this.internalAttributes.put(key,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(key,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(key,  method);	  this.internalAttributes.put(extra,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
19	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
20	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
21	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
22	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
23	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method  +  1))  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method  +  1))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
24	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method,  false))  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method,  false))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method,  false))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
25	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  outerAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  outerAttributes.length)  {	  if(method    <    =    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
26	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  outerAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  outerAttributes.length)  {	  if(method    <    =    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
27	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  outerAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  outerAttributes.length)  {	  if(method    <    =    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
28	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  externalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  externalAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  externalAttributes.length)  {	  if(method    <    =    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
29	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  internalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  internalAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  internalAttributes.length)  {	  if(method    <    =    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
30	[BUG]  [BUGGY]  if(extra  <  0  ||  method.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
31	[BUG]  [BUGGY]  if(extra  <  0  ||  method  <  0  ||  extra.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  <  0  ||  extra.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  <  0  ||  extra.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
32	[BUG]  [BUGGY]  if(method  <  =  0  ||  extra.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extra.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extra.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
33	[BUG]  [BUGGY]  if(method  <  0  ||  extra!=  null  &&  extra.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra!=  null  &&  extra.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra!=  null  &&  extra.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
34	[BUG]  [BUGGY]  if(method  <  0  ||  extra.setMethod(method  +  1))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.setMethod(method  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.setMethod(method  +  1))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
35	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  super.setMethod(method))  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
36	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  super.setMethod(method))  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
37	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  super.setMethod(method))  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
38	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.internalAttributes.setMethod(method))  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
39	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  super.setMethod(method))  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
40	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes.get(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes.get(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.internalAttributes.get(method))  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
41	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_MASK  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
42	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  SHORT_SHIFT  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  SHORT_SHIFT  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  SHORT_SHIFT  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
43	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  SHORT_SHIFT  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  SHORT_SHIFT  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  SHORT_SHIFT  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
44	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  0  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  0  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  0  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
45	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
46	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  16  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  16  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  16  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
47	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_FAT)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
48	[BUG]  [BUGGY]  if(method  <  PLATFORM_FAT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  PLATFORM_FAT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  PLATFORM_FAT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
49	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
50	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
51	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
52	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  PLATFORM_FAT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  PLATFORM_FAT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  PLATFORM_FAT)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
53	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  1)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
54	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()!=  0)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
55	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  >  0)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
56	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  >=  0)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
57	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  2)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
58	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >=  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >=  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  method  >=  extraFields.length)  {	  if(method    <    0    ||    method    >=    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
59	[BUG]  [BUGGY]  if(extraFields.length  <  0  ||  method  >=  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.length  <  0  ||  method  >=  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.length  <  0  ||  method  >=  method)  {	  if(method    <    0    ||    method    >=    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
60	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  extraFields.length)  {	  if(method    <    0    ||    method    >=    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
61	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >=  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >=  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  method  >=  extraFields.length)  {	  if(method    <    0    ||    method    >=    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
62	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.contains(method))  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
63	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes.contains(method))  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
64	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields.contains(method))  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
65	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.contains(method))  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
66	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.containsKey(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.containsKey(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.containsKey(method))  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
67	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.contains(method  +  1))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.contains(method  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.contains(method  +  1))  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
68	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
69	[BUG]  [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method!=  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
70	[BUG]  [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >>  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
71	[BUG]  [BUGGY]  if(method  <  0  ||  method.length  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method.length  >  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method.length  >  extra.length)  {	  if(method    <    0    ||    extra.length    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
72	[BUG]  [BUGGY]  if(extra  <  0  ||  method.length  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method.length  >  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method.length  >  extra.length)  {	  if(method    <    0    ||    extra.length    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
73	[BUG]  [BUGGY]  if(method  <  0  ||  extra.length  ==  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.length  ==  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.length  ==  method.length)  {	  if(method    <    0    ||    extra.length    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
74	[BUG]  [BUGGY]  if(method  <  0  ||  extra.length  >=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.length  >=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.length  >=  method.length)  {	  if(method    <    0    ||    extra.length    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
75	[BUG]  [BUGGY]  if(method  <  0  ||  extra.length!=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.length!=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.length!=  method.length)  {	  if(method    <    0    ||    extra.length    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
76	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  maxSize)  {	  if(method    <    =    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
77	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  this.maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  this.maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  this.maxSize)  {	  if(method    <    =    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
78	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  maxSize)  {	  if(method    <    =    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
79	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  size)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  size)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  size)  {	  if(method    <    =    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
80	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  MAX_METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  MAX_METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  MAX_METHOD_NAME)  {	  if(method    <    =    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
81	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
82	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
83	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
84	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
85	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
86	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
87	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  outerAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  outerAttributes.length)  {	  if(method    <    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
88	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  internalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  internalAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  internalAttributes.length)  {	  if(method    <    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
89	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  outerAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  outerAttributes.length)  {	  if(method    <    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
90	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.length  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  outerAttributes.length  -  1)  {	  if(method    <    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
91	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  SHORT_SHIFT)  {	  if(method    <    0    ||    method    ==    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
92	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  SHORT_MASK)  {	  if(method    <    0    ||    method    ==    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
93	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  SHORT_MASK)  {	  if(method    <    0    ||    method    ==    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
94	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method,  false))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method,  false))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method,  false))  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
95	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false),  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false),  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false),  null)  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
96	[BUG]  [BUGGY]  if(method  >=  0  ||  super.setMethod(method,  false))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  super.setMethod(method,  false))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  super.setMethod(method,  false))  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
97	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
98	[BUG]  [BUGGY]  Locale.getDefault().setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  Locale.getDefault().setMethod(method,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setMethod(method,  null);	  Locale.getDefault().setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
99	[BUG]  [BUGGY]  Locale.getDefault().setMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  Locale.getDefault().setMethod(method,  true);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setMethod(method,  true);	  Locale.getDefault().setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
100	[BUG]  [BUGGY]  Locale.getDefault().setMethod(this.method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  Locale.getDefault().setMethod(this.method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setMethod(this.method);	  Locale.getDefault().setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
101	[BUG]  [BUGGY]  Locale.getDefault().setMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  Locale.getDefault().setMethod(method,  false);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setMethod(method,  false);	  Locale.getDefault().setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
102	[BUG]  [BUGGY]  Locale.getDefault().setMethod(method,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  Locale.getDefault().setMethod(method,  this);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setMethod(method,  this);	  Locale.getDefault().setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
103	[BUG]  [BUGGY]  Locale.getDefault().setMethod(method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  Locale.getDefault().setMethod(method,  this.internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setMethod(method,  this.internalAttributes);	  Locale.getDefault().setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
104	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.length  <  0  ||  method  >  extraFields.size())  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
105	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  extraFields.size())  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
106	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  <  0  ||  method  >  extraFields.size())  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
107	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  method.length)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
108	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  <  0  ||  method  >  extraFields.size())  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
109	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  >  method.length)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
110	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields  <  0  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields  <  0  ||  extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields  <  0  ||  extraFields.size()  >  method.length)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
111	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_MASK)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
112	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  =  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  =  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  =  0  ||  method  >  extraFields.length)  {	  if(method    <    =    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
113	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  extraFields.length)  {	  if(method    <    =    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
114	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  extraFields.length)  {	  if(method    <    =    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
115	[BUG]  [BUGGY]  if(extraFields.length  <  =  0  ||  method  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.length  <  =  0  ||  method  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.length  <  =  0  ||  method  >  method)  {	  if(method    <    =    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
116	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
117	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  URLEncoder.UTF8)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  URLEncoder.UTF8)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  URLEncoder.UTF8)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
118	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  size  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  size  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  size  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
119	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.maxSize  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.maxSize  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.maxSize  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
120	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  maxSize  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  maxSize  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  maxSize  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
121	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxSize  -  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  maxSize  -  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxSize  -  2)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
122	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
123	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null.setMethod(super.setMethod(method))  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null.setMethod(super.setMethod(method))  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null.setMethod(super.setMethod(method))  ||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
124	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
125	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null.setMethod(super.setMethod(method))  &&  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null.setMethod(super.setMethod(method))  &&  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null.setMethod(super.setMethod(method))  &&  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
126	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
127	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.METHOD_NAME)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
128	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.METHOD_NAME)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
129	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.METHOD_NAME)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
130	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
131	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
132	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.METHOD_NAME)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
133	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.length  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
134	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
135	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.length  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
136	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
137	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  externalAttributes  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
138	[BUG]  [BUGGY]  this.internalAttributes.put(method,  platform);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  platform);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  platform);	  this.internalAttributes.put(method,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
139	[BUG]  [BUGGY]  this.internalAttributes.put(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  null);	  this.internalAttributes.put(method,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
140	[BUG]  [BUGGY]  this.internalAttributes.put(method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  gpb);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  gpb);	  this.internalAttributes.put(method,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
141	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry());	  this.internalAttributes.put(method,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
142	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
143	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
144	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
145	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
146	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES,  true))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
147	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
148	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  HashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  HashMap());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  HashMap());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
149	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,Object>());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  String,Object>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
150	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ArrayList());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ArrayList());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ArrayList());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
151	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer>());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer>());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
152	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  Integer>());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  Integer>());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  Integer>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
153	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer,  Integer>());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer,  Integer>());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer,  Integer>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
154	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  MAX_METHOD_NON_NULL)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  MAX_METHOD_NON_NULL)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  MAX_METHOD_NON_NULL)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NON_NULL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
155	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  MAX_METHOD_NON_NULL)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  MAX_METHOD_NON_NULL)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  MAX_METHOD_NON_NULL)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NON_NULL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
156	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NON_NULL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
157	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NON_NULL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
158	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NON_NULL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
159	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method,  true))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method,  true))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method,  true))  {	  if(method    <    0    ||    super.setMethod(method,    true))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
160	[BUG]  [BUGGY]  if(method  >=  0  ||  super.setMethod(method,  true))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  super.setMethod(method,  true))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  super.setMethod(method,  true))  {	  if(method    <    0    ||    super.setMethod(method,    true))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
161	[BUG]  [BUGGY]  if(method  <  1  ||  super.setMethod(method,  true))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  super.setMethod(method,  true))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  super.setMethod(method,  true))  {	  if(method    <    0    ||    super.setMethod(method,    true))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
162	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)&&  this.internalAttributes.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)&&  this.internalAttributes.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false)&&  this.internalAttributes.contains(method))  {	  if(method    <    0    ||    super.setMethod(method,    true))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
163	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
164	[BUG]  [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method!=  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
165	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  this.extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  this.extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  this.extraFields.size())  {	  if(method    <    0    ||    method    >    this.extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
166	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  this.extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  this.extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  this.extraFields.size())  {	  if(method    <    0    ||    method    >    this.extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
167	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  this.extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  this.extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  this.extraFields.size())  {	  if(method    <    0    ||    method    >    this.extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
168	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  this.extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  this.extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  this.extraFields.size())  {	  if(method    <    0    ||    method    >    this.extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
169	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  this.extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  this.extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  this.extraFields.size())  {	  if(method    <    0    ||    method    >    this.extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
170	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.size()  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.size()  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.extraFields.size()  +  1)  {	  if(method    <    0    ||    method    >    this.extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
171	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
172	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
173	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
174	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  ==  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  ==  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  ==  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
175	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
176	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
177	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
178	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields  ==  null)  {	  if(method    <    0    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
179	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0)  {	  if(method    <    0    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
180	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0)  {	  if(method    <    0    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
181	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields!=  null)  {	  if(method    <    0    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
182	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method  >=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method  >=  null)  {	  if(method    <    0    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
183	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  null)  {	  if(method    <    0    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
184	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)&&    this.internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
185	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)&&  internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)&&    this.internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
186	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)&&  this.internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)&&  this.internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method)&&  this.internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)&&    this.internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
187	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)&&  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)&&    this.internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
188	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  this.internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  this.internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  this.internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)&&    this.internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
189	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes  >=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes  >=  null)  {	  if(method    <    0    ||    super.setMethod(method)&&    this.internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
190	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
191	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
192	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
193	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >=  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
194	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields  ==  null  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
195	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraAttributes  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
196	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  0)  {	  if(extraFields    ==    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
197	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  16)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  16)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
198	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  16)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  16)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
199	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  16)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  16)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
200	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  16)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  16)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
201	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  32)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  32)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
202	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  >  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  >  16)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  >  16)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
203	[BUG]  [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method!=  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >>    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
204	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_MASK)  {	  if(method    <    0    ||    method    >>    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
205	[BUG]  [BUGGY]  if(method  ==  0  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  ==  0  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  0  ||  super.setMethod(method))  {	  if(method    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
206	[BUG]  [BUGGY]  if(method  ==  0  ||  method  <  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  ==  0  ||  method  <  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  0  ||  method  <  extraFields.length)  {	  if(method    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
207	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  externalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  externalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  externalAttributes)  {	  if(method    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
208	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
209	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
210	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >=  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >=  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >=  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
211	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  ==  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  ==  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  ==  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
212	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
213	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
214	[BUG]  [BUGGY]  if(method  <  =  0  ||  method!=  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method!=  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method!=  SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
215	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  >  method)  {	  if(method    <    0    ||    extraFields.size()    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
216	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  >  method)  {	  if(method    <    0    ||    extraFields.size()    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
217	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  ==  method)  {	  if(method    <    0    ||    extraFields.size()    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
218	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >=  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >=  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >=  method)  {	  if(method    <    0    ||    extraFields.size()    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
219	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  1)  {	  if(method    <    0    ||    extraFields.size()    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
220	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  method  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  method  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  method  >  method.size())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
221	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  method  >  methods.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  method  >  methods.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  method  >  methods.size())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
222	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  internalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  internalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  internalAttributes.size())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
223	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  externalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  externalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  externalAttributes.size())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
224	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  externalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  externalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  externalAttributes.size())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
225	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  method  >  method.length())  {  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  method  >  method.length())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  method  >  method.length())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
226	[BUG]  [BUGGY]  if(extra  <  0  ||  method!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method!=  null)  {	  if(method    <    0    ||    extra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
227	[BUG]  [BUGGY]  if(extra  <  0  ||  method  >=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  >=  null)  {	  if(method    <    0    ||    extra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
228	[BUG]  [BUGGY]  if(method  <  =  0  ||  extra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extra!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extra!=  null)  {	  if(method    <    0    ||    extra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
229	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  internalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  internalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  internalAttributes.size())  {	  if(method    <    =    0    ||    method    >    internalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
230	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  internalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  internalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  internalAttributes.size())  {	  if(method    <    =    0    ||    method    >    internalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
231	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  internalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  internalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  internalAttributes.size())  {	  if(method    <    =    0    ||    method    >    internalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
232	[BUG]  [BUGGY]  if(internalAttributes  <  =  0  ||  method  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(internalAttributes  <  =  0  ||  method  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(internalAttributes  <  =  0  ||  method  >  method.size())  {	  if(method    <    =    0    ||    method    >    internalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
233	[BUG]  [BUGGY]  if(method  <  extraFields.length  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  extraFields.length  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  extraFields.length  ||  method  >  extraFields.length)  {	  if(extraFields.length    <    0    ||    method    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
234	[BUG]  [BUGGY]  if(extraFields.length  <  2  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.length  <  2  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.length  <  2  ||  method  >  extraFields.length)  {	  if(extraFields.length    <    0    ||    method    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
235	[BUG]  [BUGGY]  if(extraFields.length  <  1  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.length  <  1  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.length  <  1  ||  method  >  extraFields.length)  {	  if(extraFields.length    <    0    ||    method    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
236	[BUG]  [BUGGY]  if(extraFields.length  ==  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.length  ==  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.length  ==  0  ||  method  >  extraFields.length)  {	  if(extraFields.length    <    0    ||    method    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
237	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
238	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
239	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
240	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
241	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
242	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
243	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_MASK  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_MASK  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_MASK  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
244	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
245	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
246	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
247	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
248	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
249	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
250	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  12)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  12)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  12)  {	  if(method    <    0    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
251	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  32)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  32)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  32)  {	  if(method    <    0    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
252	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  10)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  10)  {	  if(method    <    0    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
253	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  16)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  16)  {	  if(method    <    0    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
254	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  20)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  20)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  20)  {	  if(method    <    0    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
255	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null),  null)  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
256	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  this.internalAttributes))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  this.internalAttributes))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  this.internalAttributes))  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
257	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  false)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  false)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null),  false)  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
258	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method,  null))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method,  null))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method,  null))  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
259	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
260	[BUG]  [BUGGY]  if(extraFields.size()  <  0  ||  method.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  0  ||  method.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  0  ||  method.size()  >  0)  {	  if(method    <    0    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
261	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
262	[BUG]  [BUGGY]  if(extraFields  >=  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  >=  null  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  >=  null  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
263	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_COMPRESSION)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
264	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_COMPRESSION)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
265	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_COMPRESSION)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
266	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
267	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
268	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
269	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
270	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
271	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
272	[BUG]  [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
273	[BUG]  [BUGGY]  if(method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
274	[BUG]  [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >>  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
275	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.internalAttributes)  {	  if(method    <    0    ||    method    >    size)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
276	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  size)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  size)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  size)  {	  if(method    <    0    ||    method    >    size)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
277	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  size)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  size)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  size)  {	  if(method    <    0    ||    method    >    size)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
278	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraAttributes  <  0  ||  method  >  extraFields.size())  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
279	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  externalAttributes  <  0  ||  method  >  extraFields.size())  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
280	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraAttributes  <  0  ||  extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraAttributes  <  0  ||  extraFields.size()  >  method.length)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
281	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.length  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.length  >  0)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
282	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  this.extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  this.extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  this.extraFields.length)  {	  if(method    <    0    ||    method    >    this.extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
283	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  this.extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  this.extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  this.extraFields.length)  {	  if(method    <    0    ||    method    >    this.extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
284	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  this.extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  this.extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  this.extraFields.length)  {	  if(method    <    0    ||    method    >    this.extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
285	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  this.extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  this.extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  this.extraFields.length)  {	  if(method    <    0    ||    method    >    this.extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
286	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.length  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.extraFields.length  -  1)  {	  if(method    <    0    ||    method    >    this.extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
287	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  this.extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  this.extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  this.extraFields.length)  {	  if(method    <    0    ||    method    >    this.extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
288	[BUG]  [BUGGY]  if(extra  <  0  ||  method  ==  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  ==  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  ==  method.length)  {	  if(extra    <    0    ||    method    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
289	[BUG]  [BUGGY]  if(extra  <  0  ||  method  >=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  >=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  >=  method.length)  {	  if(extra    <    0    ||    method    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
290	[BUG]  [BUGGY]  if(extra  <  0  ||  method  <  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  <  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  <  method.length)  {	  if(extra    <    0    ||    method    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
291	[BUG]  [BUGGY]  if(extra  <  0  ||  method!=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method!=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method!=  method.length)  {	  if(extra    <    0    ||    method    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
292	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  null);	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
293	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  true);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  true);	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
294	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  false);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  false);	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
295	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  internalAttributes);	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
296	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  externalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  externalAttributes);	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
297	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  new  LinkedHashMap  <  ZipArchiveEntry>());  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  new  LinkedHashMap  <  ZipArchiveEntry>());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  new  LinkedHashMap  <  ZipArchiveEntry>());	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
298	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
299	[BUG]  [BUGGY]  if(method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
300	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  this.maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  this.maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  this.maxSize)  {	  if(method    <    0    ||    method    >    this.maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
301	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.maxSize  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.maxSize  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.maxSize  +  1)  {	  if(method    <    0    ||    method    >    this.maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
302	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  this.maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  this.maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  this.maxSize)  {	  if(method    <    0    ||    method    >    this.maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
303	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.maxSize  ||  method  >  this.internalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.maxSize  ||  method  >  this.internalAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.maxSize  ||  method  >  this.internalAttributes.length)  {	  if(method    <    0    ||    method    >    this.maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
304	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  this.maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  this.maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  this.maxSize)  {	  if(method    <    0    ||    method    >    this.maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
305	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  ZipArchiveEntry.class)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
306	[BUG]  [BUGGY]  if(method  ==  ZipArchiveEntry.class  ||  method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  ==  ZipArchiveEntry.class  ||  method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  ZipArchiveEntry.class  ||  method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
307	[BUG]  [BUGGY]  if(extra  <  =  0  ||  method  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  =  0  ||  method  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  =  0  ||  method  >  method.length)  {	  if(method    <    =    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
308	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  extra.length)  {	  if(method    <    =    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
309	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  extra.length)  {	  if(method    <    =    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
310	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  extra.length)  {	  if(method    <    =    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
311	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.length  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.length  >  0)  {	  if(method    <    0    ||    extraFields.length    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
312	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.length  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.length  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.length  >  method)  {	  if(method    <    0    ||    extraFields.length    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
313	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.length  >  method)  {	  if(method    <    0    ||    extraFields.length    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
314	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.length  >  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.length  >  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.length  >  1)  {	  if(method    <    0    ||    extraFields.length    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
315	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  1)  {	  if(method    <    0    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
316	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  ==  1)  {	  if(method    <    0    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
317	[BUG]  [BUGGY]  if(extraFields  <  0  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  extraFields.size()  ==  1)  {	  if(method    <    0    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
318	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  method  <  extraFields.size())  {	  if(method    <    0    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
319	[BUG]  [BUGGY]  if(method  <  0  ||  extra  ==  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  ==  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  ==  method.length)  {	  if(method    <    0    ||    method    ==    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
320	[BUG]  [BUGGY]  if(method  <  0  ||  extra!=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra!=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra!=  method.length)  {	  if(method    <    0    ||    method    ==    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
321	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  internalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  internalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  internalAttributes)  {	  if(method    <    =    0    ||    method    >    internalAttributes)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
322	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  internalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  internalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  internalAttributes)  {	  if(method    <    =    0    ||    method    >    internalAttributes)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
323	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  internalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  internalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  internalAttributes)  {	  if(method    <    =    0    ||    method    >    internalAttributes)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
324	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  internalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  internalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  internalAttributes)  {	  if(method    <    =    0    ||    method    >    internalAttributes)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
325	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  externalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  externalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  externalAttributes)  {	  if(method    <    =    0    ||    method    >    internalAttributes)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
326	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  maxFields)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  maxFields)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  maxFields)  {	  if(method    <    =    0    ||    method    >    internalAttributes)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
327	[BUG]  [BUGGY]  gpb.setMethod(this.method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setMethod(this.method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setMethod(this.method);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
328	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes[method]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setMethod(this.internalAttributes[method]);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setMethod(this.internalAttributes[method]);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
329	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setMethod(this.internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setMethod(this.internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
330	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setMethod(this.internalAttributes,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setMethod(this.internalAttributes,  method);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
331	[BUG]  [BUGGY]  gpb.setMethod(method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setMethod(method,  this.internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setMethod(method,  this.internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
332	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
333	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  ==  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
334	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  ==  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
335	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method!=  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
336	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  ==  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
337	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  ZipArchiveEntry.class  ||  method  ==  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
338	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >=  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
339	[BUG]  [BUGGY]  if(extraFields.length  <  0  ||  method  ==  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.length  <  0  ||  method  ==  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.length  <  0  ||  method  ==  method)  {	  if(method    <    0    ||    method    ==    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
340	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  ==  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  ==  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  method  ==  extraFields.length)  {	  if(method    <    0    ||    method    ==    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
341	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  ==  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  ==  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  method  ==  extraFields.length)  {	  if(method    <    0    ||    method    ==    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
342	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  externalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  externalAttributes);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
343	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  internalAttributes);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
344	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(extra));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
345	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  null);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  null);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
346	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  method);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
347	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  true);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  true);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
348	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >=  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >=  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  method  >=  extraFields.size())  {	  if(method    <    0    ||    method    >=    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
349	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  extraFields.size())  {	  if(method    <    0    ||    method    >=    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
350	[BUG]  [BUGGY]  if(extraFields.size()  <  0  ||  method  >=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  0  ||  method  >=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  0  ||  method  >=  method.length)  {	  if(method    <    0    ||    method    >=    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
351	[BUG]  [BUGGY]  this.extraFields.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(method,  entryName);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(method,  entryName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
352	[BUG]  [BUGGY]  this.extraFields.put(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(rawName,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(rawName,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
353	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method));	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
354	[BUG]  [BUGGY]  this.extraFields.put(key,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(key,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(key,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
355	[BUG]  [BUGGY]  this.extraFields.put(entryName,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(entryName,  rawName);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(entryName,  rawName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
356	[BUG]  [BUGGY]  this.extraFields.put(entryName,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(entryName,  method  +  1);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(entryName,  method  +  1);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
357	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
358	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
359	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  true))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
360	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  method))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
361	[BUG]  [BUGGY]  if(method  >=  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
362	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  1)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
363	[BUG]  [BUGGY]  if(extraFields  <  0  ||  externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  externalAttributes.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  externalAttributes.size()  ==  0)  {	  if(externalAttributes    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
364	[BUG]  [BUGGY]  if(externalAttributes  ==  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  ==  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  ==  0  ||  extraFields.size()  ==  0)  {	  if(externalAttributes    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
365	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  externalAttributes.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  externalAttributes.size()  ==  0)  {	  if(externalAttributes    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
366	[BUG]  [BUGGY]  if(externalAttributes!=  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes!=  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes!=  0  ||  extraFields.size()  ==  0)  {	  if(externalAttributes    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
367	[BUG]  [BUGGY]  if(extra  <  0  ||  method  ==  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  ==  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  ==  extra.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
368	[BUG]  [BUGGY]  if(extra  <  0  ||  method  >=  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  >=  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  >=  extra.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
369	[BUG]  [BUGGY]  if(extra  <  0  ||  method  <  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  <  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  <  extra.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
370	[BUG]  [BUGGY]  if(method  <  0  ||  extra.length  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.length  >  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.length  >  extra.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
371	[BUG]  [BUGGY]  if(extra  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  >  extraFields.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
372	[BUG]  [BUGGY]  if(extra  <  0  ||  extra  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  extra  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  extra  >  method.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
373	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
374	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  ZipArchiveEntry.SHORT_MASK)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
375	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  method  >  extraFields.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
376	[BUG]  [BUGGY]  if(extraFields.size()  >  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  >  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  >  0  ||  method  >  extraFields.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
377	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  method.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
378	[BUG]  [BUGGY]  if(extraFields.size()  <  =  0  ||  method  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  =  0  ||  method  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  =  0  ||  method  >  method.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
379	[BUG]  [BUGGY]  if(extraFields.size()  >=  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  >=  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  >=  0  ||  method  >  extraFields.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
380	[BUG]  [BUGGY]  if(extraFields.size()!=  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()!=  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()!=  0  ||  method  >  extraFields.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
381	[BUG]  [BUGGY]  if(extraFields.size()  <  1  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  1  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  1  ||  method  >  extraFields.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
382	[BUG]  [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  ==  null  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
383	[BUG]  [BUGGY]  if(method  <  0  ||  extra  >=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  >=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  >=  method.length)  {	  if(method    <    0    ||    extra    <    =    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
384	[BUG]  [BUGGY]  if(extra  <  0  ||  method  <  =  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  <  =  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  <  =  method.length)  {	  if(method    <    0    ||    extra    <    =    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
385	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
386	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_MESSAGE)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_MESSAGE)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_MESSAGE)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MESSAGE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
387	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_MESSAGE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_MESSAGE)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_MESSAGE)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MESSAGE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
388	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_MESSAGE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_MESSAGE)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_MESSAGE)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MESSAGE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
389	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MESSAGE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
390	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_MESSAGE)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
391	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  method.length)  {	  if(method    <    0    ||    extra    <    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
392	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
393	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
394	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
395	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
396	[BUG]  [BUGGY]  if(method  <  0  ||  method  <  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  <  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  <  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
397	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >=  ExtraFieldData.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >=  ExtraFieldData.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >=  ExtraFieldData.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
398	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  ==  ExtraFieldData.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  ==  ExtraFieldData.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  ==  ExtraFieldData.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
399	[BUG]  [BUGGY]  if(extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  1)  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
400	[BUG]  [BUGGY]  if(extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  >  0)  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
401	[BUG]  [BUGGY]  if(extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  2)  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
402	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  extraFields.contains(method))  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
403	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method  +  1))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method  +  1))  {	  if(method    <    =    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
404	[BUG]  [BUGGY]  if(method  >=  0  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  super.setMethod(method))  {	  if(method    <    =    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
405	[BUG]  [BUGGY]  if(method  <  =  1  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  1  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  1  ||  super.setMethod(method))  {	  if(method    <    =    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
406	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    =    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
407	[BUG]  [BUGGY]  if(method  <  0  ||  outerAttributes  ==  null  ||  method  >  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  outerAttributes  ==  null  ||  method  >  outerAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  outerAttributes  ==  null  ||  method  >  outerAttributes.size())  {	  if(method    <    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
408	[BUG]  [BUGGY]  if(method  <  0  ||  outerAttributes!=  null  ||  method  >  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  outerAttributes!=  null  ||  method  >  outerAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  outerAttributes!=  null  ||  method  >  outerAttributes.size())  {	  if(method    <    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
409	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  outerAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  outerAttributes.size())  {	  if(method    <    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
410	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
411	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
412	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
413	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
414	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
415	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
416	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
417	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  2))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  2))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  2))  {	  if(method    <    0    ||    super.setMethod(method    +    1))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
418	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  super.setMethod(method  +  1))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  super.setMethod(method  +  1))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  super.setMethod(method  +  1))  {	  if(method    <    0    ||    super.setMethod(method    +    1))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
419	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  this.internalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  this.internalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  1)||  this.internalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method    +    1))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
420	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  this.internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  this.internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  1)||  this.internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method    +    1))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
421	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
422	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
423	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
424	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
425	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
426	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields  >  method.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
427	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  >  extraFields.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
428	[BUG]  [BUGGY]  if(extraFields  <  0  ||  extraFields  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  extraFields  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  extraFields  >  method.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
429	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  >  extraFields.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
430	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method  ==  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method  ==  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method  ==  method.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
431	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method  >=  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method  >=  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method  >=  method.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
432	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
433	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
434	[BUG]  [BUGGY]  if(method  <  =  1  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  1  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  1  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
435	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxSize  +  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  maxSize  +  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxSize  +  2)  {	  if(method    <    0    ||    method    >    maxSize    +    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
436	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  maxSize  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  maxSize  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  maxSize  +  1)  {	  if(method    <    0    ||    method    >    maxSize    +    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
437	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_VALUE  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_VALUE  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_VALUE  +  1)  {	  if(method    <    0    ||    method    >    maxSize    +    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
438	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  size  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  size  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  size  +  1)  {	  if(method    <    0    ||    method    >    maxSize    +    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
439	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NAME  +  1)  {	  if(method    <    0    ||    method    >    maxSize    +    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
440	[BUG]  [BUGGY]  this.internalAttributes.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  entryName);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  entryName);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
441	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(entryName,  method  +  1);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(entryName,  method  +  1);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
442	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(entryName,  new  ZipArchiveEntry(method));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(entryName,  new  ZipArchiveEntry(method));	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
443	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  maxNonExtraFields)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  maxNonExtraFields)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  maxNonExtraFields)  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
444	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  maxNonExtraFields)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  maxNonExtraFields)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  maxNonExtraFields)  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
445	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxNonExtraFields  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
446	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_COUNT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_COUNT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_COUNT)  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
447	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxNonExtraFields  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
448	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  >  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
449	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  >  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
450	[BUG]  [BUGGY]  if(extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  >  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
451	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  ==  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
452	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method.length  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method.length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  method.length  -  1)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
453	[BUG]  [BUGGY]  if(extraFields.size()  <  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
454	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {	  if(method    <    =    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
455	[BUG]  [BUGGY]  if(externalAttributes  <  =  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  =  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  =  0  ||  extraFields.size()  ==  0)  {	  if(method    <    =    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
456	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {	  if(method    <    =    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
457	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  method)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
458	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  maxSize)  {	  if(method    <    0    ||    method    >=    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
459	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  SPACE_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  SPACE_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  SPACE_SHIFT)  {	  if(method    <    0    ||    method    >    SPACE_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
460	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  SPACE_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  SPACE_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  SPACE_SHIFT)  {	  if(method    <    0    ||    method    >    SPACE_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
461	[BUG]  [BUGGY]  super.setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setMethod(method,  null);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setMethod(method,  null);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
462	[BUG]  [BUGGY]  super.setMethod(method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setMethod(method,  this.internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setMethod(method,  this.internalAttributes);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
463	[BUG]  [BUGGY]  super.setMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setMethod(method,  true);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setMethod(method,  true);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
464	[BUG]  [BUGGY]  super.setMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setMethod(method,  false);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setMethod(method,  false);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
465	[BUG]  [BUGGY]  super.setInternalMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setInternalMethod(method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setInternalMethod(method);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
466	[BUG]  [BUGGY]  super.setMethod(method,  this.intermediateAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setMethod(method,  this.intermediateAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setMethod(method,  this.intermediateAttributes);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
467	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(method);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
468	[BUG]  [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  ArrayList  <  String,Object>();  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  ArrayList  <  String,Object>();	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
469	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(1);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(1);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
470	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  Integer,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  Integer,Object>();  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  Integer,Object>();	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
471	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(2);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(2);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
472	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  ZipArchiveEntry.ZIP)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
473	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >>  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >>  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >>  ZipArchiveEntry.ZIP)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
474	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  =  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  =  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  =  0  ||  method  >  extraFields.size())  {	  if(method    <    =    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
475	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  =  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  =  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  =  0  ||  method  >  extraFields.size())  {	  if(method    <    =    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
476	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields.size()  >  method.length)  {	  if(method    <    =    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
477	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  extraFields.size())  {	  if(method    <    =    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
478	[BUG]  [BUGGY]  this.internalAttributes.put(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  rawName);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  rawName);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
479	[BUG]  [BUGGY]  this.internalAttributes.put(method,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  source);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  source);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
480	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
481	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
482	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  MAX_METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  MAX_METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  MAX_METHOD_NAME)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
483	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MISSING_METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MISSING_METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MISSING_METHOD_NAME)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
484	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NAME  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    MAX_METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
485	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SCRIPT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SCRIPT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.SCRIPT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
486	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SCRIPT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SCRIPT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.SCRIPT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
487	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
488	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
489	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
490	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SCRIPT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SCRIPT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.SCRIPT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
491	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
492	[BUG]  [BUGGY]  if(extraFields!=  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
493	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method!=  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method!=  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method!=  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
494	[BUG]  [BUGGY]  if(extraFields  ==  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
495	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method  >=  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method  >=  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method  >=  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
496	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields  ==  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields  ==  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields  ==  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
497	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method  ==  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method  ==  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method  ==  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
498	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  MISSING_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  MISSING_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  MISSING_SHIFT)  {	  if(method    <    0    ||    method    >    MISSING_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
499	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  MISSING_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  MISSING_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  MISSING_SHIFT)  {	  if(method    <    0    ||    method    >    MISSING_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
500	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MISSING_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MISSING_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MISSING_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    MISSING_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
501	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAXIMIZED_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAXIMIZED_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAXIMIZED_SHIFT)  {	  if(method    <    0    ||    method    >    MISSING_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
502	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MISSING_SHIFT  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MISSING_SHIFT  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MISSING_SHIFT  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    MISSING_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
503	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  null  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  null  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  null  ||  super.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
504	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
505	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  null.setMethod(super.setMethod(method))  &&  super.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  null.setMethod(super.setMethod(method))  &&  super.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  null.setMethod(super.setMethod(method))  &&  super.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
506	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
507	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  null.setMethod(super.setMethod(method))  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  null.setMethod(super.setMethod(method))  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  null.setMethod(super.setMethod(method))  ||  super.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
508	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
509	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
510	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  >  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  >  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  extraFields.size()  >  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
511	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  >  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
512	[BUG]  [BUGGY]  if(extraFields.size()  >  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  >  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  >  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
513	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
514	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  <  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  <  outerAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  <  outerAttributes.size())  {	  if(method    <    =    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
515	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >=  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >=  outerAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >=  outerAttributes.size())  {	  if(method    <    =    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
516	[BUG]  [BUGGY]  if(method  <  =  0  ||  outerAttributes!=  null  ||  method  >  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  outerAttributes!=  null  ||  method  >  outerAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  outerAttributes!=  null  ||  method  >  outerAttributes.size())  {	  if(method    <    =    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
517	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  method  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  method  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  method  >  method.length)  {	  if(method    <    0    ||    method    >    externalAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
518	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  externalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  externalAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  externalAttributes.length)  {	  if(method    <    0    ||    method    >    externalAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
519	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  externalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  externalAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  externalAttributes.length)  {	  if(method    <    0    ||    method    >    externalAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
520	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.length  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  externalAttributes.length  -  1)  {	  if(method    <    0    ||    method    >    externalAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
521	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  method  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  method  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  method  >  method)  {	  if(method    <    0    ||    method    >    externalAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
522	[BUG]  [BUGGY]  if(method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  <  =  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  <  =  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  ZipArchiveEntry.ZIP_SHIFT  ||  method  <  =  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
523	[BUG]  [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >>  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
524	[BUG]  [BUGGY]  if(extra  <  0  ||  method  <  length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  <  length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  <  length)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
525	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  extra  <  length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  extra  <  length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  extra  <  length)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
526	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  size)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  <  size)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  size)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
527	[BUG]  [BUGGY]  if(method  <  0  ||  extra  >  length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  >  length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  >  length)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
528	[BUG]  [BUGGY]  if(method  <  0  ||  extra  ==  length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  ==  length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  ==  length)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
529	[BUG]  [BUGGY]  if(method  <  0  ||  extra  >=  length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  >=  length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  >=  length)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
530	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
531	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
532	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null  super.setMethod(method)||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
533	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
534	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
535	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields!=  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields!=  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields!=  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
536	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  16  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  16  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  16  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
537	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >=  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >=  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >=  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
538	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  ==  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  ==  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  ==  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
539	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.MAX_VALUE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.MAX_VALUE)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ExtraFieldData.class  ||  method  >  ZipArchiveEntry.MAX_VALUE)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
540	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  throw  new  IllegalArgumentException( "ZIP  compression  method  can  not  be  negative: "  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  throw  new  IllegalArgumentException( "ZIP  compression  method  can  not  be  negative: "  +  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null),  throw  new  IllegalArgumentException( "ZIP  compression  method  can  not  be  negative: "  +  method);	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
541	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
542	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  this)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null),  this)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null),  this)  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
543	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
544	[BUG]  [BUGGY]  if(extra  <  0  ||  method  ==  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  ==  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  ==  method)  {	  if(method    <    0    ||    method    ==    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
545	[BUG]  [BUGGY]  if(extra  <  0  ||  method!=  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method!=  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method!=  extra.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
546	[BUG]  [BUGGY]  if(extra  <  0  ||  extra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  extra  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  extra  ==  null)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
547	[BUG]  [BUGGY]  if(extra  <  0  ||  extra  ==  null  ||  extra.length  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  extra  ==  null  ||  extra.length  >  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  extra  ==  null  ||  extra.length  >  extra.length)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
548	[BUG]  [BUGGY]  if(extra  <  0  ||  extra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  extra!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  extra!=  null)  {	  if(extra    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
549	[BUG]  [BUGGY]  if(extra  <  0  ||  method  ==  null  ||  extra  <  =  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  ==  null  ||  extra  <  =  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  ==  null  ||  extra  <  =  method.length)  {	  if(method    <    0    ||    extra    <    =    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
550	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false)||  internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
551	[BUG]  [BUGGY]  if(method  >=  0  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  method  >  SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
552	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.CLASS)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.CLASS)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.CLASS)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
553	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method)||  internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
554	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(getMethod()));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(getMethod()));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(getMethod()));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
555	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.platform));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.platform));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(this.platform));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
556	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.method));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.method));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(this.method));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
557	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(int));  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(int));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(int));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
558	[BUG]  [BUGGY]  if(method  <  0  ||  outerAttributes  ==  null  ||  method  >  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  outerAttributes  ==  null  ||  method  >  outerAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  outerAttributes  ==  null  ||  method  >  outerAttributes.length)  {	  if(method    <    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
559	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer,  String>());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer,  String>());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer,  String>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
560	[BUG]  [BUGGY]  gpb.setInternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setInternalAttributes(extraFields);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setInternalAttributes(extraFields);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
561	[BUG]  [BUGGY]  gpb.setInternalAttributes(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setInternalAttributes(internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setInternalAttributes(internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
562	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  ==  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.length  ==  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.length  ==  0  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
563	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
564	[BUG]  [BUGGY]  if(extraFields.size()  <  =  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  =  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  =  0  ||  method  >  extraFields.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
565	[BUG]  [BUGGY]  if(method  >=  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
566	[BUG]  [BUGGY]  if(method  <  =  0  ||  method!=  internalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method!=  internalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method!=  internalAttributes.size())  {	  if(method    <    =    0    ||    method    >    internalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
567	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  outerAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  outerAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  outerAttributes)  {	  if(method    >=    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
568	[BUG]  [BUGGY]  if(extra  <  0  ||  method  <  0.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  <  0.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  <  0.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
569	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
570	[BUG]  [BUGGY]  if(extra  <  0  ||  method  <  0.2  ||  extra.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  0  ||  method  <  0.2  ||  extra.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  <  0.2  ||  extra.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
571	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  method  >  externalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  method  >  externalAttributes.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  method  >  externalAttributes.length)  {	  if(method    <    0    ||    method    >    externalAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
572	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_FAT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_FAT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_FAT)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
573	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method),  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  super.setMethod(method),  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method),  null)  {	  if(method    <    =    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
574	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  1)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method    +    1))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
575	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  1)||  internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method    +    1))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
576	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  1)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method    +    1))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
577	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MISSING_METHOD_NON_NULL)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MISSING_METHOD_NON_NULL)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MISSING_METHOD_NON_NULL)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NON_NULL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
578	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.length  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.length  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  extraFields.length  >  method)  {	  if(method    <    0    ||    extraFields.length    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
579	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.length  ==  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.length  ==  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.length  ==  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
580	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(extraFields);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
581	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(8);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(8);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
582	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
583	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  =  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  =  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  =  0  ||  method  >  extraFields.length)  {	  if(method    <    =    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
584	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields.length  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields.length  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields.length  >  method)  {	  if(method    <    =    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
585	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  method)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
586	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  methods.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  methods.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  >  methods.size())  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
587	[BUG]  [BUGGY]  if(method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
588	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
589	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method),  false)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method),  false)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method),  false)  {	  if(method    <    0    ||    super.setMethod(method,    true))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
590	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.length  ==  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.length  ==  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.length  ==  method)  {	  if(method    <    0    ||    method    ==    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
591	[BUG]  [BUGGY]  if(extraFields!=  null  ||  externalAttributes  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  externalAttributes  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  externalAttributes  <  0  ||  extraFields.size()  ==  0)  {	  if(externalAttributes    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
592	[BUG]  [BUGGY]  this.internalAttributes.remove(method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.remove(method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.remove(method);	  this.internalAttributes.put(method,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
593	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  =  0  ||  extraFields.size()  ==  0)  {	  if(method    <    =    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
594	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields.size()  ==  1)  {	  if(method    <    =    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
595	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  externalAttributes.size()  ==  0)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
596	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maximumSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  maximumSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maximumSize)  {	  if(method    <    0    ||    method    >=    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
597	[BUG]  [BUGGY]  if(method  >=  0  ||  method  >=  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  method  >=  maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  method  >=  maxSize)  {	  if(method    <    0    ||    method    >=    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
598	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SPACE_SHIFT  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SPACE_SHIFT  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SPACE_SHIFT  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
599	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  method  >  externalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes  <  0  ||  method  >  externalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  method  >  externalAttributes.size())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
600	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  method  >  externalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  ==  null  ||  method  >  externalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  ==  null  ||  method  >  externalAttributes.size())  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
601	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.length  <  0  ||  method  >  extraFields.length)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
602	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.length  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.length  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  extraFields.length  >  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
603	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes  >  extraFields.length)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
604	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes.length  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes.length  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes.length  >  extraFields.length)  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
605	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.length  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.length  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.extraFields.length  +  1)  {	  if(method    <    0    ||    method    >    this.extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
606	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
607	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()!=  0)  {	  if(method    <    0    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
608	[BUG]  [BUGGY]  if(method  <  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
609	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields  <  0  ||  method  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields  <  0  ||  method  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields  <  0  ||  method  >  method.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
610	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.UNSPECIFIED  ||  method  >  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.UNSPECIFIED  ||  method  >  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.UNSPECIFIED  ||  method  >  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
611	[BUG]  [BUGGY]  if(method  >=  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
612	[BUG]  [BUGGY]  if(method  ==  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  ==  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
613	[BUG]  [BUGGY]  if(method  <  0  ||  extra  ==  null  ||  extra.length  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  ==  null  ||  extra.length  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  ==  null  ||  extra.length  >  method.length)  {	  if(method    <    0    ||    extra.length    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
614	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT  +  1)  {	  if(method    <    0    ||    method    >    maxSize    +    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
615	[BUG]  [BUGGY]  this.internalAttributes.set(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.set(method,  rawName);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.set(method,  rawName);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
616	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.DEFAULT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.DEFAULT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.DEFAULT)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
617	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >=  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
618	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()!=  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()!=  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()!=  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
619	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  ==  1)  {	  if(method    <    0    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
620	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  2)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  ==  2)  {	  if(method    <    0    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
621	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.contains(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.contains(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.contains(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
622	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.contains(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.contains(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.contains(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    extraFields.contains(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
623	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_FAT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_FAT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_FAT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
624	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
625	[BUG]  [BUGGY]  super.setInternalAttributes(method);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setInternalAttributes(method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setInternalAttributes(method);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
626	[BUG]  [BUGGY]  super.setInternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setInternalAttributes(extraFields);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setInternalAttributes(extraFields);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
627	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.internalAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.internalAttributes.size())  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
628	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class.getName())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class.getName())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class.getName())  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
629	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields.size()  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields.size()  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields.size()  >  method)  {	  if(method    <    =    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
630	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
631	[BUG]  [BUGGY]  if(method  ==  PLATFORM_UNIX  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  ==  PLATFORM_UNIX  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  PLATFORM_UNIX  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {	  if(extraFields    ==    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
632	[BUG]  [BUGGY]  if(extraFields!=  null  ||  externalAttributes.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  externalAttributes.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  externalAttributes.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
633	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  externalAttributes.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  externalAttributes.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
634	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0  ||  externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0  ||  externalAttributes.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0  ||  externalAttributes.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
635	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  method  >=  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  method  >=  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  method  >=  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
636	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method  + ") ")  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method  + ") ")  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method  + ") ")  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
637	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method,  true))  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method,  true))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method,  true))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
638	[BUG]  [BUGGY]  this.internalAttributes.set(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.set(method,  entryName);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.set(method,  entryName);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
639	[BUG]  [BUGGY]  this.internalAttributes.put(method,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  name);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  name);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
640	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  this.extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >  this.extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  this.extraFields.size())  {	  if(method    <    0    ||    method    >    this.extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	124	None	replace
641	[BUG]  [BUGGY]  if(method  <  0  ||  extra.length  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.length  >  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.length  >  method)  {	  if(method    <    =    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
642	[BUG]  [BUGGY]  if(extra  <  =  0  ||  method  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  =  0  ||  method  >  extra.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  =  0  ||  method  >  extra.length)  {	  if(method    <    =    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
643	[BUG]  [BUGGY]  if(method  <  0  ||  extra.length  <  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.length  <  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.length  <  method.length)  {	  if(method    <    =    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
644	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  MAX_METHOD_SIZE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  MAX_METHOD_SIZE)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  MAX_METHOD_SIZE)  {	  if(method    <    =    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
645	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
646	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields  ==  null  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
647	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  internalAttributes.length  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  internalAttributes.length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  internalAttributes.length  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
648	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NAME  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
649	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_SIZE  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_SIZE  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_SIZE  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
650	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  length  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  length  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  length  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
651	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.extraFields)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.extraFields)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.extraFields)  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
652	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  extraFields)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  extraFields)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  extraFields)  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
653	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
654	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.BIGINT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.BIGINT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >=  ZipArchiveEntry.BIGINT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
655	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  PLATFORM_FAT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  PLATFORM_FAT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  PLATFORM_FAT)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
656	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >=  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >=  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  method  >=  extraFields.size())  {	  if(method    <    0    ||    method    >=    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
657	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_UNKNOWN)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_UNKNOWN)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_UNKNOWN)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SCRIPT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
658	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  sourceName))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  sourceName))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME,  sourceName))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
659	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes  >  extraFields.size())  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
660	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes.size()  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes.size()  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  externalAttributes.size()  >  extraFields.size())  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
661	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  externalAttributes.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  externalAttributes.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  externalAttributes.contains(method))  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
662	[BUG]  [BUGGY]  if(extraFields!=  null  ||  externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  ||  externalAttributes.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  externalAttributes.size()  ==  0)  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
663	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  internalAttributes.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  internalAttributes.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  internalAttributes.contains(method))  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
664	[BUG]  [BUGGY]  if(externalAttributes.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(externalAttributes.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes.size()  ==  0)  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
665	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  new  LinkedHashMap());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  new  LinkedHashMap());	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
666	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
667	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.CLASS)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.CLASS)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.CLASS)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
668	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  method  ==  null)  {	  if(method    <    0    ||    extra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
669	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
670	[BUG]  [BUGGY]  if(method  <  0  ||  extra.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
671	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
672	[BUG]  [BUGGY]  this.internalAttributes.set(method,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.set(method,  extra);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.set(method,  extra);	  this.internalAttributes.put(extra,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
673	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  size)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >  size)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  size)  {	  if(method    <    0    ||    extraFields.size()    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
674	[BUG]  [BUGGY]  this.extraFields.put(name,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(name,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(name,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
675	[BUG]  [BUGGY]  this.extraFields.put(sourceName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(sourceName,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(sourceName,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
676	[BUG]  [BUGGY]  this.extraFields.set(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.set(method,  entryName);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.set(method,  entryName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
677	[BUG]  [BUGGY]  if(method  <  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
678	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT.setMethod(method))  {	  if(method    <    0    ||    method    >    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
679	[BUG]  [BUGGY]  Locale.getDefault().setAccessible(true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  Locale.getDefault().setAccessible(true);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setAccessible(true);	  Locale.getDefault().setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
680	[BUG]  [BUGGY]  if(method  <  0  ||  methods.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  methods.size()  >  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  methods.size()  >  method.length)  {	  if(method    <    0    ||    extraFields.size()    >    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
681	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.size)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.size)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  outerAttributes.size)  {	  if(method    <    =    0    ||    method    >    outerAttributes.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
682	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_MASK  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_MASK  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_MASK  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
683	[BUG]  [BUGGY]  if(method  <  SHORT_MASK  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  SHORT_MASK  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  SHORT_MASK  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
684	[BUG]  [BUGGY]  if(method  <  SHORT_MASK  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  SHORT_MASK  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  SHORT_MASK  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
685	[BUG]  [BUGGY]  if(method  <  ZIP_SHIFT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  ZIP_SHIFT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  ZIP_SHIFT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
686	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
687	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.MIN_VALUE  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.MIN_VALUE  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.MIN_VALUE  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.UNSPECIFIED)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	107	None	replace
688	[BUG]  [BUGGY]  if(method  <  SHORT_MASK  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  SHORT_MASK  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  SHORT_MASK  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >>    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
689	[BUG]  [BUGGY]  this.extraFields.put(method,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(method,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(method,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
690	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(entryName,  new  LinkedHashMap());	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
691	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  method  >  PLATFORM_FAT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  method  >  PLATFORM_FAT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_UNIX  ||  method  >  PLATFORM_FAT)  {	  if(method    <    0    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
692	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size  <  0  ||  method  >  extraFields.size())  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
693	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.contains(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.contains(method))  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
694	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.BASELINE_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.BASELINE_COMPRESSION)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.BASELINE_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
695	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.UNPREFIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.UNPREFIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.UNPREFIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
696	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.TRY_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.TRY_COMPRESSION)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.TRY_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
697	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.SPACE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.SPACE)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION  ||  method  >  ZipArchiveEntry.SPACE)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_COMPRESSION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
698	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields  ==  null  ||  method  >  extraFields.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields  ==  null  ||  method  >  extraFields.length)  {	  if(extraFields    ==    null    ||    method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
699	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
700	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraAttributes.size()  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraAttributes.size()  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraAttributes.size()  <  0  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
701	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()  >=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >=  0)  {	  if(method    <    0    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
702	[BUG]  [BUGGY]  this.internalAttributes.put(method,  extract);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  extract);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  extract);	  this.internalAttributes.put(extra,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
703	[BUG]  [BUGGY]  if(method  <  1  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
704	[BUG]  [BUGGY]  if(extraFields!=  null  &&  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields!=  null  &&  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  &&  extraFields.size()  ==  0)  {	  if(extraFields    >=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
705	[BUG]  [BUGGY]  if(method  >=  PLATFORM_UNIX  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  PLATFORM_UNIX  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  PLATFORM_UNIX  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {	  if(extraFields    >=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
706	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_MASK  ||  method  >  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
707	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method!=  null)  {	  if(method    <    0    ||    extraFields!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
708	[BUG]  [BUGGY]  if(extra  <  =  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extra  <  =  method.length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  =  method.length)  {	  if(method    <    0    ||    extra    <    =    method.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
709	[BUG]  [BUGGY]  if(method  <  1  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  super.setMethod(method))  {	  if(method    <    =    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
710	[BUG]  [BUGGY]  if(method  <  1  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
711	[BUG]  [BUGGY]  if(method  >=  ZipArchiveEntry.class  ||  method  <  0  ||  method  >=  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  ZipArchiveEntry.class  ||  method  <  0  ||  method  >=  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  ZipArchiveEntry.class  ||  method  <  0  ||  method  >=  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
712	[BUG]  [BUGGY]  if(method  >=  ZipArchiveEntry.class  ||  method  <  0  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  ZipArchiveEntry.class  ||  method  <  0  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  ZipArchiveEntry.class  ||  method  <  0  ||  method  >  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
713	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false)||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
714	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  this.internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  this.internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false)||  this.internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
715	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  this.internalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)||  this.internalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false)||  this.internalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method,    false))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
716	[BUG]  [BUGGY]  super.setInternalAttributes(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setInternalAttributes(internalAttributes);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setInternalAttributes(internalAttributes);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
717	[BUG]  [BUGGY]  super.setAccessible(true);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  super.setAccessible(true);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setAccessible(true);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
718	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.size()  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.size()  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  outerAttributes.size()  +  1)  {	  if(method    <    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
719	[BUG]  [BUGGY]  if(method  <  0  ||  extra  ==  null  ||  extra.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  ==  null  ||  extra.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  ==  null  ||  extra.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
720	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes.setMethod(method))  {	  if(method    <    0    ||    extra.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
721	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
722	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  -  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_MASK  -  1)  {	  if(method    <    0    ||    method    >    maxSize    -    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
723	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  extraFields  <  0  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields  <  0  ||  method  >  extraFields.size())  {	  if(extraFields!=    null    ||    method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
724	[BUG]  [BUGGY]  if(method  <  1  ||  method!=  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  method!=  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  method!=  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method!=    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
725	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  outerAttributes.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  outerAttributes.size())  {	  if(method    <    =    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
726	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.get(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.get(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  outerAttributes.get(method))  {	  if(method    <    =    0    ||    method    >    outerAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
727	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    ExtraFieldData.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
728	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  13)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  13)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  13)  {	  if(method    <    0    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
729	[BUG]  [BUGGY]  if(extraFields.size()  <  2  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  2  ||  method  >  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  2  ||  method  >  extraFields.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
730	[BUG]  [BUGGY]  if(extraFields.size()  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  >  method.size())  {	  if(extraFields.size()    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
731	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  ==  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  ==  extraFields.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  ==  extraFields.size())  {	  if(method    <    =    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
732	[BUG]  [BUGGY]  if(method  >=  ZipArchiveEntry.class  ||  method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >=  ZipArchiveEntry.class  ||  method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  ZipArchiveEntry.class  ||  method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
733	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
734	[BUG]  [BUGGY]  if(method  <  0  ||  internalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  internalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  internalAttributes  ==  null  ||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
735	[BUG]  [BUGGY]  if(method  <  0  ||  extra.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
736	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
737	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  Zip());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  Zip());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  Zip());	  this.internalAttributes.put(method,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
738	[BUG]  [BUGGY]  this.internalAttributes.put(method,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  method  +  1);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  method  +  1);	  this.internalAttributes.put(method,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
739	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
740	[BUG]  [BUGGY]  if(extraFields  <  0  ||  methods  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  methods  >  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  methods  >  method.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
741	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method  <  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method  <  method.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method  <  method.size())  {	  if(extraFields    <    0    ||    method    >    method.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
742	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  getExtraFields().length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  <  getExtraFields().length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  getExtraFields().length)  {	  if(method    <    0    ||    method    >=    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
743	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  getExtraFields())  {  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  <  getExtraFields())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  getExtraFields())  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
744	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  <  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  null)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
745	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  =  length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  <  =  length)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  =  length)  {	  if(method    <    0    ||    extra    <    length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
746	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  extraFields.size()  ==  0)  {	  if(extraFields.size()    ==    0    ||    method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
747	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SPACE_METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SPACE_METHOD_NAME)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SPACE_METHOD_NAME)  {	  if(method    <    0    ||    method    >    MAX_METHOD_NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
748	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method!=  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  <  0  ||  method!=  null  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method!=  null  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields!=    null    ||    extraFields.size()    >    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
749	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SPACE_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SPACE_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SPACE_MASK)  {	  if(method    <    0    ||    method    >    SPACE_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
750	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  SPACE_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  SPACE_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  SPACE_SHIFT)  {	  if(method    <    0    ||    method    >    SPACE_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
751	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.setMethod(method,  gpb);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method,  gpb);	  this.internalAttributes.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
752	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  true)||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  true)||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  true)||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    super.setMethod(method,    true))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
753	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)&&  this.internalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false)&&  this.internalAttributes!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false)&&  this.internalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method,    true))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
754	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_SHIFT  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_SHIFT  ||  super.setMethod(method))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  SHORT_SHIFT  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
755	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
756	[BUG]  [BUGGY]  if(method  <  0  ||  extra.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method)||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
757	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields!=  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields!=  null.size())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields!=  null.size())  {	  if(method    <    0    ||    extraFields!=    null.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
758	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZIPArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZIPArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_FAT  ||  method  >  ZIPArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    PLATFORM_UNIX)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
759	[BUG]  [BUGGY]  if(extraFields.size()!=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()!=  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()!=  0)  {	  if(extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
760	[BUG]  [BUGGY]  if(method  <  0  ||  rawName  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  rawName  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  rawName  ==  null)  {	  if(method    <    0    ||    extra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
761	[BUG]  [BUGGY]  if(method  <  0  ||  rawName!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  rawName!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  rawName!=  null)  {	  if(method    <    0    ||    extra!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
762	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method);	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
763	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES)||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
764	[BUG]  [BUGGY]  if(method  <  0  ||  extra  >  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extra  >  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  >  null)  {	  if(method    <    0    ||    extra    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
765	[BUG]  [BUGGY]  if(extraFields.size()  <  0  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(extraFields.size()  <  0  ||  extraFields.size()  ==  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  0  ||  extraFields.size()  ==  1)  {	  if(method    <    0    ||    extraFields.size()    ==    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
766	[BUG]  [BUGGY]  if(method  ==  PLATFORM_UNIX  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  ==  PLATFORM_UNIX  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  PLATFORM_UNIX  ||  extraFields!=  null  ||  extraFields.size()  ==  0)  {	  if(extraFields!=    null    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
767	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
768	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.size()  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.size()  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  externalAttributes.size()  +  1)  {	  if(method    <    0    ||    method    >    externalAttributes.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
769	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  MAX_METHOD_NON_NULL)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  MAX_METHOD_NON_NULL)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  MAX_METHOD_NON_NULL)  {	  if(method    <    =    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
770	[BUG]  [BUGGY]  if(method  <  0  ||  this.internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  this.internalAttributes  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  this.internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method)&&    this.internalAttributes    ==    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	123	None	replace
771	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,String>());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,String>());  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  String,String>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
772	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null)||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null)||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
773	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  this.internal))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  super.setMethod(method,  this.internal))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  this.internal))  {	  if(method    <    0    ||    super.setMethod(method,    null))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
774	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
775	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.maxSize,  this.internalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  this.maxSize,  this.internalAttributes)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.maxSize,  this.internalAttributes)  {	  if(method    <    0    ||    method    >    this.maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
776	[BUG]  [BUGGY]  if(method  <  SHORT_MASK  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  SHORT_MASK  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  SHORT_MASK  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    ==    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
777	[BUG]  [BUGGY]  if(method  <  1  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    ==    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
778	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.length  >=  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.length  >=  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.length  >=  method)  {	  if(method    <    0    ||    extraFields.length    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
779	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.length!=  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.length!=  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.length!=  method)  {	  if(method    <    0    ||    extraFields.length    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
780	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(4);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>(4);	  this.internalAttributes    =    new    LinkedHashMap    <    String,Object>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
781	[BUG]  [BUGGY]  gpb.setInternalAttributes(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  gpb.setInternalAttributes(extra);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setInternalAttributes(extra);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
782	[BUG]  [BUGGY]  if(method  <  ZIP  ||  method  >  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  ZIP  ||  method  >  ZipArchiveEntry.ZIP)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  ZIP  ||  method  >  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >=    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
783	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK  +  1)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_MASK  +  1)  {	  if(method    <    0    ||    method    >    maxSize    +    1)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
784	[BUG]  [BUGGY]  this.internalAttributes.put(name,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(name,  method);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(name,  method);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
785	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  this);  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  this);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
786	[BUG]  [BUGGY]  if(method  <  SHORT_SHIFT  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  SHORT_SHIFT  ||  method  >  SHORT_MASK)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  SHORT_SHIFT  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >=    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
787	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()!=  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  extraFields.size()!=  method)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()!=  method)  {	  if(method    <    0    ||    extraFields.size()    >    method)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
788	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  12)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  12)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  12)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
789	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  10)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  10)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  10)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class    ||    method    >    16)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
790	[BUG]  [BUGGY]  if(method  <  SHORT_SHIFT  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  SHORT_SHIFT  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  SHORT_SHIFT  ||  method  >  SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	127	None	replace
791	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxNonExtraFields  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
792	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields  ||  method  >  SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxNonExtraFields  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    maxNonExtraFields)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
793	[BUG]  [BUGGY]  if(method  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >  0)  {	  if(method    >=    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
794	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT    ||    method    >    SHORT_MASK)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
795	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >  MAX_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_SHIFT)  {	  if(method    <    0    ||    method    >=    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
796	[BUG]  [BUGGY]  if(method  <  1  ||  method  >=  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  method  >=  maxSize)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  method  >=  maxSize)  {	  if(method    <    0    ||    method    >=    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
797	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  method  >=  16)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  16)  {	  if(method    <    0    ||    method    >=    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
798	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  =  0  ||  extraFields.size()  >  0)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields.size()  >  0)  {	  if(method    <    =    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
799	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes(externalAttributes))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes(externalAttributes))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes(externalAttributes))  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
800	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes())  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes!=  super.setMethod(method)||  super.setExternalAttributes())  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
801	[BUG]  [BUGGY]  if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setExternalAttributes(externalAttributes))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setExternalAttributes(externalAttributes))  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  externalAttributes  >=  super.setMethod(method)||  super.setExternalAttributes(externalAttributes))  {	  if(method    <    0    ||    super.setMethod(method)||    externalAttributes!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
802	[BUG]  [BUGGY]  if(method  <  1  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  if(method  <  1  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  1  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    =    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
803	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  String(rawName));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {      [BUGGY]  this.internalAttributes.put(method,  new  String(rawName));  [BUGGY]      throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  String(rawName));	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
