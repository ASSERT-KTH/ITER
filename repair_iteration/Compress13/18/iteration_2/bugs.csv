bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >  extraFields.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  method  >  extraFields.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
2	[BUG]  [BUGGY]  if(extraFields  <  0  ||  method  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields  <  0  ||  method  >  method.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  <  0  ||  method  >  method.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
3	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >  extraFields.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  method  >  extraFields.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
4	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  method.length)  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
5	[BUG]  [BUGGY]  if(extraFields.size()  <  0  ||  method  >  method.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields.size()  <  0  ||  method  >  method.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  <  0  ||  method  >  method.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
6	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields.size()  >  method)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  method)  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
7	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  externalAttributes.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
8	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
9	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
10	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
11	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.METHOD_NAME)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
12	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
13	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
14	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
15	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
16	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
17	[BUG]  [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >>  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >>  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
18	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  SHORT_MASK)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
19	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  this.maxSize)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.maxSize)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
20	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  maxSize)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  maxSize)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
21	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxSize  +  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  maxSize  +  1)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxSize  +  1)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
22	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  size)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  size)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  size)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
23	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NAME)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NAME)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
24	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
25	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
26	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
27	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
28	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT  ||  method  >  SHORT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
29	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
30	[BUG]  [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields!=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
31	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
32	[BUG]  [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
33	[BUG]  [BUGGY]  if(extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
34	[BUG]  [BUGGY]  if(externalAttributes  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(externalAttributes  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(externalAttributes  <  0  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
35	[BUG]  [BUGGY]  if(extraFields  >=  null  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields  >=  null  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  >=  null  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
36	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  ==  ZipArchiveEntry.class)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
37	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  ZipArchiveEntry.class)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
38	[BUG]  [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method!=  ZipArchiveEntry.class)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method!=  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
39	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
40	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
41	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
42	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
43	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
44	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  ==  SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
45	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT  ||  method  >  PLATFORM_UNIX)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
46	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT  ||  super.setMethod(method))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT  ||  super.setMethod(method))  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
47	[BUG]  [BUGGY]  if(method  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  ==  0)  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
48	[BUG]  [BUGGY]  if(method  <  =  0  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  super.setMethod(method))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  super.setMethod(method))  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
49	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  extra.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  extra.length)  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
50	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  outerAttributes.length)  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
51	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  extraFields.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  extraFields.length)  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
52	[BUG]  [BUGGY]  if(method  >=  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  >=  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  >=  0)  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
53	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes.put(entryName,  method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(entryName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
54	[BUG]  [BUGGY]  gpb.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  gpb.setMethod(method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	gpb.setMethod(method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
55	[BUG]  [BUGGY]  this.internalAttributes.put(method,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes.put(method,  method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
56	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method));  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
57	[BUG]  [BUGGY]  this.internalAttributes.put(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes.put(rawName,  method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(rawName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
58	[BUG]  [BUGGY]  super.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  super.setMethod(method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	super.setMethod(method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
59	[BUG]  [BUGGY]  this.internalAttributes.put(extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes.put(extra,  method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(extra,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
60	[BUG]  [BUGGY]  if(extra  <  0  ||  method  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extra  <  0  ||  method  >  method.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  >  method.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
61	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  extra.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  extra.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
62	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  ==  extra.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  extra.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
63	[BUG]  [BUGGY]  if(method  <  0  ||  extra.length  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra.length  >  method.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.length  >  method.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
64	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  method  >  extraFields.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  method  >  extraFields.length)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
65	[BUG]  [BUGGY]  if(extraFields.length  <  0  ||  method  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields.length  <  0  ||  method  >  method)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields.length  <  0  ||  method  >  method)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
66	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  extraFields.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  extraFields.length)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
67	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  externalAttributes.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  externalAttributes.length)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
68	[BUG]  [BUGGY]  if(method  <  0  ||  method  ==  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  ==  extraFields.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  ==  extraFields.length)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
69	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.length  >  method)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields.length  >  method)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.length  >  method)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
70	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method  +  1))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method  +  1))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
71	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method,  null))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  null))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
72	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method,  false))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  false))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
73	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
74	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method,  true))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method,  true))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method,  true))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
75	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_COMPRESSION)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
76	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields!=  null.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields!=  null.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields!=  null.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
77	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields!=  null  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
78	[BUG]  [BUGGY]  if(extra  <  0  ||  method  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extra  <  0  ||  method  >  extra.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extra  <  0  ||  method  >  extra.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
79	[BUG]  [BUGGY]  if(method  <  0  ||  extra  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  ==  null)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
80	[BUG]  [BUGGY]  if(method  <  0  ||  extra!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra!=  null)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
81	[BUG]  [BUGGY]  if(method  <  0  ||  extra  >  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra  >  method.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  >  method.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
82	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra  <  length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
83	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  ==  null)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
84	[BUG]  [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes  =  new  LinkedHashMap  <  String,Object>();  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes  =  new  LinkedHashMap  <  String,Object>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
85	[BUG]  [BUGGY]  Locale.getDefault().setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  Locale.getDefault().setMethod(method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	Locale.getDefault().setMethod(method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
86	[BUG]  [BUGGY]  this.internalAttributes.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes.setMethod(method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.setMethod(method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
87	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  method  >  extraFields.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  method  >  extraFields.length)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
88	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  outerAttributes.length)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
89	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields!=  null)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
90	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxSize  -  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  maxSize  -  1)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxSize  -  1)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
91	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  maxSize)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  maxSize)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
92	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  externalAttributes  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  externalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
93	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  externalAttributes!=  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  externalAttributes!=  null)  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
94	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method)||  internalAttributes  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)||  internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
95	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_MESSAGE)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
96	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  outerAttributes.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  outerAttributes.size())  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
97	[BUG]  [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields!=  null  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
98	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(extraFields  ==  null  ||  method  <  0  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
99	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  1)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  1)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  ==  1)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
100	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  16)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  16)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
101	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MISSING_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  MISSING_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MISSING_SHIFT)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
102	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
103	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  ZipArchiveEntry.ZIP)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
104	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.extraFields.length)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
105	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  maxNonExtraFields)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxNonExtraFields)  {	  if(method    <    0    ||    method    >    extraFields.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
106	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SCRIPT_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
107	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP  ||  method  >  ZipArchiveEntry.UNSPECIFIED)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
108	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SPACE_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  SPACE_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SPACE_SHIFT)  {	  if(method    <    0    ||    method    >    SHORT_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
109	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_MASK)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.ZIP_SHIFT)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
110	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  SHORT_SHIFT)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
111	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  16)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  16)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  16)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
112	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class  ||  method  >  ExtraFieldData.class)  {	  if(method    <    0    ||    method    >    ZipArchiveEntry.class)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
113	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra  <  method.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  method.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
114	[BUG]  [BUGGY]  if(method  <  0  ||  extra  <  =  method.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra  <  =  method.length)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra  <  =  method.length)  {	  if(method    <    0    ||    method    >    extra.length)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
115	[BUG]  [BUGGY]  this.extraFields.put(entryName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.extraFields.put(entryName,  method);  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.extraFields.put(entryName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
116	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap());  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
117	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  MAX_METHOD_NON_NULL)  {	  if(method    <    0    ||    method    >    maxSize)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
118	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  >  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields.size()  >  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  >  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
119	[BUG]  [BUGGY]  if(method  <  =  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  extraFields.size()  ==  0)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  extraFields.size()  ==  0)  {	  if(method    <    0    ||    extraFields.size()    ==    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
120	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  super.setMethod(method))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  super.setMethod(method))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
121	[BUG]  [BUGGY]  if(method  <  0  ||  extra.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extra.setMethod(method))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extra.setMethod(method))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
122	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.contains(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  extraFields.contains(method))  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.contains(method))  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
123	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes  ==  null)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method)&&  this.internalAttributes  ==  null)  {	  if(method    <    0    ||    super.setMethod(method))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
124	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  this.extraFields.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  this.extraFields.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
125	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >  outerAttributes.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  outerAttributes.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
126	[BUG]  [BUGGY]  if(method  <  0  ||  method  >=  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  0  ||  method  >=  extraFields.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >=  extraFields.size())  {	  if(method    <    0    ||    method    >    extraFields.size())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
127	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  SHORT_SHIFT)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  SHORT_SHIFT)  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
128	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  extraFields.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  extraFields.size())  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
129	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  internalAttributes.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  internalAttributes.size())  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  internalAttributes.size())  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
130	[BUG]  [BUGGY]  if(method  <  =  0  ||  method  >  internalAttributes)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {    [BUGGY]  if(method  <  =  0  ||  method  >  internalAttributes)  {  [BUGGY]    throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0  ||  method  >  internalAttributes)  {	  if(method    <    =    0)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
