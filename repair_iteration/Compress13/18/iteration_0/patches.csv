bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(method  <  =  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  =  0)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  =  0)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
2	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.SHORT_SHIFT)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
3	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP)  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
4	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.class)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.class)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
5	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  ZipArchiveEntry.ZIP_SHIFT)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
6	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  extra.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  extra.length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  extra.length)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
7	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]    [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	  	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
8	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  extraFields.length)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  extraFields.length)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  extraFields.length)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
9	[BUG]  [BUGGY]  if(method  <  0  ||  super.setMethod(method))  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  super.setMethod(method))  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  super.setMethod(method))  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
10	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  extraFields.size())  {  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  extraFields.size())  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  extraFields.size())  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
11	[BUG]  [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  0)  {  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  extraFields.size()  ==  0)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  extraFields.size()  ==  0)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
12	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT)  {  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  SHORT_SHIFT)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  SHORT_SHIFT)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
13	[BUG]  [BUGGY]  if(method  <  0  ||  method  >  maxSize)  {  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  [BUGGY]  if(method  <  0  ||  method  >  maxSize)  {  [BUGGY]  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  this.method  =  method;  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	if(method  <  0  ||  method  >  maxSize)  {	if  (method  <  0)  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
