bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (fields[i] instanceof UnparseableExtraFieldData) { [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { [BUGGY] if (fields[i] instanceof UnparseableExtraFieldData) { [BUGGY] unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	294	294	2	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { [BUGGY] [BUGGY] if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	294	294	2	add	
3	[BUG] [BUGGY] extraFields.put(fields[i].getHeaderId(), fields[i]); [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { [BUGGY] extraFields.put(fields[i].getHeaderId(), fields[i]); [BUGGY] } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { [BUGGY] [BUGGY] extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	add	
5	[BUG] [BUGGY] super(name); [FE] AssertionFailedError [CONTEXT] public ZipArchiveEntry(String name) { [BUGGY] super(name); [BUGGY] setName(name); } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] String)  String name [VARIABLES] byte[] rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	97	97	2	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipArchiveEntry(String name) { [BUGGY] [BUGGY] super(name); setName(name); } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] String)  String name [VARIABLES] byte[] rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	97	97	2	add	
7	[BUG] [BUGGY] private int method = -1; [FE] AssertionFailedError [CONTEXT] [BUGGY] private int method = -1; [BUGGY]  [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	69	69	2	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private int method = -1; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	69	69	2	add	
9	[BUG] [BUGGY] private long size = SIZE_UNKNOWN; [FE] AssertionFailedError [CONTEXT] [BUGGY] private long size = SIZE_UNKNOWN; [BUGGY]  [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	77	77	2	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private long size = SIZE_UNKNOWN; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	77	77	2	add	
11	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private long size = SIZE_UNKNOWN; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	79	79	2	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private long size = SIZE_UNKNOWN; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	79	79	2	add	
13	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int internalAttributes = 0; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	80	80	2	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int internalAttributes = 0; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	80	80	2	add	
15	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int internalAttributes = 0; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	81	81	2	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int internalAttributes = 0; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	81	81	2	add	
17	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int platform = PLATFORM_FAT; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	82	82	2	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int platform = PLATFORM_FAT; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	82	82	2	add	
19	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private long externalAttributes = 0; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	83	83	2	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private long externalAttributes = 0; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	83	83	2	add	
21	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private LinkedHashMap<ZipShort, ZipExtraField> extraFields = null; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	84	84	2	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private LinkedHashMap<ZipShort, ZipExtraField> extraFields = null; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	84	84	2	add	
23	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private UnparseableExtraFieldData unparseableExtra = null; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	85	85	2	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private UnparseableExtraFieldData unparseableExtra = null; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	85	85	2	add	
25	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private String name = null; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	86	86	2	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private String name = null; [CLASS] ZipArchiveEntry  [VARIABLES] 	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	86	86	2	add	
27	[BUG] [BUGGY] setName(name); [FE] AssertionFailedError [CONTEXT] public ZipArchiveEntry(String name) { super(name); [BUGGY] setName(name); [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] String)  String name [VARIABLES] byte[] rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	98	98	2	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipArchiveEntry(String name) { super(name); [BUGGY] [BUGGY] setName(name); } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] String)  String name [VARIABLES] byte[] rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	98	98	2	add	
29	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public ZipArchiveEntry(String name) { super(name); setName(name); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] String)  String name [VARIABLES] byte[] rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	99	99	2	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipArchiveEntry(String name) { super(name); setName(name); [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] String)  String name [VARIABLES] byte[] rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	99	99	2	add	
31	[BUG] [BUGGY] this(""); [FE] AssertionFailedError [CONTEXT] protected ZipArchiveEntry() { [BUGGY] this(""); [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipArchiveEntry()  [VARIABLES] byte[] extra rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	145	145	2	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected ZipArchiveEntry() { [BUGGY] [BUGGY] this(""); } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipArchiveEntry()  [VARIABLES] byte[] extra rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	145	145	2	add	
33	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected ZipArchiveEntry() { this(""); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipArchiveEntry()  [VARIABLES] byte[] extra rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	146	146	2	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected ZipArchiveEntry() { this(""); [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] <init> [RETURN_TYPE] ZipArchiveEntry()  [VARIABLES] byte[] extra rawName boolean String name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	146	146	2	add	
35	[BUG] [BUGGY] if (method < 0) { [FE] AssertionFailedError [CONTEXT] public void setMethod(int method) { [BUGGY] if (method < 0) { [BUGGY] throw new IllegalArgumentException( "ZIP compression method can not be negative: " + method); } this.method = method; } [CLASS] ZipArchiveEntry [METHOD] setMethod [RETURN_TYPE] void  int method [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setMethod(int method) { [BUGGY] [BUGGY] if (method < 0) { throw new IllegalArgumentException( "ZIP compression method can not be negative: " + method); } this.method = method; } [CLASS] ZipArchiveEntry [METHOD] setMethod [RETURN_TYPE] void  int method [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	203	203	2	add	
37	[BUG] [BUGGY] this.method = method; [FE] AssertionFailedError [CONTEXT] public void setMethod(int method) { if (method < 0) { throw new IllegalArgumentException( "ZIP compression method can not be negative: " + method); } [BUGGY] this.method = method; [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setMethod [RETURN_TYPE] void  int method [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setMethod(int method) { if (method < 0) { throw new IllegalArgumentException( "ZIP compression method can not be negative: " + method); } [BUGGY] [BUGGY] this.method = method; } [CLASS] ZipArchiveEntry [METHOD] setMethod [RETURN_TYPE] void  int method [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	add	
39	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void setMethod(int method) { if (method < 0) { throw new IllegalArgumentException( "ZIP compression method can not be negative: " + method); } this.method = method; [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setMethod [RETURN_TYPE] void  int method [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setMethod(int method) { if (method < 0) { throw new IllegalArgumentException( "ZIP compression method can not be negative: " + method); } this.method = method; [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setMethod [RETURN_TYPE] void  int method [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method platform long externalAttributes size LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	208	208	2	add	
41	[BUG] [BUGGY] this.platform = platform; [FE] AssertionFailedError [CONTEXT] protected void setPlatform(int platform) { [BUGGY] this.platform = platform; [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setPlatform [RETURN_TYPE] void  int platform [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	284	284	2	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setPlatform(int platform) { [BUGGY] [BUGGY] this.platform = platform; } [CLASS] ZipArchiveEntry [METHOD] setPlatform [RETURN_TYPE] void  int platform [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	284	284	2	add	
43	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected void setPlatform(int platform) { this.platform = platform; [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setPlatform [RETURN_TYPE] void  int platform [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	285	285	2	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setPlatform(int platform) { this.platform = platform; [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setPlatform [RETURN_TYPE] void  int platform [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	285	285	2	add	
45	[BUG] [BUGGY] extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { [BUGGY] extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); [BUGGY] for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { [BUGGY] [BUGGY] extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	292	292	2	add	
47	[BUG] [BUGGY] for (int i = 0; i < fields.length; i++) { [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); [BUGGY] for (int i = 0; i < fields.length; i++) { [BUGGY] if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); [BUGGY] [BUGGY] for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	293	293	2	add	
49	[BUG] [BUGGY] setExtra(); [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } [BUGGY] setExtra(); [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	300	300	2	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } [BUGGY] [BUGGY] setExtra(); } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	300	300	2	add	
51	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtraFields(ZipExtraField[] fields) { extraFields = new LinkedHashMap<ZipShort, ZipExtraField>(); for (int i = 0; i < fields.length; i++) { if (fields[i] instanceof UnparseableExtraFieldData) { unparseableExtra = (UnparseableExtraFieldData) fields[i]; } else { extraFields.put(fields[i].getHeaderId(), fields[i]); } } setExtra(); [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setExtraFields [RETURN_TYPE] void  ZipExtraField[] fields [VARIABLES] byte[] extra rawName boolean ZipExtraField[] fields String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	add	
53	[BUG] [BUGGY] if (extraFields == null) { [FE] AssertionFailedError [CONTEXT] public ZipExtraField[] getExtraFields(boolean includeUnparseable) { [BUGGY] if (extraFields == null) { [BUGGY] return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } List<ZipExtraField> result = new ArrayList<ZipExtraField>(extraFields.values()); if (includeUnparseable && unparseableExtra != null) { result.add(unparseableExtra); } return result.toArray(new ZipExtraField[0]); [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipExtraField[] getExtraFields(boolean includeUnparseable) { [BUGGY] [BUGGY] if (extraFields == null) { return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } List<ZipExtraField> result = new ArrayList<ZipExtraField>(extraFields.values()); if (includeUnparseable && unparseableExtra != null) { result.add(unparseableExtra); } return result.toArray(new ZipExtraField[0]); [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	321	321	2	add	
55	[BUG] [BUGGY] List<ZipExtraField> result = new ArrayList<ZipExtraField>(extraFields.values()); [FE] AssertionFailedError [CONTEXT] public ZipExtraField[] getExtraFields(boolean includeUnparseable) { if (extraFields == null) { return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } [BUGGY] List<ZipExtraField> result =   new ArrayList<ZipExtraField>(extraFields.values()); [BUGGY] new ArrayList<ZipExtraField>(extraFields.values()); if (includeUnparseable && unparseableExtra != null) { result.add(unparseableExtra); } return result.toArray(new ZipExtraField[0]); } [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipExtraField[] getExtraFields(boolean includeUnparseable) { if (extraFields == null) { return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } [BUGGY] [BUGGY] List<ZipExtraField> result =   new ArrayList<ZipExtraField>(extraFields.values()); new ArrayList<ZipExtraField>(extraFields.values()); if (includeUnparseable && unparseableExtra != null) { result.add(unparseableExtra); } return result.toArray(new ZipExtraField[0]); } [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	add	
57	[BUG] [BUGGY] if (includeUnparseable && unparseableExtra != null) { [FE] AssertionFailedError [CONTEXT] public ZipExtraField[] getExtraFields(boolean includeUnparseable) { if (extraFields == null) { return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } List<ZipExtraField> result = new ArrayList<ZipExtraField>(extraFields.values()); [BUGGY] if (includeUnparseable && unparseableExtra != null) { [BUGGY] result.add(unparseableExtra); } return result.toArray(new ZipExtraField[0]); } [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipExtraField[] getExtraFields(boolean includeUnparseable) { if (extraFields == null) { return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } List<ZipExtraField> result = new ArrayList<ZipExtraField>(extraFields.values()); [BUGGY] [BUGGY] if (includeUnparseable && unparseableExtra != null) { result.add(unparseableExtra); } return result.toArray(new ZipExtraField[0]); } [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	328	328	2	add	
59	[BUG] [BUGGY] return result.toArray(new ZipExtraField[0]); [FE] AssertionFailedError [CONTEXT] if (extraFields == null) { return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } List<ZipExtraField> result = new ArrayList<ZipExtraField>(extraFields.values()); if (includeUnparseable && unparseableExtra != null) { result.add(unparseableExtra); } [BUGGY] return result.toArray(new ZipExtraField[0]); [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (extraFields == null) { return !includeUnparseable || unparseableExtra == null ? new ZipExtraField[0] : new ZipExtraField[] { unparseableExtra }; } List<ZipExtraField> result = new ArrayList<ZipExtraField>(extraFields.values()); if (includeUnparseable && unparseableExtra != null) { result.add(unparseableExtra); } [BUGGY] [BUGGY] return result.toArray(new ZipExtraField[0]); } [CLASS] ZipArchiveEntry [METHOD] getExtraFields [RETURN_TYPE] ZipExtraField[]  boolean includeUnparseable [VARIABLES] byte[] extra rawName boolean includeUnparseable List result String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	add	
61	[BUG] [BUGGY] if (extraFields != null) { [FE] AssertionFailedError [CONTEXT] public ZipExtraField getExtraField(ZipShort type) { [BUGGY] if (extraFields != null) { [BUGGY] return extraFields.get(type); } return null; } [CLASS] ZipArchiveEntry [METHOD] getExtraField [RETURN_TYPE] ZipExtraField  ZipShort type [VARIABLES] byte[] extra rawName ZipShort type boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	409	409	2	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipExtraField getExtraField(ZipShort type) { [BUGGY] [BUGGY] if (extraFields != null) { return extraFields.get(type); } return null; } [CLASS] ZipArchiveEntry [METHOD] getExtraField [RETURN_TYPE] ZipExtraField  ZipShort type [VARIABLES] byte[] extra rawName ZipShort type boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	409	409	2	add	
63	[BUG] [BUGGY] return extraFields.get(type); [FE] AssertionFailedError [CONTEXT] public ZipExtraField getExtraField(ZipShort type) { if (extraFields != null) { [BUGGY] return extraFields.get(type); [BUGGY] } return null; } [CLASS] ZipArchiveEntry [METHOD] getExtraField [RETURN_TYPE] ZipExtraField  ZipShort type [VARIABLES] byte[] extra rawName ZipShort type boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	410	410	2	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public ZipExtraField getExtraField(ZipShort type) { if (extraFields != null) { [BUGGY] [BUGGY] return extraFields.get(type); } return null; } [CLASS] ZipArchiveEntry [METHOD] getExtraField [RETURN_TYPE] ZipExtraField  ZipShort type [VARIABLES] byte[] extra rawName ZipShort type boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	410	410	2	add	
65	[BUG] [BUGGY] ZipExtraField[] local = ExtraFieldUtils.parse(extra, true,     ExtraFieldUtils.UnparseableExtraField.READ); [FE] AssertionFailedError [CONTEXT] public void setExtra(byte[] extra) throws RuntimeException { try { [BUGGY] ZipExtraField[] local =    ExtraFieldUtils.parse(extra, true,                   ExtraFieldUtils.UnparseableExtraField.READ); [BUGGY] ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); mergeExtraFields(local, true); } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); } } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtra(byte[] extra) throws RuntimeException { try { [BUGGY] [BUGGY] ZipExtraField[] local =    ExtraFieldUtils.parse(extra, true,                   ExtraFieldUtils.UnparseableExtraField.READ); ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); mergeExtraFields(local, true); } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); } } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	add	
67	[BUG] [BUGGY] mergeExtraFields(local, true); [FE] AssertionFailedError [CONTEXT] public void setExtra(byte[] extra) throws RuntimeException { try { ZipExtraField[] local = ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); [BUGGY] mergeExtraFields(local, true); [BUGGY] } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); } } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtra(byte[] extra) throws RuntimeException { try { ZipExtraField[] local = ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); [BUGGY] [BUGGY] mergeExtraFields(local, true); } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); } } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	440	440	2	add	
69	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void setExtra(byte[] extra) throws RuntimeException { try { ZipExtraField[] local = ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); mergeExtraFields(local, true); } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); [BUGGY] } [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	445	445	2	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setExtra(byte[] extra) throws RuntimeException { try { ZipExtraField[] local = ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); mergeExtraFields(local, true); } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); [BUGGY] [BUGGY] } } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	445	445	2	add	
71	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] try { ZipExtraField[] local = ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); mergeExtraFields(local, true); } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); } [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	446	446	2	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] try { ZipExtraField[] local = ExtraFieldUtils.parse(extra, true, ExtraFieldUtils.UnparseableExtraField.READ); mergeExtraFields(local, true); } catch (ZipException e) {  throw new RuntimeException("Error parsing extra fields for entry: " + getName() + " - " + e.getMessage(), e); } [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  byte[] extra [VARIABLES] byte[] extra rawName boolean ZipExtraField[] local ZipException e String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	446	446	2	add	
73	[BUG] [BUGGY] super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(getExtraFields(true))); [FE] AssertionFailedError [CONTEXT] protected void setExtra() { [BUGGY] super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(getExtraFields(true))); [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	455	455	2	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setExtra() { [BUGGY] [BUGGY] super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(getExtraFields(true))); } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	455	455	2	add	
75	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected void setExtra() { super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(getExtraFields(true))); [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	456	456	2	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setExtra() { super.setExtra(ExtraFieldUtils.mergeLocalFileDataData(getExtraFields(true))); [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setExtra [RETURN_TYPE] void  [VARIABLES] byte[] extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	456	456	2	add	
77	[BUG] [BUGGY] return name == null ? super.getName() : name; [FE] AssertionFailedError [CONTEXT] public String getName() { [BUGGY] return name == null ? super.getName() : name; [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] getName [RETURN_TYPE] String  [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	495	495	2	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public String getName() { [BUGGY] [BUGGY] return name == null ? super.getName() : name; } [CLASS] ZipArchiveEntry [METHOD] getName [RETURN_TYPE] String  [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	495	495	2	add	
79	[BUG] [BUGGY] this.name = name; [FE] AssertionFailedError [CONTEXT] protected void setName(String name) { [BUGGY] this.name = name; [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	512	512	2	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setName(String name) { [BUGGY] [BUGGY] this.name = name; } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	512	512	2	add	
81	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected void setName(String name) { this.name = name; [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	513	513	2	replace	
82	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setName(String name) { this.name = name; [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	513	513	2	add	
83	[BUG] [BUGGY] if (size < 0) { [FE] AssertionFailedError [CONTEXT] public void setSize(long size) { [BUGGY] if (size < 0) { [BUGGY] throw new IllegalArgumentException("invalid entry size"); } this.size = size; } [CLASS] ZipArchiveEntry [METHOD] setSize [RETURN_TYPE] void  long size [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	532	532	2	replace	
84	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setSize(long size) { [BUGGY] [BUGGY] if (size < 0) { throw new IllegalArgumentException("invalid entry size"); } this.size = size; } [CLASS] ZipArchiveEntry [METHOD] setSize [RETURN_TYPE] void  long size [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	532	532	2	add	
85	[BUG] [BUGGY] this.size = size; [FE] AssertionFailedError [CONTEXT] public void setSize(long size) { if (size < 0) { throw new IllegalArgumentException("invalid entry size"); } [BUGGY] this.size = size; [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setSize [RETURN_TYPE] void  long size [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	535	535	2	replace	
86	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setSize(long size) { if (size < 0) { throw new IllegalArgumentException("invalid entry size"); } [BUGGY] [BUGGY] this.size = size; } [CLASS] ZipArchiveEntry [METHOD] setSize [RETURN_TYPE] void  long size [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	535	535	2	add	
87	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void setSize(long size) { if (size < 0) { throw new IllegalArgumentException("invalid entry size"); } this.size = size; [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setSize [RETURN_TYPE] void  long size [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	536	536	2	replace	
88	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setSize(long size) { if (size < 0) { throw new IllegalArgumentException("invalid entry size"); } this.size = size; [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setSize [RETURN_TYPE] void  long size [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	536	536	2	add	
89	[BUG] [BUGGY] setName(name); [FE] AssertionFailedError [CONTEXT] protected void setName(String name, byte[] rawName) { [BUGGY] setName(name); [BUGGY] this.rawName = rawName; } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name byte[] rawName [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	548	548	2	replace	
90	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setName(String name, byte[] rawName) { [BUGGY] [BUGGY] setName(name); this.rawName = rawName; } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name byte[] rawName [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	548	548	2	add	
91	[BUG] [BUGGY] this.rawName = rawName; [FE] AssertionFailedError [CONTEXT] protected void setName(String name, byte[] rawName) { setName(name); [BUGGY] this.rawName = rawName; [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name byte[] rawName [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	549	549	2	replace	
92	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setName(String name, byte[] rawName) { setName(name); [BUGGY] [BUGGY] this.rawName = rawName; } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name byte[] rawName [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	549	549	2	add	
93	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] protected void setName(String name, byte[] rawName) { setName(name); this.rawName = rawName; [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name byte[] rawName [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	550	550	2	replace	
94	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] protected void setName(String name, byte[] rawName) { setName(name); this.rawName = rawName; [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setName [RETURN_TYPE] void  String name byte[] rawName [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	550	550	2	add	
95	[BUG] [BUGGY] gpb = b; [FE] AssertionFailedError [CONTEXT] public void setGeneralPurposeBit(GeneralPurposeBit b) { [BUGGY] gpb = b; [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setGeneralPurposeBit [RETURN_TYPE] void  GeneralPurposeBit b [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit b gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	597	597	2	replace	
96	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setGeneralPurposeBit(GeneralPurposeBit b) { [BUGGY] [BUGGY] gpb = b; } [CLASS] ZipArchiveEntry [METHOD] setGeneralPurposeBit [RETURN_TYPE] void  GeneralPurposeBit b [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit b gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	597	597	2	add	
97	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void setGeneralPurposeBit(GeneralPurposeBit b) { gpb = b; [BUGGY] } [BUGGY]  [CLASS] ZipArchiveEntry [METHOD] setGeneralPurposeBit [RETURN_TYPE] void  GeneralPurposeBit b [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit b gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	598	598	2	replace	
98	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void setGeneralPurposeBit(GeneralPurposeBit b) { gpb = b; [BUGGY] [BUGGY] } [CLASS] ZipArchiveEntry [METHOD] setGeneralPurposeBit [RETURN_TYPE] void  GeneralPurposeBit b [VARIABLES] byte[] b extra rawName boolean String entryName name GeneralPurposeBit b gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	598	598	2	add	
99	[BUG] [BUGGY] if (extraFields == null) { [FE] AssertionFailedError [CONTEXT] throws ZipException { [BUGGY] if (extraFields == null) { [BUGGY] setExtraFields(f); } else { for (int i = 0; i < f.length; i++) { ZipExtraField existing; if (f[i] instanceof UnparseableExtraFieldData) { existing = unparseableExtra; } else { existing = getExtraField(f[i].getHeaderId()); } if (existing == null) { [CLASS] ZipArchiveEntry [METHOD] mergeExtraFields [RETURN_TYPE] void  ZipExtraField[] f boolean local [VARIABLES] byte[] b extra rawName ZipExtraField existing boolean local ZipExtraField[] f String entryName name GeneralPurposeBit b gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	610	610	2	replace	
100	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throws ZipException { [BUGGY] [BUGGY] if (extraFields == null) { setExtraFields(f); } else { for (int i = 0; i < f.length; i++) { ZipExtraField existing; if (f[i] instanceof UnparseableExtraFieldData) { existing = unparseableExtra; } else { existing = getExtraField(f[i].getHeaderId()); } if (existing == null) { [CLASS] ZipArchiveEntry [METHOD] mergeExtraFields [RETURN_TYPE] void  ZipExtraField[] f boolean local [VARIABLES] byte[] b extra rawName ZipExtraField existing boolean local ZipExtraField[] f String entryName name GeneralPurposeBit b gpb UnparseableExtraFieldData unparseableExtra int PLATFORM_FAT PLATFORM_UNIX SHORT_MASK SHORT_SHIFT i internalAttributes method mode platform value long externalAttributes size value LinkedHashMap copy extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	610	610	2	add	
