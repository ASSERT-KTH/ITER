bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
2	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
4	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId());	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
5	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
6	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
8	[BUG]  [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
9	[BUG]  [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unparse  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unparse  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unparse	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
13	[BUG]  [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  LinkedHashMap  <  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
14	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
15	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
16	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  unparseableExtra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  unparseableExtra);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
17	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getExtra(),  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  extra);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
18	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getRawId(),  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  extra);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
19	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  field);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  field);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
20	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getName(),  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  extra);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
21	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  extra);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
22	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
23	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getName(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
24	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
25	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
26	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
27	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
28	[BUG]  [BUGGY]  setExtra(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtra(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
29	[BUG]  [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
30	[BUG]  [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
31	[BUG]  [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
32	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
34	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
35	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
36	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
37	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
38	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
39	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
40	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  fields);	  this.extraFields.put(fields[i].getHeaderId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
41	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  fields);	  this.extraFields.put(fields[i].getHeaderId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
42	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getName(),  fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  fields);	  this.extraFields.put(fields[i].getHeaderId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
43	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  fields);	  this.extraFields.put(fields[i].getHeaderId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
44	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  fields);	  this.extraFields.put(fields[i].getHeaderId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
45	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
46	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
47	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
48	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>();	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
49	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
50	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
51	[BUG]  [BUGGY]  this.extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>();	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
52	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  ArrayList  <  ZipExtraField>();	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
53	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
54	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  TreeMap  <  ZipExtraField>();	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
55	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
56	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  field);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  field);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  field);	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
57	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  source);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  source);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  source);	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
58	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra);	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
59	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  null);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  null);	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
60	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]));  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]));	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
61	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
63	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
64	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
65	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getHeaderId(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getHeaderId(),  fields[i]);	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
66	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getExtra(),  null);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  null);	  this.extraFields.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
67	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getRawId(),  null);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  null);	  this.extraFields.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
68	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId());	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
69	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
70	[BUG]  [BUGGY]  if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
71	[BUG]  [BUGGY]  if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
72	[BUG]  [BUGGY]  if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
73	[BUG]  [BUGGY]  setExtraFields(new  ArrayList  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  ArrayList  <  ZipShort,  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  ArrayList  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
74	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getName(),  null);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  null);	  this.extraFields.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
75	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getFullName(),  null);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  null);	  this.extraFields.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
76	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
77	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
78	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(8);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
79	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
80	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
81	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  fields[i]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
82	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
83	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  unparseableExtra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  unparseableExtra);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
84	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  null);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  null);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
85	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.externalAttributes.put(fields[i],  unparseableExtra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  unparseableExtra);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
86	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>());	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
87	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  extra);	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
88	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  extra);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
89	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId();	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
90	[BUG]  [BUGGY]  setExtraFields(new  TreeMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  TreeMap  <  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  TreeMap  <  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
91	[BUG]  [BUGGY]  setExtraFields(new  HashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraFields(new  HashMap  <  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  HashMap  <  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
92	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(unparseableExtra!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
93	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  extra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  extra);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
94	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra));  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
95	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  unparseableExtra);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
96	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getDataId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getDataId(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getDataId(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
97	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i].getHeaderName(),  fields[i]);  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
98	[BUG]  [BUGGY]  setExtraField(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtraField(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraField(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
99	[BUG]  [BUGGY]  setExtras(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  setExtras(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtras(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
100	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra));  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra));	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
101	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  getExtra());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();    [BUGGY]  this.extraFields.put(fields[i],  getExtra());  [BUGGY]      [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  getExtra());	  this.extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
